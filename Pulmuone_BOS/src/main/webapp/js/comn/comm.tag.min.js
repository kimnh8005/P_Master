/**
 * 라디오 태크를 생성시켜준다.
 * @param {Object} opt
 *
 * opt.id     : Tag 삽입 영역의 아이디
 * opt.url    : 서버호출 URL
 * opt.tagId  : 생성태그의 id, name
 * opt.chkVal : 기본 체크
 * opt.style  : {
 * 		  align : left, center, right
 *        top   : number px
 *        left  : number px
 * opt.nextLine :
 * opt.beforeData : 이전 설정 할 데이터
 * opt.afterData : 이후 설정 할 데이터
 * }
 */
function fnTagMkRadio( opt ){
	let tabClass = opt.tab ? 'class="js__tab"' : '';
	let _tabCont = null;

	if(opt.url != undefined){

		var name = opt.textField  == undefined ? 'NAME' : opt.textField;
		var code = opt.valueField == undefined ? 'CODE' : opt.valueField;


		fnAjax({
			url     : opt.url,
			method  : 'GET',
			params	: opt.params,
			async   : opt.async,
			isDupUrl: opt.isDupUrl ? opt.isDupUrl : "N",
			success :
				function( data ){

					var rows = data['rows']

					var tag   = '';
					var style = '';
					let rowIndex = 0;



					if( opt.style != undefined ){
						style  = 'style="';
						//---------------------------------------------------------
						style += 'text-align:';
						style += opt.style.align ? opt.style.align : 'left';
						//---------------------------------------------------------
						style += ';margin-top:';
						style += opt.style.top ? opt.style.top : '3px';
						style += ';margin-left:';
						style += opt.style.left ? opt.style.left : '0px';
						//---------------------------------------------------------
						style += ';width:';
						style += opt.style.width ? opt.style.width : 'initial';
						//---------------------------------------------------------
						style += ';vertical-align: top';
						style += ';"';
					}

					if(opt.beforeData != undefined ){
						var beforeRow = opt.beforeData;
						$.each(beforeRow, function(idx){
							_tabCont = this.TAB_CONTENT_NAME ? this.TAB_CONTENT_NAME : '';
							tag += '<label>'

							if( this.CODE == opt.chkVal ){
								tag += '<input type="radio" '+ tabClass +' data-tab-content="'+ _tabCont +'"  id="'+ opt.id +'_'+ rowIndex +'" name="'+ opt.tagId +'" value="'+ this.CODE +'" checked="checked"/>';
							}else{
								tag += '<input type="radio" '+ tabClass +' data-tab-content="'+ _tabCont +'"  id="'+ opt.id +'_'+ rowIndex +'" name="'+ opt.tagId +'" value="'+ this.CODE +'"/>';
							}

							tag += '<span>' + this.NAME + '</span>'

							tag += '</label>';
							// tag += '<label for="'+ opt.id +'_'+ rowIndex + '"'+ style +' style="top: -1px;position: relative;">' + this.NAME + '</label>';
							// if(opt.nextLine){
							// 	tag += '</br>';
							// }

							rowIndex++;
						});
					}

					$.each(rows, function(idx){
						_tabCont = this.TAB_CONTENT_NAME ? this.TAB_CONTENT_NAME : '';
						tag += '<label>'

						if( this.CODE == opt.chkVal ){
							tag += '<input type="radio" '+ tabClass +' data-tab-content="'+ _tabCont +'" id="'+ opt.id + '_' + rowIndex +'" name="'+ opt.tagId +'" value="'+ rows[idx][code] +'" checked="checked"/>';
						} else {
							tag += '<input type="radio" '+ tabClass +' data-tab-content="'+ _tabCont +'" id="'+ opt.id + '_' + rowIndex +'" name="'+ opt.tagId +'" value="'+ rows[idx][code] +'"/>';
						}

						tag += '<span>' + rows[idx][name] + '</span>'

						tag += '</label>';

						rowIndex++;
					});

					if(opt.afterData != undefined ){
						var afterRow = opt.afterData;

						$.each(afterRow, function(idx){
							_tabCont = this.TAB_CONTENT_NAME ? this.TAB_CONTENT_NAME : '';
							tag += '<label>'

							if( this.CODE == opt.chkVal ){
								tag += '<input type="radio" '+ tabClass +' data-tab-content="'+ _tabCont +'"  id="'+ opt.id +'_'+ rowIndex +'" name="'+ opt.tagId +'" value="'+ this.CODE +'" checked="checked"/>';
							}else{
								tag += '<input type="radio" '+ tabClass +' data-tab-content="'+ _tabCont +'"  id="'+ opt.id +'_'+ rowIndex +'" name="'+ opt.tagId +'" value="'+ this.CODE +'"/>';
							}

							tag += '<span>' + this.NAME + '</span>'

							tag += '</label>';

							rowIndex++;
						});
					}

					if(opt.nextLine){
							 tag.slice(0,-4);
					}
					$('#'+ opt.id).append( tag );
					if(opt.change !== undefined){
						$('#'+ opt.id).change(function(e) {
							opt.change(e);
						});
					}

					// option에 success가 있을 경우 실행
					if( typeof opt.success === 'function' ) {
						opt.success(data);
					}

				}, //end success
				isAction: 'select'
			});
	} else {
		var rows = opt.data;
		var tag   = '';
		var style = '';
		$.each(rows, function(idx){
			_tabCont = this.TAB_CONTENT_NAME ? this.TAB_CONTENT_NAME : '';

			tag += '<label>'

			if ( this.CODE == opt.chkVal ){
				tag += '<input type="radio" '+ tabClass +' data-tab-content="'+ _tabCont +'" id="'+ opt.id +'_'+ idx +'" name="'+ opt.tagId +'" value="'+ this.CODE +'" checked="checked"/>';
			}
			else {
				tag += '<input type="radio" '+ tabClass +' data-tab-content="'+ _tabCont +'" id="'+ opt.id +'_'+ idx +'" name="'+ opt.tagId +'" value="'+ this.CODE +'"/>';
			}
			tag += '<span>' + this.NAME + '</span>'
			tag += '</label>';
		});

		if(opt.nextLine){
				 tag.slice(0,-4);
		}

		$('#'+ opt.id).html( tag );

		if(opt.change !== undefined){
			$('#'+ opt.id).change(function(e) {
				opt.change(e);
			});
		}
	}
}

/**
 * 체크박스 태크를 생성시켜준다.
 * @param {Object} opt
 *
 * opt.id     : Tag 삽입 영역의 아이디
 * opt.url    : 서버호출 URL
 * opt.tagId  : 생성태그의 id, name
 * opt.chkVal : 기본 체크
 * opt.beforeData : 이전 설정 할 데이터
 * opt.afterData : 이후 설정 할 데이터
 */
function fnTagMkChkBox( opt ){
	if(opt.url != undefined){

		var name = opt.textField  == undefined ? 'NAME' : opt.textField;
		var code = opt.valueField == undefined ? 'CODE' : opt.valueField;
		fnAjax({
			url     : opt.url,
			method  : 'GET',
			params	: opt.params,
			async   : opt.async,
			isDupUrl: opt.isDupUrl ? opt.isDupUrl : "N",
			success :
				function( data ){
					var rows = data.rows;
					var tag  = '';
					let rowIndex = 0;
					var style = '';

                    if(opt.beforeData != undefined ){
                        let beforeRow = opt.beforeData;

                        $.each(beforeRow, function(idx){
							tag += '<label>'

                            if( this.CODE == opt.chkVal ){
                                tag += '<input type="checkbox" id="' + opt.id + '_' + rowIndex + '" name="' + opt.tagId + '" value="' + this.CODE + '" checked="checked"/>';
                            }else{
                                tag += '<input type="checkbox" id="' + opt.id + '_' + rowIndex + '" name="' + opt.tagId + '" value="' + this.CODE + '"/>';
							}

							tag += '<span>' + this.NAME + '</span>'
							tag += '</label>';
                            // tag += '<label for="'+ opt.id +'_'+ rowIndex + '"'+ style +' style="top: -1px;position: relative;">' + this.NAME + '</label>';

                            rowIndex++;
                        });
                    }

					$.each(rows, function(idx){
						tag += '<label>'

						if( this.CODE == opt.chkVal ){
							tag += '<input type="checkbox" id="'+opt.id+'_'+ rowIndex +'" name="'+opt.tagId+'" value="'+rows[idx][code]+'" checked="checked"/>';
						}else{
							tag += '<input type="checkbox" id="'+opt.id+'_'+ rowIndex +'" name="'+opt.tagId+'" value="'+rows[idx][code]+'"/>';
						}

						tag += '<span>' + rows[idx][name] + '</span>'
						tag += '</label>';

						// tag += '<label for="'+ opt.id +'_'+ rowIndex + '"'+ style +'>' + rows[idx][name] + '</label>';

                        rowIndex++;
					});

                    if(opt.afterData != undefined ){
                        let afterRow = opt.afterData;

                        $.each(afterRow, function(idx){
							tag += '<label>'

                            if( this.CODE == opt.chkVal ){
                                tag += '<input type="checkbox" id="' + opt.id + '_' + rowIndex + '" name="' + opt.tagId + '" value="' + this.CODE + '" checked="checked"/>';
                            }else{
                                tag += '<input type="checkbox" id="' + opt.id + '_' + rowIndex + '" name="' + opt.tagId + '" value="' + this.CODE + '"/>';
							}

							tag += '<span>' + this.NAME + '</span>'
							tag += '</label>';

                            // tag += '<label for="'+ opt.id +'_'+ rowIndex + '"'+ style +' style="top: -1px;position: relative;">' + this.NAME + '</label>';

                            rowIndex++;
                        });
                    }

					$('#'+ opt.id).append( tag );
					if(opt.change !== undefined){

					  // ----------------------------------------------------------------
					  // 체크박스 before 추가 시 전체 개수 +1 적용 Start
					  // 김승우 (2020.11.04)
					  var afterLength  = opt.afterData ? opt.afterData.length : 0;
            var beforeLength = opt.beforeData ? opt.beforeData.length : 0;
            var totalLength  = rows.length + afterLength + beforeLength;
            console.log(">>> check" + opt.id + "totalLength" + totalLength +  "rows.length" + rows.length);

            for( var i = 0; i < totalLength; i++ ) {
              $('#'+ opt.id + '_' + i).on("change", function(e) {
                opt.change(this);
              })
            }
  					/*
					  $.each(rows, function(idx){
							$('#'+ opt.id+'_'+idx).change(function() {
								opt.change(this);
							});
						});
						*/
            // 체크박스 before 추가 시 전체 개수 +1 적용 End
            // ----------------------------------------------------------------
					}

					// option에 success가 있을 경우 실행
					if( typeof opt.success === 'function' ) {
						opt.success(data);
					}
				}, //end success
			isAction: 'select'

		});
	}else{
		var rows = opt.data;
		var tag  = '';


		$.each(rows, function(idx){
			tag += '<label>'

			if ( this.CODE == opt.chkVal ) {
				tag += '<input type="checkbox" id="'+ opt.id +'_'+idx +'" name="'+opt.tagId+'" value="'+this.CODE+'" checked="checked"/>';
			} else {
				tag += '<input type="checkbox" id="'+ opt.id +'_'+idx +'" name="'+opt.tagId+'" value="'+this.CODE+'"/>';
			}

			tag += '<span>' + this.NAME + '</span>'
			tag += '</label>';
			// tag += '<label for="'+ opt.id +'_'+idx + '"' +' style="top: -1px;position: relative;">' + this.NAME + '</label>';
		});

		$('#'+ opt.id).append( tag );
		if(opt.change !== undefined){
			$.each(rows, function(idx){
				$('#'+ opt.id+'_'+idx).change(function() {
					opt.change(this);
				});
			});
		}
	}

}


function fnSetAllCheckbox(paramClass, id , isDisabled){
	if(isDisabled){
		var checkAllCnt = $('input[class='+paramClass+']:enabled').length;
		var checkCnt = $('input[class='+paramClass+']:checked:enabled').length;
		if(checkAllCnt > 0){
			if( checkAllCnt == checkCnt){
				$('#'+id).prop("checked", true);
			}else{
				$('#'+id).prop("checked", false);
			}
			$('#'+id).prop("disabled", false);
		}else{
			$('#'+id).prop("disabled", true);
		}
		$('#'+id).on("change", function () {
			if($(this).attr('id') =='checkBoxAll'){
				if($(this).prop("checked")){
					$('input[type=checkbox]:enabled').prop("checked", true);
				}else{
					$('input[type=checkbox]:enabled').prop("checked", false);
				}
			}else{
				if($(this).prop("checked")){
					$('input[class='+paramClass+']:enabled').prop("checked", true);
				}else{
					$('input[class='+paramClass+']:enabled').prop("checked", false);
				}
			}
		});
	}else{
		var checkAllCnt = $('.'+paramClass).length;
		var checkCnt = $('input[class='+paramClass+']:checked').length;
		if( checkAllCnt == checkCnt){
			$('#'+id).prop("checked", true);
		}else{
			$('#'+id).prop("checked", false);
		}

		$('#'+id).on("change", function () {
			if($(this).attr('id') =='checkBoxAll'){
				if($(this).prop("checked")){
					$('input[type=checkbox]').prop("checked", true);
				}else{
					$('input[type=checkbox]').prop("checked", false);
				}
			}else{
				if($(this).prop("checked")){
					$('.'+paramClass).prop("checked", true);
				}else{
					$('.'+paramClass).prop("checked", false);
				}
			}
		});
	}
};

/**
 * 상점정보를 가져온다.
 * @param {Object} opt
 */
function fnTagMkRadioYN(opt){
	if(opt.id ===undefined){
		return ;
	}
	if(opt.tagId ===undefined){
		return ;
	}
	fnTagMkRadio({
		id    :  opt.id
		,data  :  [
						{ "CODE" : "Y" , "NAME":fnGetLangData({key :"359",nullMsg :'예' })}
					, 	{ "CODE" : "N" , "NAME":fnGetLangData({key :"360",nullMsg :'아니오' })}]
		,tagId : opt.tagId
		,chkVal: (opt.chkVal===undefined)? 'Y':opt.chkVal
		,style : {}
		, change : opt.change

	});
};

/**
 * input 태그 enter입력 submit 방지
 *
 */
function fnPreventSubmit(){
	$('input[type="text"]').keydown(function() {
		if (event.keyCode === 13) {
			event.preventDefault();
		}
	});
}