var CLIENT_INFO = {};							// 사용자 인증정보 배열
var CLIENT_TIMER_ID;							// 서버세션 체크 아이디
var CLIENT_TIMER_ID2;							// 자동로그아웃 체크 아이디
var SET_SESSION_CHECK_TIME_CYCLE = 1000 * 60 * 60;   // 서버세션 체크시간 싸이클
//var SET_AUTO_LOGOUT_TIME = 1000 * 60 * 60 * 5; 	// 자동로그아웃 시간설정
var SET_AUTO_LOGOUT_TIME = 1000 * 60 * 60 * 2; 		// 자동로그아웃 시간설정 - TEST
var SET_PASS_REALTIME = 0;

var SET_LOGOUT_CHECK_TIME_CYCLE = 1000 * 20;  	// 자동로그아웃 시간 싸이클




/**
 *   키에 저장된 값을 반환.
 */
function getItem( key ){
	
	var val = sessionStorage.getItem(key);
	
	if( val == 'undefined' || val == null ) val = '';
	
	return val;
}


function getItemUrl( key ){
	
	var val = sessionStorage.getItem(key);
	
	if( val == 'undefined' || val == null ) val = 'f';
	
	return val;
}

/**
 *   key 값을 사용하여 해당 텍스트를 저장함.
 */
function setItem( key, val ){
	sessionStorage.setItem(key, val);
}

/**
 * 키와 데이터 모두 삭제
 */
function removeItem( key ){
	sessionStorage.removeItem(key);
}

/**
 * 저장된 모든 값 삭제
 */
function storageClear( key ){
	sessionStorage.clear();
}

function debugStorage( f ){
		
	if(!f) return;
	
	var output = "SESSIONSTORAGE DATA:\n-------------------------------------\n";
	
	if (sessionStorage) {
	    if (sessionStorage.length) {
	       for (var i = 0; i < sessionStorage.length; i++) {
	           output += sessionStorage.key(i) + ': ' + sessionStorage.getItem(sessionStorage.key(i)) + '\n';
	       }
	    } else {
	       output += 'There is no data stored for this page.' + '\n';
	    }
	} else {
	    output += 'Your browser does not support session storage.' + '\n';
	}
	console.log(output);
	
}


var localStorageUtil = {
	put: function(key, val){
		localStorage.setItem(key, val);
	},
	get: function(key){
		return stringUtil.getString(localStorage.getItem(key), "");
	},
	remove: function(key){
		localStorage.removeItem(key);
	},
	clear: function(){
		localStorage.clear();
	},
	containsKey : function(key){
		return key in localStorage;
	},
}
