<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.pulmuone.v1.comm.mapper.customer.qna.CustomerQnaMapper">

    <!--───────────────────────────────────────────────────────────────────────
     * description 		: 1:1문의 현황 조회
     * @
     * @ 수정일			수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2020.09.18		이원호          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <resultMap type="kr.co.pulmuone.v1.customer.qna.dto.vo.QnaInfoByUserVo" id="qnaInfoByUserResultMap">
        <result column="TOTAL_CNT" property="totalCount"/>
        <result column="RECEPTION_CNT" property="receptionCount"/>
        <result column="ANSWER_CHECKING_CNT" property="answerCheckingCount"/>
        <result column="ANSWER_COMPLETED_CNT" property="answerCompletedCount"/>
    </resultMap>
    <select id="getQnaInfoByUser" resultMap="qnaInfoByUserResultMap">
        /* customerQna.getQnaInfoByUser */
        SELECT SUM(TOTAL_CNT) AS TOTAL_CNT, SUM(RECEPTION_CNT) AS RECEPTION_CNT, SUM(ANSWER_CHECKING_CNT) AS ANSWER_CHECKING_CNT, SUM(ANSWER_COMPLETED_CNT) AS ANSWER_COMPLETED_CNT
        FROM (
            SELECT 1 AS TOTAL_CNT,
                (CASE WHEN STATUS = 'QNA_STATUS.RECEPTION' THEN 1 ELSE 0 END) AS RECEPTION_CNT,
                (CASE WHEN STATUS = 'QNA_STATUS.ANSWER_CHECKING' THEN 1 ELSE 0 END) AS ANSWER_CHECKING_CNT,
                (CASE WHEN STATUS = 'QNA_STATUS.ANSWER_COMPLETED_1ST' THEN 1
                WHEN STATUS = 'QNA_STATUS.ANSWER_COMPLETED_2ND' THEN 1 ELSE 0 END) AS ANSWER_COMPLETED_CNT,
                UR_USER_ID
            FROM CS_QNA
            WHERE UR_USER_ID = #{urUserId}
                AND CREATE_DT BETWEEN #{startDate} AND (#{endDate} + INTERVAL 1 DAY - INTERVAL 1 SECOND)
                AND QNA_TP = #{qnaType}
        ) G1
        GROUP BY G1.UR_USER_ID
    </select>

    <!--───────────────────────────────────────────────────────────────────────
     * description 		: 1:1문의 목록 조회
     * @
     * @ 수정일			수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2020.09.21		이원호          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <resultMap type="kr.co.pulmuone.v1.customer.qna.dto.vo.QnaListByUserVo" id="qnaListByUserResultMap">
        <result column="CS_QNA_ID" property="csQnaId"/>
        <result column="ODID" property="odid"/>
        <result column="ONETOONE_TP_NM" property="onetooneTypeName"/>
        <result column="TITLE" property="title"/>
        <result column="CREATE_DT" property="createDate"/>
        <result column="ANSWER_DT" property="answerDate"/>
        <result column="STATUS_NM" property="statusName"/>
        <result column="STATUS" property="status"/>
        <result column="THUMBNAIL_PATH" property="thumbnailPath"/>
        <result column="IL_GOODS_ID" property="ilGoodsId"/>
        <result column="GOODS_NM" property="goodsName"/>
        <result column="ORDER_GOODS_CNT" property="orderGoodsCount"/>
        <result column="ORDER_DATE" property="orderDate"/>
        <result column="ITEM_NM" property="itemName"/>
        <result column="QUESTION" property="question"/>
        <result column="USER_CHECK_YN" property="userCheckYn"/>
    </resultMap>
    <select id="getQnaListByUser" resultMap="qnaListByUserResultMap">
    /* customerQna.getQnaListByUser */
    SELECT *
    , DATE(G2.CREATE_DATETIME) AS CREATE_DT
    , DATE(G2.ANSWER_DATETIME) AS ANSWER_DT
    FROM (
        SELECT *,
            (CASE WHEN G1.CREATE_DATETIME <![CDATA[>]]> G1.ANSWER_DATETIME OR G1.ANSWER_DATETIME IS NULL THEN G1.CREATE_DATETIME ELSE G1.ANSWER_DATETIME END) AS SORT_SEQ
        FROM (
            SELECT G_QNA.*
                , FN_GOODS_S_IMG(IFNULL(G_QNA.IL_GOODS_ID, 0)) AS THUMBNAIL_PATH
                , IG.GOODS_NM
                , II.ITEM_NM
            FROM (
                SELECT CQ.CS_QNA_ID
                    , OO.ODID
                    , FN_COMN_CODE_DIC(CQ.ONETOONE_TP) AS ONETOONE_TP_NM
                    , CQ.TITLE
                    , CQ.CREATE_DT AS CREATE_DATETIME
                    , (SELECT CQA.ANSWER_DT FROM CS_QNA_ANSWER CQA WHERE CQA.CS_QNA_ID = CQ.CS_QNA_ID ORDER BY ANSWER_DT DESC LIMIT 1) AS ANSWER_DATETIME
                    , (CASE WHEN STATUS = 'QNA_STATUS.ANSWER_COMPLETED_1ST' THEN 'QNA_STATUS.ANSWER_COMPLETED' WHEN STATUS = 'QNA_STATUS.ANSWER_COMPLETED_2ND' THEN 'QNA_STATUS.ANSWER_COMPLETED' ELSE STATUS END) AS STATUS
                    , (CASE WHEN STATUS = 'QNA_STATUS.ANSWER_COMPLETED_1ST' THEN '답변완료' WHEN STATUS = 'QNA_STATUS.ANSWER_COMPLETED_2ND' THEN '답변완료' ELSE FN_COMN_CODE_DIC(STATUS) END) AS STATUS_NM
                    , CQ.QUESTION
                    , (CASE WHEN OD.IL_GOODS_ID IS NOT NULL THEN OD.IL_GOODS_ID ELSE ODP.IL_GOODS_ID END) AS IL_GOODS_ID
                    , DATE(OOD.IC_DT) AS ORDER_DATE
                    , (SELECT USER_CHECK_YN FROM CS_QNA_ANSWER CQA WHERE CQA.CS_QNA_ID = CQ.CS_QNA_ID ORDER BY ANSWER_DT DESC LIMIT 1) AS USER_CHECK_YN
                    ,(CASE WHEN ODP.PROMOTION_TP = 'CART_PROMOTION_TP.EXHIBIT_SELECT' THEN 'EXHIBIT'
                        WHEN ODP.PROMOTION_TP = 'CART_PROMOTION_TP.GREENJUICE_SELECT' THEN 'GREENJUICE'
                        WHEN ODP.GOODS_TP_CD = 'GOODS_TYPE.PACKAGE' THEN 'PACKAGE'
                        ELSE 'NORMAL' END) AS PACK_TYPE
                    , ODP.GOODS_NM AS PACK_TITLE
                FROM CS_QNA CQ
                    LEFT OUTER JOIN OD_ORDER OO ON CQ.OD_ORDER_ID = OO.OD_ORDER_ID
                    LEFT OUTER JOIN OD_ORDER_DETL OD ON OO.OD_ORDER_ID = OD.OD_ORDER_ID AND CQ.OD_ORDER_DETL_ID = OD.OD_ORDER_DETL_ID
                    LEFT OUTER JOIN OD_ORDER_DETL_PACK ODP ON CQ.OD_ORDER_ID = ODP.OD_ORDER_ID AND CQ.OD_ORDER_DETL_ID = ODP.OD_ORDER_DETL_ID
                    LEFT OUTER JOIN OD_ORDER_DT OOD ON OO.OD_ORDER_ID = OOD.OD_ORDER_ID
                WHERE CQ.UR_USER_ID = #{urUserId}
                    AND CQ.CREATE_DT BETWEEN #{startDate} AND (#{endDate} + INTERVAL 1 DAY - INTERVAL 1 SECOND)
                    AND CQ.QNA_TP = 'QNA_TP.ONETOONE'
            ) G_QNA
            LEFT OUTER JOIN IL_GOODS IG ON G_QNA.IL_GOODS_ID = IG.IL_GOODS_ID
            LEFT OUTER JOIN IL_ITEM II ON IG.IL_ITEM_CD = II.IL_ITEM_CD
        ) G1
    ) G2
    ORDER BY G2.SORT_SEQ DESC
	</select>

    <!--───────────────────────────────────────────────────────────────────────
     * description 		: 1:1문의 이미지 조회
     * @
     * @ 수정일			수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2020.09.22		이원호          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <resultMap type="kr.co.pulmuone.v1.customer.qna.dto.vo.QnaAttcByCsQnaIdVo" id="qnaAttcByCsQnaIdResultMap">
        <result column="THUMBNAIL_ORIGIN_NM" property="thumbnailOriginalName"/>
        <result column="THUMBNAIL_NM" property="thumbnailName"/>
        <result column="THUMBNAIL_PATH" property="thumbnailPath"/>
        <result column="IMG_ORIGIN_NM" property="imageOriginalName"/>
        <result column="IMG_NM" property="imageName"/>
        <result column="IMG_PATH" property="imagePath"/>
        <result column="THUMBNAIL_NAME_PATH" property="thumbnailNamePath"/>
        <result column="IMG_NAME_PATH" property="imageNamePath"/>
    </resultMap>
    <select id="getQnaAttcByCsQnaId" resultMap="qnaAttcByCsQnaIdResultMap">
        /* customerQna.getQnaAttcByCsQnaId */
        SELECT THUMBNAIL_ORIGIN_NM,
            THUMBNAIL_NM,
            THUMBNAIL_PATH,
            IMG_ORIGIN_NM,
            IMG_NM,
            IMG_PATH,
            THUMBNAIL_PATH + THUMBNAIL_NM AS THUMBNAIL_NAME_PATH,
            IMG_PATH + IMG_NM AS IMG_NAME_PATH
        FROM CS_QNA_ATTC
        WHERE CS_QNA_ID = #{csQnaId}
        ORDER BY CREATE_DT ASC
    </select>

    <!--───────────────────────────────────────────────────────────────────────
     * description 		: 1:1문의 답변 조회
     * @
     * @ 수정일			수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2020.09.22		이원호          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <resultMap type="kr.co.pulmuone.v1.customer.qna.dto.vo.QnaAnswerByCsQnaIdVo" id="qnaAnswerByCsQnaIdResultMap">
        <result column="ANSWER_TP" property="answerType"/>
        <result column="ANSWER" property="answer"/>
        <result column="ANSWER_DT" property="answerDate"/>
        <result column="ANSWER_DT_TIME" property="answerDateTime"/>
    </resultMap>
    <select id="getQnaAnswerByCsQnaId" resultMap="qnaAnswerByCsQnaIdResultMap">
        /* customerQna.getQnaAttcByCsQnaId */
        SELECT ANSWER_TP
            ,ANSWER
            ,DATE(ANSWER_DT) AS ANSWER_DT
            ,DATE_FORMAT(ANSWER_DT, '%Y-%m-%d %H:%i') AS ANSWER_DT_TIME
        FROM CS_QNA_ANSWER
        WHERE CS_QNA_ID = #{csQnaId}
        ORDER BY ANSWER_DT ASC
    </select>

    <!--───────────────────────────────────────────────────────────────────────
     * description 		: 답변 수정
     * @
     * @ 수정일			수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2021.01.04		이원호          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <update id="putQnaAnswerUserCheckYn">
        /* customerQna.putQnaAnswerUserCheckYn */
        UPDATE CS_QNA_ANSWER
        SET USER_CHECK_YN = 'Y'
        WHERE CS_QNA_ID = #{csQnaId}
    </update>

    <!--───────────────────────────────────────────────────────────────────────
     * description 		: 상품문의 목록 조회
     * @
     * @ 수정일			수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2020.09.22		이원호          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <resultMap type="kr.co.pulmuone.v1.customer.qna.dto.vo.ProductQnaListByUserVo" id="productQnaListByUserResultMap">
        <result column="CS_QNA_ID" property="csQnaId"/>
        <result column="THUMBNAIL_PATH" property="thumbnailPath"/>
        <result column="IL_GOODS_ID" property="ilGoodsId"/>
        <result column="GOODS_NM" property="goodsName"/>
        <result column="ITEM_NM" property="itemName"/>
        <result column="PRODUCT_TP_NM" property="productTypeName"/>
        <result column="TITLE" property="title"/>
        <result column="CREATE_DT" property="createDate"/>
        <result column="ANSWER_DT" property="answerDate"/>
        <result column="STATUS" property="status"/>
        <result column="STATUS_NM" property="statusName"/>
        <result column="QUESTION" property="question"/>
        <result column="SECRET_TP" property="secretType"/>
        <result column="ANSWER_SMS_YN" property="answerSmsYn"/>
        <result column="ANSWER_MAIL_YN" property="answerMailYn"/>
        <result column="USER_CHECK_YN" property="userCheckYn"/>
        <result column="PACK_TYPE" property="packType"/>
    </resultMap>
    <select id="getProductQnaListByUser" resultMap="productQnaListByUserResultMap">
        /* customerQna.getProductQnaListByUser */
        SELECT *,
            DATE(G2.CREATE_DATETIME) AS CREATE_DT,
            DATE(G2.ANSWER_DATETIME) AS ANSWER_DT
            FROM (
                SELECT *,
                    (CASE WHEN G1.CREATE_DATETIME <![CDATA[>]]> G1.ANSWER_DATETIME OR G1.ANSWER_DATETIME IS NULL THEN G1.CREATE_DATETIME ELSE G1.ANSWER_DATETIME END) AS SORT_SEQ
                FROM (
                    SELECT CQ.CS_QNA_ID,
                        FN_GOODS_S_IMG(IFNULL(IG.IL_GOODS_ID, 0)) AS THUMBNAIL_PATH,
                        IG.IL_GOODS_ID,
                        IG.GOODS_NM,
                        II.ITEM_NM,
                        FN_COMN_CODE_DIC(CQ.PRODUCT_TP) AS PRODUCT_TP_NM,
                        CQ.TITLE,
                        CQ.CREATE_DT AS CREATE_DATETIME,
                        (SELECT CQA.ANSWER_DT FROM CS_QNA_ANSWER CQA WHERE CQA.CS_QNA_ID = CQ.CS_QNA_ID ORDER BY ANSWER_DT DESC LIMIT 1) AS ANSWER_DATETIME,
                        (CASE WHEN STATUS = 'QNA_STATUS.ANSWER_COMPLETED_1ST' THEN 'QNA_STATUS.ANSWER_COMPLETED' WHEN STATUS = 'QNA_STATUS.ANSWER_COMPLETED_2ND' THEN 'QNA_STATUS.ANSWER_COMPLETED' ELSE STATUS END) AS STATUS,
                        (CASE WHEN STATUS = 'QNA_STATUS.ANSWER_COMPLETED_1ST' THEN '답변완료' WHEN STATUS = 'QNA_STATUS.ANSWER_COMPLETED_2ND' THEN '답변완료' ELSE FN_COMN_CODE_DIC(STATUS) END) AS STATUS_NM,
                        CQ.QUESTION,
                        (CASE WHEN SECRET_TP = 'QNA_SECRET_TP.CLOSE_ADMIN' THEN 'QNA_SECRET_TP.CLOSE'
                            WHEN STATUS = 'QNA_SECRET_TP.CLOSE_CUSTOMER' THEN 'QNA_SECRET_TP.CLOSE'
                            ELSE  SECRET_TP  END) AS SECRET_TP
                        , CQ.ANSWER_SMS_YN
                        , CQ.ANSWER_MAIL_YN
                        , (SELECT USER_CHECK_YN FROM CS_QNA_ANSWER CQA WHERE CQA.CS_QNA_ID = CQ.CS_QNA_ID ORDER BY CQA.ANSWER_DT DESC LIMIT 1) AS USER_CHECK_YN
                        , (CASE WHEN IG.GOODS_TP = 'GOODS_TYPE.PACKAGE' THEN 'PACKAGE'
                            WHEN IG.GOODS_TP = 'GOODS_TYPE.DAILY' AND IG.GOODS_DAILY_TP = 'GOODS_DAILY_TP.GREENJUICE' THEN 'GREENJUICE'
                            ELSE 'NORMAL' END) AS PACK_TYPE
                    FROM CS_QNA CQ
                        LEFT OUTER JOIN OD_ORDER OO ON CQ.OD_ORDER_ID = OO.OD_ORDER_ID
                        LEFT OUTER JOIN IL_GOODS IG ON CQ.IL_GOODS_ID = IG.IL_GOODS_ID
                        LEFT OUTER JOIN IL_ITEM II ON IG.IL_ITEM_CD = II.IL_ITEM_CD
                    WHERE CQ.UR_USER_ID =  #{urUserId}
                        AND CQ.CREATE_DT BETWEEN #{startDate} AND (#{endDate} + INTERVAL 1 DAY - INTERVAL 1 SECOND)
                        AND CQ.QNA_TP = 'QNA_TP.PRODUCT'
                ) G1
            ) G2
        ORDER BY G2.SORT_SEQ DESC
    </select>

    <!--───────────────────────────────────────────────────────────────────────
	 * description 		: 문의현황 비공개처리 - 고객
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.09.22		이원호          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
    <update id="putProductQnaSetSecretByUser">
        /*	customerQna.putProductQnaSetSecretByUser	*/
        UPDATE CS_QNA
        SET SECRET_TP = 'QNA_SECRET_TP.CLOSE_CUSTOMER',
            MODIFY_DT = now()
        WHERE CS_QNA_ID = #{csQnaId}
    </update>

    <!--───────────────────────────────────────────────────────────────────────
     * description 		: 상품문의 목록 조회 - 상품상세
     * @
     * @ 수정일			수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2020.10.06		이원호          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <resultMap type="kr.co.pulmuone.v1.customer.qna.dto.vo.ProductQnaListByGoodsVo" id="productQnaListByGoodsResultMap">
        <result column="CS_QNA_ID" property="csQnaId"/>
        <result column="STATUS" property="status"/>
        <result column="STATUS_NM" property="statusName"/>
        <result column="LOGIN_ID" property="loginId"/>
        <result column="CREATE_DT_TIME" property="createDateTime"/>
        <result column="PRODUCT_TP_NM" property="productTypeName"/>
        <result column="TITLE" property="title"/>
        <result column="QUESTION" property="question"/>
        <result column="MY_QNA_YN" property="myQnaYn"/>
        <result column="SECRET_TP" property="secretType"/>
        <result column="ANSWER_SMS_YN" property="answerSmsYn"/>
        <result column="ANSWER_MAIL_YN" property="answerMailYn"/>
    </resultMap>
    <select id="getProductQnaListByGoods" resultMap="productQnaListByGoodsResultMap">
        /* customerQna.getProductQnaListByGoods */
        SELECT CS_QNA_ID,
            (CASE WHEN STATUS = 'QNA_STATUS.ANSWER_COMPLETED_1ST' THEN 'QNA_STATUS.ANSWER_COMPLETED' WHEN STATUS = 'QNA_STATUS.ANSWER_COMPLETED_2ND' THEN 'QNA_STATUS.ANSWER_COMPLETED' ELSE STATUS END) AS STATUS,
            (CASE WHEN STATUS = 'QNA_STATUS.ANSWER_COMPLETED_1ST' THEN '답변완료' WHEN STATUS = 'QNA_STATUS.ANSWER_COMPLETED_2ND' THEN '답변완료' ELSE FN_COMN_CODE_DIC(STATUS) END) AS STATUS_NM,
            LOGIN_ID,
            DATE_FORMAT(CREATE_DT, '%Y-%m-%d %H:%i') AS CREATE_DT_TIME,
            FN_COMN_CODE_DIC(PRODUCT_TP) AS PRODUCT_TP_NM,
            TITLE,
            (CASE WHEN SECRET_TP != 'QNA_SECRET_TP.OPEN' THEN
                (CASE WHEN UR_USER_ID = #{urUserId} THEN QUESTION ELSE '' END)
                ELSE QUESTION
                END) AS QUESTION,
            (CASE WHEN UR_USER_ID = #{urUserId} THEN 'Y' ELSE 'N' END) AS MY_QNA_YN,
            SECRET_TP,
            ANSWER_SMS_YN,
            ANSWER_MAIL_YN
        FROM CS_QNA
        WHERE IL_GOODS_ID = #{ilGoodsId}
            AND QNA_TP = 'QNA_TP.PRODUCT'
            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(myQnaYn,'Y') and @kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(urUserId)">
                AND UR_USER_ID = #{urUserId}
            </if>
        ORDER BY CREATE_DT DESC
    </select>


    <!--───────────────────────────────────────────────────────────────────────
	 * description 		: 상품문의 작성 -  추가
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.10.06		이원호          최초생성
	 * @ 2020.12.15		천혜현	  ecs분류 코드 추가
	────────────────────────────────────────────────────────────────────────-->
    <insert id="addProductQna">
        /*	customerQna.addProductQna	*/
        INSERT INTO CS_QNA(
            UR_USER_ID, QNA_TP, PRODUCT_TP, IL_GOODS_ID, TITLE,
            QUESTION, `STATUS`, SECRET_TP, ANSWER_SMS_YN, ANSWER_MAIL_YN,
            LOGIN_ID, USER_NM, MAIL, MOBILE, HD_BCODE, HD_SCODE, CLAIM_GUBUN,
            CREATE_DT, MODIFY_DT
        )
        SELECT
            #{urUserId}, 'QNA_TP.PRODUCT', #{productType}, #{ilGoodsId}, #{title},
            #{question}, 'QNA_STATUS.RECEPTION', #{secretType}, #{answerSmsYn}, #{answerMailYn},
            UU.LOGIN_ID, UU.USER_NM, UB.MAIL, UB.MOBILE, #{hdBcode}, #{hdScode}, #{claimGubun},
            NOW(), NOW()
        FROM UR_USER UU
            INNER JOIN UR_BUYER UB ON UU.UR_USER_ID = UB.UR_USER_ID
        WHERE UU.UR_USER_ID = #{urUserId}

        <selectKey resultType="Long" keyProperty="csQnaId" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <!--───────────────────────────────────────────────────────────────────────
     * description 		: 상품문의 조회 - 상품상세
     * @
     * @ 수정일			수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2020.10.12		이원호          최초생성
     * @ 2020.12.15		천혜현	  상품정보 추가
    ────────────────────────────────────────────────────────────────────────-->
    <resultMap type="kr.co.pulmuone.v1.customer.qna.dto.vo.ProductQnaListByGoodsVo" id="productQnaByGoodsResultMap">
        <result column="CS_QNA_ID" property="csQnaId"/>
        <result column="STATUS" property="status"/>
        <result column="STATUS_NM" property="statusName"/>
        <result column="LOGIN_ID" property="loginId"/>
        <result column="CREATE_DT_TIME" property="createDateTime"/>
        <result column="PRODUCT_TP_NM" property="productTypeName"/>
        <result column="TITLE" property="title"/>
        <result column="QUESTION" property="question"/>
        <result column="MY_QNA_YN" property="myQnaYn"/>
        <result column="SECRET_TP" property="secretType"/>
        <result column="ANSWER_SMS_YN" property="answerSmsYn"/>
        <result column="ANSWER_MAIL_YN" property="answerMailYn"/>
        <result column="GOODS_NM" property="goodsName"/>
    </resultMap>
    <select id="getProductQnaByCsQnaId" resultMap="productQnaByGoodsResultMap">
        /* customerQna.getProductQnaByCsQnaId */
        SELECT CQ.CS_QNA_ID,
            (CASE WHEN CQ.STATUS = 'QNA_STATUS.ANSWER_COMPLETED_1ST' THEN 'QNA_STATUS.ANSWER_COMPLETED' WHEN CQ.STATUS = 'QNA_STATUS.ANSWER_COMPLETED_2ND' THEN 'QNA_STATUS.ANSWER_COMPLETED' ELSE CQ.STATUS END) AS STATUS,
            (CASE WHEN CQ.STATUS = 'QNA_STATUS.ANSWER_COMPLETED_1ST' THEN '답변완료' WHEN CQ.STATUS = 'QNA_STATUS.ANSWER_COMPLETED_2ND' THEN '답변완료' ELSE FN_COMN_CODE_DIC(CQ.STATUS) END) AS STATUS_NM,
            CQ.LOGIN_ID,
            DATE_FORMAT(CQ.CREATE_DT, '%Y-%m-%d %H:%i') AS CREATE_DT_TIME,
            FN_COMN_CODE_DIC(CQ.PRODUCT_TP) AS PRODUCT_TP_NM,
            CQ.TITLE,
            (CASE WHEN CQ.SECRET_TP != 'QNA_SECRET_TP.OPEN' THEN
                (CASE WHEN CQ.UR_USER_ID = #{urUserId} THEN CQ.QUESTION ELSE '' END)
                ELSE CQ.QUESTION
                END) AS QUESTION,
            (CASE WHEN CQ.UR_USER_ID = #{urUserId} THEN 'Y' ELSE 'N' END) AS MY_QNA_YN,
            CQ.SECRET_TP,
            CQ.ANSWER_SMS_YN,
            CQ.ANSWER_MAIL_YN,
            IG.GOODS_NM
        FROM CS_QNA CQ
        	LEFT JOIN IL_GOODS IG ON IG.IL_GOODS_ID = CQ.IL_GOODS_ID
        WHERE CQ.CS_QNA_ID = #{csQnaId}
            AND CQ.QNA_TP = 'QNA_TP.PRODUCT'
    </select>

    <!--───────────────────────────────────────────────────────────────────────
     * description 		: 상품 문의 상세 조회
     * @
     * @ 수정일			수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2020.10.06		이원호          최초생성
     * @ 2020.12.15		천혜현	  상품정보 추가
    ────────────────────────────────────────────────────────────────────────-->
    <resultMap type="kr.co.pulmuone.v1.customer.qna.dto.vo.ProductQnaVo" id="productQnaResultMap">
        <result column="CS_QNA_ID" property="csQnaId"/>
        <result column="PRODUCT_TP" property="productType"/>
        <result column="TITLE" property="title"/>
        <result column="QUESTION" property="question"/>
        <result column="SECRET_TP" property="secretType"/>
        <result column="ANSWER_SMS_YN" property="answerSmsYn"/>
        <result column="ANSWER_MAIL_YN" property="answerMailYn"/>
        <result column="UR_USER_ID" property="urUserId"/>
        <result column="STATUS" property="status"/>
        <result column="IL_GOODS_ID" property="ilGoodsId"/>
        <result column="GOODS_NM" property="goodsName"/>
    </resultMap>
    <select id="getProductQnaByGoods" resultMap="productQnaResultMap">
        /* customerQna.getProductQnaByGoods */
        SELECT CQ.CS_QNA_ID,
            CQ.PRODUCT_TP,
            CQ.TITLE,
            CQ.QUESTION,
            (CASE WHEN CQ.SECRET_TP = 'QNA_SECRET_TP.CLOSE_CUSTOMER' THEN 'Y' ELSE 'N' END) AS SECRET_TP,
            CQ.ANSWER_SMS_YN,
            CQ.ANSWER_MAIL_YN,
            CQ.UR_USER_ID,
            CQ.STATUS,
            CQ.IL_GOODS_ID,
            IG.GOODS_NM
        FROM CS_QNA CQ
        	LEFT JOIN IL_GOODS IG ON IG.IL_GOODS_ID = CQ.IL_GOODS_ID
        WHERE CS_QNA_ID = #{csQnaId}
    </select>

    <!--───────────────────────────────────────────────────────────────────────
	 * description 		: 상품문의 수정
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.10.06		이원호          최초생성
	 * @ 2020.12.15		천혜현	  ecs분류 코드 추가
	────────────────────────────────────────────────────────────────────────-->
    <update id="putProductQna">
        /*	customerQna.putProductQna	*/
        UPDATE CS_QNA
        SET PRODUCT_TP = #{productType},
            TITLE = #{title},
            QUESTION = #{question},
            SECRET_TP = #{secretType},
            ANSWER_SMS_YN = #{answerSmsYn},
            ANSWER_MAIL_YN = #{answerMailYn},
            HD_BCODE = #{hdBcode},
			HD_SCODE = #{hdScode},
			CLAIM_GUBUN = #{claimGubun}
        WHERE CS_QNA_ID = #{csQnaId}
    </update>

    <!--───────────────────────────────────────────────────────────────────────
	 * description 		: 1:1 문의 등록
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.11.30		최윤지          최초생성
	 * @ 2020.12.15		천혜현	  ecs분류 코드 추가
	────────────────────────────────────────────────────────────────────────-->
	<insert id = "addQnaByUser" >
	/* customerQna.addQnaByUser */
    INSERT INTO CS_QNA
          (
           UR_USER_ID
          ,QNA_TP
          ,ONETOONE_TP
          ,STATUS
          ,SECRET_TP
          ,OD_ORDER_ID
          ,OD_ORDER_DETL_ID
          ,TITLE
          ,QUESTION
          ,ANSWER_SMS_YN
          ,ANSWER_MAIL_YN
          ,LOGIN_ID
          ,USER_NM
          ,MAIL
          ,MOBILE
          ,HD_BCODE
		  ,HD_SCODE
		  ,CLAIM_GUBUN
          )
    SELECT
           #{urUserId}
          ,'QNA_TP.ONETOONE'
          ,#{onetooneType}
          ,'QNA_STATUS.RECEPTION'
          ,'QNA_SECRET_TP.OPEN'
          ,#{odOrderId}
          ,#{odOrderDetlId}
          ,#{title}
          ,#{question}
          ,#{answerSmsYn}
          ,#{answerMailYn}
          ,UU.LOGIN_ID
          ,UU.USER_NM
          ,UB.MAIL
          ,UB.MOBILE
          ,#{hdBcode}
          ,#{hdScode}
          ,#{claimGubun}
     FROM
          UR_USER UU
          INNER JOIN UR_BUYER UB ON UU.UR_USER_ID = UB.UR_USER_ID
    WHERE
          UU.UR_USER_ID = #{urUserId}
        <selectKey resultType="Long" keyProperty="csQnaId" order="AFTER">
          SELECT LAST_INSERT_ID()
        </selectKey>
	</insert>

    <!--───────────────────────────────────────────────────────────────────────
	 * description 		: 1:1 문의 등록 (이미지)
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.12.01		최윤지          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<insert id="addQnaImage">
        /* customerQna.addQnaImage */
       INSERT INTO CS_QNA_ATTC
       		(
       		 CS_QNA_ID,
             IMG_ORIGIN_NM,
             IMG_NM,
             IMG_PATH,
             THUMBNAIL_ORIGIN_NM,
             THUMBNAIL_NM,
             THUMBNAIL_PATH
            )
       VALUES
        	(
        	 #{csQnaId},
        	 #{imageOriginalName},
        	 #{imageName},
        	 #{imagePath},
        	 #{thumbnailOriginalName},
        	 #{thumbnailName},
        	 #{thumbnailPath}
        	)
    </insert>

	 <!--───────────────────────────────────────────────────────────────────────
	 * description 		: 1:1 문의 수정
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.12.02		최윤지          최초생성
	 * @ 2020.12.15		천혜현	  ecs분류 코드 추가
	────────────────────────────────────────────────────────────────────────-->
	<update id ="putQnaByUser">
	/*	customerQna.putQnaByUser */
        UPDATE
               CS_QNA
           SET
               ONETOONE_TP = #{onetooneType}
              ,TITLE = #{title}
              ,QUESTION = #{question}
              ,ANSWER_SMS_YN = #{answerSmsYn}
              ,ANSWER_MAIL_YN = #{answerMailYn}
              ,HD_BCODE = #{hdBcode}
			  ,HD_SCODE = #{hdScode}
			  ,CLAIM_GUBUN = #{claimGubun}
			  ,OD_ORDER_ID = #{odOrderId}
			  ,OD_ORDER_DETL_ID = #{odOrderDetlId}
         WHERE
               CS_QNA_ID = #{csQnaId}
           AND UR_USER_ID = #{urUserId}
	</update>

	<!--───────────────────────────────────────────────────────────────────────
	 * description : 1:1 문의에 등록된 문의 이미지 조회
	 * @
	 * @ 수정일			수정자		  수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.12.02		최윤지		  최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<resultMap type="kr.co.pulmuone.v1.customer.qna.dto.vo.OnetooneQnaByUserAttcVo" id="qnaImageMap">
		<result column="CS_QNA_ID" property="csQnaId"/>
		<result column="THUMBNAIL_ORIGIN_NM" property="thumbnailOriginalName"/>
        <result column="THUMBNAIL_NM" property="thumbnailName"/>
        <result column="THUMBNAIL_PATH" property="thumbnailPath"/>
        <result column="IMG_ORIGIN_NM" property="imageOriginalName"/>
        <result column="IMG_NM" property="imageName"/>
        <result column="IMG_PATH" property="imagePath"/>
    </resultMap>

	<select id="qnaImageList" resultMap="qnaImageMap">
	/* customerQna.qnaImageList */
	SELECT
		   CS_QNA_ID
          ,IMG_ORIGIN_NM
          ,IMG_NM
          ,IMG_PATH
          ,THUMBNAIL_ORIGIN_NM
          ,THUMBNAIL_NM
          ,THUMBNAIL_PATH
	  FROM
		   CS_QNA_ATTC
	 WHERE
		   CS_QNA_ID = #{csQnaId}
	</select>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 1:1 문의 수정 이미지 삭제
	 * @
	 * @ 수정일			수정자		  수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.12.02		최윤지		  최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<delete id="delQnaImage">
		/* customerQna.delqnaImage */
		DELETE FROM CS_QNA_ATTC WHERE CS_QNA_ID = #{csQnaId}
	</delete>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 1:1 문의 상세 조회 (이미지 제외)
	 * @
	 * @ 수정일			수정자		  수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.12.02		최윤지		  최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<resultMap type="kr.co.pulmuone.v1.customer.qna.dto.vo.OnetooneQnaByUserVo" id="qnaByUserMap">
		<result column="CS_QNA_ID" property="csQnaId"/>
		<result column="ONETOONE_TP" property="onetooneType"/>
        <result column="OD_ORDER_ID" property="odOrderId"/>
        <result column="OD_ORDER_DETL_ID" property="odOrderDetlId"/>
        <result column="TITLE" property="title"/>
        <result column="QUESTION" property="question"/>
        <result column="ANSWER_SMS_YN" property="answerSmsYn"/>
        <result column="ANSWER_MAIL_YN" property="answerMailYn"/>
        <result column="STATUS" property="status"/>
        <result column="GOODS_NM" property="goodsName"/>
        <result column="IMAGE_PATH" property="imagePath"/>
        <result column="IMG_ORIGIN_NM" property="imageOriginalName"/>
    </resultMap>
	<select id = "getQnaDetailByUser" resultMap="qnaByUserMap">
	/* customerQna.getQnaDetailByUser */
    SELECT
    	CQ.CS_QNA_ID
	    ,CQ.ONETOONE_TP
	    ,CQ.OD_ORDER_ID
	    ,CQ.OD_ORDER_DETL_ID
	    ,CQ.TITLE
	    ,CQ.QUESTION
	    ,CQ.ANSWER_SMS_YN
	    ,CQ.ANSWER_MAIL_YN
	    ,(CASE WHEN CQ.STATUS = 'QNA_STATUS.ANSWER_COMPLETED_1ST' THEN 'QNA_STATUS.ANSWER_COMPLETED'
	    	 WHEN CQ.STATUS = 'QNA_STATUS.ANSWER_COMPLETED_2ND' THEN 'QNA_STATUS.ANSWER_COMPLETED'
	   		 ELSE CQ.STATUS END) AS STATUS
	    ,IG.GOODS_NM
	    , (CASE WHEN IG.GOODS_TP = 'GOODS_TYPE.PACKAGE' THEN
                (CASE WHEN IG.GOODS_PACKAGE_IMG_TP = 'GOODS_PACKAGE_IMG_TP.NORMAL_GOODS' THEN ITM_IMG.MS_IMG ELSE IMG.MS_IMG END)
                ELSE ITM_IMG.MS_IMG
                END) AS IMAGE_PATH
		,ITM_IMG.IMG_ORIGIN_NM
	FROM
		CS_QNA CQ
	    LEFT OUTER JOIN OD_ORDER_DETL OOD ON CQ.OD_ORDER_DETL_ID = OOD.OD_ORDER_DETL_ID
	    LEFT OUTER JOIN IL_GOODS IG ON IG.IL_GOODS_ID = OOD.IL_GOODS_ID
	    LEFT OUTER JOIN IL_GOODS_IMG IMG ON IMG.IL_GOODS_ID = OOD.IL_GOODS_ID AND IMG.BASIC_YN = 'Y'
        LEFT JOIN IL_ITEM_IMG ITM_IMG ON ITM_IMG.IL_ITEM_CD = IG.IL_ITEM_CD AND ITM_IMG.BASIC_YN = 'Y'
	WHERE
		CQ.CS_QNA_ID = #{csQnaId}
		AND CQ.UR_USER_ID = #{urUserId}
	</select>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 1:1 문의 주문조회 팝업조회 (상세 제외)
	 * @
	 * @ 수정일			수정자		  수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.12.14		최윤지		  최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<resultMap type="kr.co.pulmuone.v1.customer.qna.dto.vo.OnetooneQnaOrderInfoByUserVo" id="qnaOrderInfoByUserMap">
		<result column="CREATE_DT" property="createDate"/>
        <result column="OD_ORDER_ID" property="odOrderId"/>
        <result column="ODID" property="odId"/>
    </resultMap>
	<select id="getOrderInfoPopupByQna" resultMap="qnaOrderInfoByUserMap">
	/* customerQna.getOrderInfoPopupByQna */
    SELECT
           OOD.CREATE_DT
          ,OO.OD_ORDER_ID
          ,OO.ODID
      FROM OD_ORDER OO
        INNER JOIN OD_ORDER_DT OOD ON OO.OD_ORDER_ID = OOD.OD_ORDER_ID
        INNER JOIN OD_ORDER_DETL OD ON OO.OD_ORDER_ID = OD.OD_ORDER_ID
     WHERE OO.UR_USER_ID = #{urUserId}
        AND OO.ORDER_YN = 'Y'
        <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchPeriod,'1WEEK')">
          AND OOD.CREATE_DT BETWEEN DATE_ADD(now(), INTERVAL-1 WEEK) AND now()
        </if>
        <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchPeriod,'1MONTH')">
          AND OOD.CREATE_DT BETWEEN DATE_ADD(now(), INTERVAL-1 MONTH) AND now()
        </if>
        <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchPeriod,'3MONTH')">
          AND OOD.CREATE_DT BETWEEN DATE_ADD(now(), INTERVAL-3 MONTH) AND now()
        </if>
    GROUP BY OO.OD_ORDER_ID, OOD.CREATE_DT, OO.ODID
    ORDER BY OO.OD_ORDER_ID DESC
	</select>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 1:1 문의 주문조회 팝업조회 (OD_ORDER_ID 기반 상세조회)
	 * @
	 * @ 수정일			수정자		  수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.12.15		최윤지		  최초생성
	 * @ 2021.03.16		최윤지		  묶음상품, 골라담기 추가
	────────────────────────────────────────────────────────────────────────-->
	<resultMap type="kr.co.pulmuone.v1.customer.qna.dto.vo.OnetooneQnaOrderDetailInfoByUserVo" id="qnaOrderDetailInfoByUserMap">
        <result column="OD_ORDER_DETL_ID" property="odOrderDetlId"/>
        <result column="GOODS_NM" property="goodsName"/>
        <result column="IMG_ORIGIN_NM" property="imageOriginalName"/>
        <result column="S_IMG" property="imagePath"/>
        <result column="GOODS_NM_LIST" property="goodsNmList"/>
        <result column="PROMOTION_TP" property="promotionTp"/>
    </resultMap>
    <select id="getOrderDetlInfoPopupByQna" resultMap="qnaOrderDetailInfoByUserMap">
    /* customerQna.getOrderDetlInfoPopupByQna */
        SELECT G1.OD_ORDER_DETL_ID,
            G1.IL_GOODS_ID,
            G1.GOODS_NM,
            FN_GOODS_S_IMG(IFNULL(G1.IL_GOODS_ID, 0)) AS S_IMG,
            (CASE WHEN IG.GOODS_TP = 'GOODS_TYPE.PACKAGE' THEN
                CASE WHEN IG.GOODS_PACKAGE_IMG_TP = 'GOODS_PACKAGE_IMG_TP.NORMAL_GOODS' THEN ITM_IMG.IMG_ORIGIN_NM ELSE IMG.IMG_ORIGIN_NM END
                ELSE ITM_IMG.IMG_ORIGIN_NM
                END) AS IMG_ORIGIN_NM,
            G1.GOODS_NM_LIST,
            IFNULL(G1.PROMOTION_TP, '0') AS PROMOTION_TP
        FROM
            (
            SELECT GNORMAL.OD_ORDER_ID,
                GNORMAL.OD_ORDER_DETL_ID,
                GNORMAL.IL_GOODS_ID,
                GNORMAL.GOODS_NM,
                '0' AS GOODS_NM_LIST,
                IFNULL(GNORMAL.PROMOTION_TP, '0') AS PROMOTION_TP
            FROM (
                SELECT OO.OD_ORDER_ID,
                    OD.OD_ORDER_DETL_ID,
                    OD.IL_GOODS_ID,
                    OD.GOODS_NM,
                    OD.PROMOTION_TP,
                    (SELECT COUNT(*) FROM OD_ORDER_DETL_PACK OODP WHERE OD.OD_ORDER_ID = OODP.OD_ORDER_ID AND OD.OD_ORDER_DETL_PARENT_ID = OODP.OD_ORDER_DETL_ID) AS PACK_CNT
                FROM OD_ORDER OO
                    INNER JOIN OD_ORDER_DETL OD ON OO.OD_ORDER_ID = OD.OD_ORDER_ID
                WHERE OO.OD_ORDER_ID = #{odOrderId}
                    AND OO.ORDER_YN = 'Y'
                ) GNORMAL
                WHERE GNORMAL.PACK_CNT = 0
                UNION ALL
                SELECT OO.OD_ORDER_ID,
                    ODP.OD_ORDER_DETL_ID,
                    ODP.IL_GOODS_ID,
                    ODP.GOODS_NM,
                    group_concat(OD.GOODS_NM) AS GOODS_NM_LIST,
                    IFNULL(ODP.PROMOTION_TP, '0') AS PROMOTION_TP
                FROM OD_ORDER OO
                    INNER JOIN OD_ORDER_DETL_PACK ODP ON OO.OD_ORDER_ID AND ODP.OD_ORDER_ID
                    INNER JOIN OD_ORDER_DETL OD ON OO.OD_ORDER_ID = OD.OD_ORDER_ID AND ODP.OD_ORDER_DETL_ID = OD.OD_ORDER_DETL_PARENT_ID
                WHERE OO.OD_ORDER_ID = #{odOrderId}
                    AND OO.ORDER_YN = 'Y'
                GROUP BY OO.OD_ORDER_ID, ODP.OD_ORDER_DETL_ID, ODP.IL_GOODS_ID,ODP.GOODS_NM
            ) G1
            INNER JOIN IL_GOODS IG ON G1.IL_GOODS_ID = IG.IL_GOODS_ID
            INNER JOIN IL_ITEM II ON IG.IL_ITEM_CD = II.IL_ITEM_CD
            LEFT JOIN IL_GOODS_IMG IMG ON IMG.IL_GOODS_ID = IG.IL_GOODS_ID AND IMG.BASIC_YN = 'Y'
            LEFT JOIN IL_ITEM_IMG ITM_IMG ON ITM_IMG.IL_ITEM_CD = II.IL_ITEM_CD AND ITM_IMG.BASIC_YN = 'Y'
        ORDER BY G1.OD_ORDER_DETL_ID DESC
    </select>


    <!--───────────────────────────────────────────────────────────────────────
	 * description 		: ECS 분류값 조회
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.12.14		천혜현    	   최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
    <select id="getEcsHdBcodeList" resultType="hashMap">
        /* customerQna.getEcsHdBcodeList */
        SELECT
			HD_BCODE AS CODE
			,HD_BCODE_NM AS NAME
		FROM
			CS_ECS_CODE
		GROUP BY HD_BCODE
	</select>

	<select id="getEcsHdScodeList" resultType="hashMap">
        /* customerQna.getEcsHdScodeList */
        SELECT
			HD_SCODE AS CODE
			,HD_SCODE_NM AS NAME
		FROM
			CS_ECS_CODE
		WHERE
			HD_BCODE = #{hdBcode}
		GROUP BY HD_SCODE
	</select>

	<select id="getEcsClaimGubunList" resultType="hashMap">
        /* customerQna.getEcsClaimGubunList */
        SELECT
			CLAIM_GUBUN AS CODE
			,CLAIM_GUBUN_NM AS NAME
		FROM
			CS_ECS_CODE
		WHERE
			HD_BCODE = #{hdBcode}
			AND HD_SCODE = #{hdScode}
		GROUP BY CLAIM_GUBUN
	</select>

	<!--───────────────────────────────────────────────────────────────────────
     * description 		: 통합몰관리 목록 조회
     * @
     * @ 수정일			수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2020.12.15		안치열          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <resultMap type="kr.co.pulmuone.v1.customer.qna.dto.vo.QnaBosListVo" id="getQnaListResultMap">
        <result column="CS_QNA_ID" property="csQnaId"/>
        <result column="QNA_TP" property="qnaType"/>
        <result column="QNA_TYPE_NAME" property="qnaTypeName"/>
        <result column="QNA_DIVISION" property="qnaDivision"/>
        <result column="QNA_DIVISION_NAME" property="qnaDivisionName"/>
        <result column="QNA_TITLE" property="qnaTitle"/>
        <result column="QNA_QUESTION" property="qnaQuestion"/>
        <result column="GOODS_NAME" property="goodsName"/>
        <result column="GOODS_TP" property="goodsTp"/>
        <result column="IL_GOODS_ID" property="ilGoodsId"/>
        <result column="USER_NAME" property="userName"/>
        <result column="USER_ID" property="userId"/>
        <result column="STATUS" property="status"/>
        <result column="QNA_STATUS_NAME" property="qnaStatusName"/>
        <result column="CREATE_DT" property="createDate"/>
        <result column="ANSWER_USER_ID" property="answerUserId"/>
        <result column="ANSWER_USER_NAME" property="answerUserName"/>
        <result column="ANSWER_DT" property="answerDate"/>
        <result column="DELAY_YN" property="delayYn"/>
        <result column="FIRST_ANSWER" property="firstAnswer"/>
        <result column="SECOND_ANSWER" property="secondAnswer"/>
        <result column="USER_MOBILE" property="userMobile"/>
        <result column="USER_MAIL" property="userMail"/>
        <result column="ANSWER_SMS_YN" property="answerSmsYn"/>
        <result column="ANSWER_MAIL_YN" property="answerMailYn"/>
        <result column="ODID" property="odid"/>
        <result column="FIRST_ANSWER_USER_ID" property="firstAnswerUserId"/>
        <result column="SECOND_ANSWER_USER_ID" property="secondAnswerUserId"/>
        <result column="FIRST_ANSWER_USER_NM" property="firstAnswerUserNm"/>
        <result column="SECOND_ANSWER_USER_NM" property="secondAnswerUserNm"/>
        <result column="FIRST_ANSWER_DT" property="firstAnswerDt"/>
        <result column="SECOND_ANSWER_DT" property="secondAnswerDt"/>
        <result column="HD_BCODE_NM" property="hdBcodeNm"/>
        <result column="HD_SCODE_NM" property="hdScodeNm"/>
        <result column="CLAIM_GUBUN_NM" property="claimGubunNm"/>
        <result column="DROP_USER_YN" property="dropUserYn"/>
    </resultMap>
    <select id="getQnaList" resultMap="getQnaListResultMap">
          /* customerQna.getQnaList */
          SELECT A.*
          FROM (
          SELECT  C.CS_QNA_ID
                , C.QNA_TP
                , C.PRODUCT_TP
                , C.ONETOONE_TP
                , FN_COMN_CODE_DIC(C.QNA_TP) AS QNA_TYPE_NAME
                , CASE WHEN QNA_TP = 'QNA_TP.PRODUCT' THEN C.PRODUCT_TP
                       ELSE C.ONETOONE_TP
                  END AS QNA_DIVISION
                , CASE WHEN QNA_TP = 'QNA_TP.PRODUCT' THEN FN_COMN_CODE_DIC(C.PRODUCT_TP)
                       ELSE FN_COMN_CODE_DIC(C.ONETOONE_TP)
                  END AS QNA_DIVISION_NAME
                , C.TITLE AS QNA_TITLE
                , CASE WHEN C.QNA_TP = 'QNA_TP.ONETOONE' THEN O.GOODS_NM
                        ELSE I.GOODS_NM
                  END AS GOODS_NAME
                , CASE WHEN C.QNA_TP = 'QNA_TP.ONETOONE' THEN O.GOODS_TP_CD
                        ELSE I.GOODS_TP
                 END AS GOODS_TP
                , CASE WHEN C.QNA_TP = 'QNA_TP.ONETOONE' THEN O.IL_GOODS_ID
                        ELSE C.IL_GOODS_ID
                 END AS IL_GOODS_ID
                , FN_DECRYPT(U.USER_NM) AS USER_NAME
                , U.LOGIN_ID AS USER_ID
                , C.STATUS
                , FN_COMN_CODE_DIC(C.STATUS) AS QNA_STATUS_NAME
                , C.CREATE_DT
                , CASE WHEN C.STATUS = 'QNA_STATUS.ANSWER_COMPLETED_1ST' THEN UU.LOGIN_ID
                       WHEN C.STATUS = 'QNA_STATUS.ANSWER_COMPLETED_2ND' THEN UU.LOGIN_ID
                  ELSE ''
                  END AS ANSWER_USER_ID
                , CASE WHEN C.STATUS = 'QNA_STATUS.ANSWER_COMPLETED_1ST' THEN FN_DECRYPT(UU.USER_NM)
                       WHEN C.STATUS = 'QNA_STATUS.ANSWER_COMPLETED_2ND' THEN FN_DECRYPT(UU.USER_NM)
                  ELSE ''
                  END AS ANSWER_USER_NAME
                , CASE WHEN C.STATUS = 'QNA_STATUS.ANSWER_COMPLETED_1ST' THEN CA.ANSWER_DT
                       WHEN C.STATUS = 'QNA_STATUS.ANSWER_COMPLETED_2ND' THEN CA.ANSWER_DT
                  ELSE ''
                  END AS ANSWER_DT
                , CA.ANSWER AS SECOND_ANSWER
                , CF.ANSWER AS FIRST_ANSWER
                , C.QUESTION
                , CASE  WHEN C.STATUS = 'QNA_STATUS.ANSWER_COMPLETED_1ST' THEN '정상'
                        WHEN C.STATUS = 'QNA_STATUS.ANSWER_COMPLETED_2ND' THEN '정상'
                        WHEN DATE_ADD(DATE_ADD(DATE_FORMAT(C.CREATE_DT,'%Y-%m-%d'), INTERVAL 1 DAY), INTERVAL 18 HOUR) <![CDATA[>]]> NOW() AND (C.STATUS = 'QNA_STATUS.ANSWER_CHECKING' OR C.STATUS = 'QNA_STATUS.RECEPTION') THEN '정상'
                        ELSE CASE WHEN DAYOFWEEK(C.CREATE_DT) = '6' AND DATE_ADD(DATE_ADD(DATE_FORMAT(C.CREATE_DT,'%Y-%m-%d'), INTERVAL 3 DAY), INTERVAL 18 HOUR) <![CDATA[>]]> NOW() AND (C.STATUS = 'QNA_STATUS.ANSWER_CHECKING' OR C.STATUS = 'QNA_STATUS.RECEPTION') THEN '정상'
                                  WHEN DAYOFWEEK(C.CREATE_DT) = '6' AND DATE_ADD(DATE_ADD(DATE_FORMAT(C.CREATE_DT,'%Y-%m-%d'), INTERVAL 3 DAY), INTERVAL 18 HOUR) <![CDATA[<]]> NOW() AND (C.STATUS = 'QNA_STATUS.ANSWER_CHECKING' OR C.STATUS = 'QNA_STATUS.RECEPTION') THEN '지연'
                                  WHEN DAYOFWEEK(C.CREATE_DT) = '7' AND DATE_ADD(DATE_ADD(DATE_FORMAT(C.CREATE_DT,'%Y-%m-%d'), INTERVAL 2 DAY), INTERVAL 18 HOUR) <![CDATA[>]]> NOW() AND (C.STATUS = 'QNA_STATUS.ANSWER_CHECKING' OR C.STATUS = 'QNA_STATUS.RECEPTION') THEN '정상'
                                  WHEN DAYOFWEEK(C.CREATE_DT) = '7' AND DATE_ADD(DATE_ADD(DATE_FORMAT(C.CREATE_DT,'%Y-%m-%d'), INTERVAL 2 DAY), INTERVAL 18 HOUR) <![CDATA[<]]> NOW() AND (C.STATUS = 'QNA_STATUS.ANSWER_CHECKING' OR C.STATUS = 'QNA_STATUS.RECEPTION') THEN '지연'
                                  ELSE '지연'
                             END
                  END AS DELAY_YN
                , C.UR_USER_ID
                , CASE WHEN IFNULL(UD.UR_USER_ID, '') = '' THEN 'N' ELSE 'Y' END DROP_USER_YN
          FROM    CS_QNA C
                      LEFT JOIN IL_GOODS I ON I.IL_GOODS_ID = C.IL_GOODS_ID
                      LEFT JOIN OD_ORDER_DETL O ON O.OD_ORDER_DETL_ID = C.OD_ORDER_DETL_ID
                      INNER JOIN UR_USER U ON C.UR_USER_ID = U.UR_USER_ID
                      LEFT JOIN CS_QNA_ANSWER CA ON C.CS_QNA_ID = CA.CS_QNA_ID AND C.STATUS = CA.ANSWER_TP
                      LEFT JOIN CS_QNA_ANSWER CF ON C.CS_QNA_ID = CF.CS_QNA_ID AND CF.ANSWER_TP ='QNA_STATUS.ANSWER_COMPLETED_1ST'
                      LEFT JOIN UR_USER UU ON CA.ANSWER_UR_USER_ID = UU.UR_USER_ID
                      LEFT JOIN UR_USER_DROP UD ON C.UR_USER_ID = UD.UR_USER_ID
          ) A
    <where>
      <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(findKeyword)">
        <choose>
          <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchSelect, "SEARCH_SELECT.USER_NAME")'>
            AND   A.USER_NAME IN
                                <foreach collection="findKeywordArray" item="findKeyword" separator="," open="(" close=")">
                                  #{findKeyword}
                                </foreach>
          </when>
          <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchSelect, "SEARCH_SELECT.USE_ID")'>
            AND   A.USER_ID IN
                                <foreach collection="findKeywordArray" item="findKeyword" separator="," open="(" close=")">
                                  #{findKeyword}
                                </foreach>
          </when>
        </choose>
      </if>
          <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(searchGoodsName)">
            AND   A.GOODS_NAME LIKE CONCAT ('%', #{searchGoodsName},'%')
          </if>
        <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(createDateStart)">
          <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(createDateEnd)">
            AND   A.CREATE_DT BETWEEN  DATE_FORMAT(#{createDateStart}, '%Y-%m-%d 00:00:00') AND DATE_FORMAT(#{createDateEnd}, '%Y-%m-%d 23:59:59')
          </if>
        </if>
        <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(qnaTypeList)">
          <if test="qnaTypeList.size() > 0"> <!-- 문의상태 -->
            AND   A.QNA_TP IN
                                <foreach collection="qnaTypeList" item="qnaType" index="index" separator="," open="(" close=")">
                                  #{qnaType}
                                </foreach>
          </if>
        </if>
          <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(goodsType)">
            AND   A.PRODUCT_TP = #{goodsType}
          </if>
          <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(qnaOneType)">
            AND   A.ONETOONE_TP = #{qnaOneType}
          </if>
        <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(qnaStatusList)">
          <if test="qnaStatusList.size() > 0"> <!-- 처리상태 -->
            AND   A.STATUS IN
                                <foreach collection="qnaStatusList" item="qnaStatus" index="index" separator="," open="(" close=")">
                                  #{qnaStatus}
                                </foreach>
          </if>
        </if>
      <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(findManyKeyword)">
        <choose>
          <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchManySelect, "SEARCH_SELECT.TITLE")'>
            AND   A.QNA_TITLE LIKE CONCAT('%',#{findManyKeyword},'%')
          </when>
          <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchManySelect, "SEARCH_SELECT.QUESTION")'>
            AND   A.QUESTION LIKE CONCAT('%',#{findManyKeyword},'%')
          </when>
          <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchManySelect, "SEARCH_SELECT.ANSWER")'>
            AND   (A.SECOND_ANSWER LIKE CONCAT('%',#{findManyKeyword},'%')  OR A.FIRST_ANSWER LIKE  CONCAT('%',#{findManyKeyword},'%'))
          </when>
        </choose>
      </if>
      <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(findUserKeyword)">
          <choose>
              <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchUserSelect, "SEARCH_SELECT.USER_NAME")'>
                  AND   A.USER_NAME LIKE CONCAT('%',#{findUserKeyword},'%')
              </when>
              <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchUserSelect, "SEARCH_SELECT.USER_ID")'>
                  AND   A.USER_ID LIKE CONCAT('%',#{findUserKeyword},'%')
              </when>
          </choose>
      </if>
      <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(findAnswerKeyword)">
        <choose>
          <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchAnswerSelect, "SEARCH_ANSWER.USER_NAME")'>
            AND   CASE WHEN A.STATUS = 'QNA_STATUS.ANSWER_COMPLETED_1ST' THEN A.ANSWER_USER_NAME
                       WHEN A.STATUS = 'QNA_STATUS.ANSWER_COMPLETED_2ND' THEN A.ANSWER_USER_NAME
                  ELSE ''
                  END LIKE CONCAT('%',#{findAnswerKeyword},'%')
          </when>
          <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchAnswerSelect, "SEARCH_ANSWER.USER_ID")'>
            AND   CASE WHEN A.STATUS = 'QNA_STATUS.ANSWER_COMPLETED_1ST' THEN A.ANSWER_USER_ID
                       WHEN A.STATUS = 'QNA_STATUS.ANSWER_COMPLETED_2ND' THEN A.ANSWER_USER_ID
                  ELSE ''
                  END LIKE CONCAT('%',#{findAnswerKeyword},'%')
          </when>
          <otherwise>
            AND   (
                  CASE WHEN A.STATUS = 'QNA_STATUS.ANSWER_COMPLETED_1ST' THEN A.ANSWER_USER_ID
                       WHEN A.STATUS = 'QNA_STATUS.ANSWER_COMPLETED_2ND' THEN A.ANSWER_USER_ID
                  ELSE ''
                  END   LIKE CONCAT('%',#{findAnswerKeyword},'%')
                  OR
                  CASE WHEN A.STATUS = 'QNA_STATUS.ANSWER_COMPLETED_1ST' THEN A.ANSWER_USER_NAME
                       WHEN A.STATUS = 'QNA_STATUS.ANSWER_COMPLETED_2ND' THEN A.ANSWER_USER_NAME
                  ELSE ''
                  END   LIKE CONCAT('%',#{findAnswerKeyword},'%')
                  )
          </otherwise>
        </choose>
      </if>
          <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(answerDelayView, 'Y')">
            AND   CASE  WHEN STATUS = 'QNA_STATUS.ANSWER_COMPLETED_1ST' THEN '정상'
                        WHEN STATUS = 'QNA_STATUS.ANSWER_COMPLETED_2ND' THEN '정상'
                        WHEN DATE_ADD(DATE_ADD(DATE_FORMAT(A.CREATE_DT,'%Y-%m-%d'), INTERVAL 1 DAY), INTERVAL 18 HOUR) <![CDATA[>]]> NOW() AND (A.STATUS = 'QNA_STATUS.ANSWER_CHECKING' OR A.STATUS = 'QNA_STATUS.RECEPTION') THEN '정상'
                        ELSE CASE WHEN DAYOFWEEK(A.CREATE_DT) = '6' AND DATE_ADD(DATE_ADD(DATE_FORMAT(A.CREATE_DT,'%Y-%m-%d'), INTERVAL 3 DAY), INTERVAL 18 HOUR) <![CDATA[>]]> NOW() AND (A.STATUS = 'QNA_STATUS.ANSWER_CHECKING' OR A.STATUS = 'QNA_STATUS.RECEPTION') THEN '정상'
                                  WHEN DAYOFWEEK(A.CREATE_DT) = '6' AND DATE_ADD(DATE_ADD(DATE_FORMAT(A.CREATE_DT,'%Y-%m-%d'), INTERVAL 3 DAY), INTERVAL 18 HOUR) <![CDATA[<]]> NOW() AND (A.STATUS = 'QNA_STATUS.ANSWER_CHECKING' OR A.STATUS = 'QNA_STATUS.RECEPTION') THEN '지연'
                                  WHEN DAYOFWEEK(A.CREATE_DT) = '7' AND DATE_ADD(DATE_ADD(DATE_FORMAT(A.CREATE_DT,'%Y-%m-%d'), INTERVAL 2 DAY), INTERVAL 18 HOUR) <![CDATA[>]]> NOW() AND (A.STATUS = 'QNA_STATUS.ANSWER_CHECKING' OR A.STATUS = 'QNA_STATUS.RECEPTION') THEN '정상'
                                  WHEN DAYOFWEEK(A.CREATE_DT) = '7' AND DATE_ADD(DATE_ADD(DATE_FORMAT(A.CREATE_DT,'%Y-%m-%d'), INTERVAL 2 DAY), INTERVAL 18 HOUR) <![CDATA[<]]> NOW() AND (A.STATUS = 'QNA_STATUS.ANSWER_CHECKING' OR A.STATUS = 'QNA_STATUS.RECEPTION') THEN '지연'
                                  ELSE '지연'
                             END
                  END = '지연'
          </if>
          <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(urUserId)">
            AND   A.UR_USER_ID = #{urUserId}
          </if>
        <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(excludeDropUserView, 'Y')">
            AND A.DROP_USER_YN = 'N'
        </if>
    </where>
          ORDER BY A.CREATE_DT DESC
    </select>

    <!--───────────────────────────────────────────────────────────────────────
     * description : 통합몰문의관리 리스트 엑셀 다운로드
     * @
     * @ 수정일         수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2020.12.16     안치열
     * @
    ────────────────────────────────────────────────────────────────────────-->
	<select id="qnaExportExcel" resultMap="getQnaListResultMap">
        /* customerQna.qnaExportExcel */
        SELECT
        		A.*
        FROM
        (
	        SELECT
					C.CS_QNA_ID
				  , C.QNA_TP
				  , C.PRODUCT_TP
				  , C.ONETOONE_TP
				  , IFNULL(FN_COMN_CODE_DIC(C.QNA_TP),'') AS QNA_TYPE_NAME
				  , CASE WHEN QNA_TP = 'QNA_TP.PRODUCT' THEN C.PRODUCT_TP
				         ELSE C.ONETOONE_TP
				    END AS QNA_DIVISION
				  , CASE WHEN QNA_TP = 'QNA_TP.PRODUCT' THEN IFNULL(FN_COMN_CODE_DIC(C.PRODUCT_TP),'')
				         ELSE IFNULL(FN_COMN_CODE_DIC(C.ONETOONE_TP),'')
				    END AS QNA_DIVISION_NAME
				  , C.TITLE AS QNA_TITLE
	              , C.QUESTION AS QNA_QUESTION
                  , CASE WHEN C.QNA_TP = 'QNA_TP.ONETOONE' THEN IFNULL(O.GOODS_NM,'')
                         ELSE IFNULL(I.GOODS_NM,'')
                    END AS GOODS_NAME
				  , IFNULL(FN_DECRYPT(U.USER_NM),'') AS USER_NAME
				  , IFNULL(U.LOGIN_ID,'') AS USER_ID
				  , C.STATUS
				  , FN_COMN_CODE_DIC(C.STATUS) AS QNA_STATUS_NAME
				  , C.CREATE_DT
                  , IFNULL(UU.LOGIN_ID,'') AS FIRST_ANSWER_USER_ID
                  , IFNULL(UU2.LOGIN_ID,'') AS SECOND_ANSWER_USER_ID
                  , IFNULL(FN_DECRYPT(UU.USER_NM),'') AS FIRST_ANSWER_USER_NM
                  , IFNULL(FN_DECRYPT(UU2.USER_NM),'') AS SECOND_ANSWER_USER_NM
                  , IFNULL(CF.ANSWER_DT,'') AS FIRST_ANSWER_DT
                  , IFNULL(SC.ANSWER_DT,'') AS SECOND_ANSWER_DT
                  , REGEXP_REPLACE(IFNULL(CF.ANSWER,''), <![CDATA['<[^>]*>|\&([^;])*;']]>,'') AS FIRST_ANSWER
	              , REGEXP_REPLACE(IFNULL(SC.ANSWER,''), <![CDATA['<[^>]*>|\&([^;])*;']]>,'') AS SECOND_ANSWER
				  , C.QUESTION
				  , CASE
				    	 WHEN C.STATUS = 'QNA_STATUS.ANSWER_COMPLETED_1ST' THEN '정상'
				    	 WHEN C.STATUS = 'QNA_STATUS.ANSWER_COMPLETED_2ND' THEN '정상'
				    	 WHEN DATE_ADD(DATE_ADD(DATE_FORMAT(C.CREATE_DT,'%Y-%m-%d'), INTERVAL 1 DAY), INTERVAL 16 HOUR) <![CDATA[>]]> NOW() AND (C.STATUS = 'QNA_STATUS.ANSWER_CHECKING' OR C.STATUS = 'QNA_STATUS.RECEPTION') THEN '정상'
				         ELSE CASE DAYOFWEEK(C.CREATE_DT) WHEN '5' AND DATE_ADD(DATE_ADD(DATE_FORMAT(C.CREATE_DT,'%Y-%m-%d'), INTERVAL 3 DAY), INTERVAL 16 HOUR) <![CDATA[>]]> NOW() AND (C.STATUS = 'QNA_STATUS.ANSWER_CHECKING' OR C.STATUS = 'QNA_STATUS.RECEPTION') THEN '정상'
														WHEN '5' AND DATE_ADD(DATE_ADD(DATE_FORMAT(C.CREATE_DT,'%Y-%m-%d'), INTERVAL 3 DAY), INTERVAL 16 HOUR) <![CDATA[<]]> NOW() AND (C.STATUS = 'QNA_STATUS.ANSWER_CHECKING' OR C.STATUS = 'QNA_STATUS.RECEPTION') THEN '지연'
														WHEN '6' AND DATE_ADD(DATE_ADD(DATE_FORMAT(C.CREATE_DT,'%Y-%m-%d'), INTERVAL 2 DAY), INTERVAL 16 HOUR) <![CDATA[>]]> NOW() AND (C.STATUS = 'QNA_STATUS.ANSWER_CHECKING' OR C.STATUS = 'QNA_STATUS.RECEPTION') THEN '정상'
														WHEN '6' AND DATE_ADD(DATE_ADD(DATE_FORMAT(C.CREATE_DT,'%Y-%m-%d'), INTERVAL 2 DAY), INTERVAL 16 HOUR) <![CDATA[<]]> NOW() AND (C.STATUS = 'QNA_STATUS.ANSWER_CHECKING' OR C.STATUS = 'QNA_STATUS.RECEPTION') THEN '지연'
							  ELSE '지연'
							  END
				    END AS DELAY_YN
	              , FN_DECRYPT(C.MOBILE) AS USER_MOBILE
                  , FN_DECRYPT(C.MAIL) AS USER_MAIL
	              , C.ANSWER_SMS_YN
	              , C.ANSWER_MAIL_YN
	              , IFNULL(OO.ODID,'')AS ODID
                  , IFNULL(CEC.HD_BCODE_NM,'') AS HD_BCODE_NM
                  , IFNULL(CEC.HD_SCODE_NM,'') AS HD_SCODE_NM
                  , IFNULL(CEC.CLAIM_GUBUN_NM,'') AS CLAIM_GUBUN_NM
                  , CASE WHEN IFNULL(UD.UR_USER_ID, '') = '' THEN 'N' ELSE 'Y' END DROP_USER_YN
        FROM CS_QNA C
			LEFT JOIN IL_GOODS I ON I.IL_GOODS_ID = C.IL_GOODS_ID
            LEFT JOIN OD_ORDER_DETL O ON O.OD_ORDER_DETL_ID = C.OD_ORDER_DETL_ID
			INNER JOIN UR_USER U ON C.UR_USER_ID = U.UR_USER_ID
            LEFT JOIN (SELECT ANSWER, CS_QNA_ID, ANSWER_UR_USER_ID, ANSWER_DT FROM CS_QNA_ANSWER CQA WHERE CQA.ANSWER_TP = 'QNA_STATUS.ANSWER_COMPLETED_1ST') CF ON C.CS_QNA_ID = CF.CS_QNA_ID
            LEFT JOIN (SELECT ANSWER, CS_QNA_ID, ANSWER_UR_USER_ID, ANSWER_DT FROM CS_QNA_ANSWER CQA WHERE CQA.ANSWER_TP = 'QNA_STATUS.ANSWER_COMPLETED_2ND') SC ON C.CS_QNA_ID = SC.CS_QNA_ID
			LEFT JOIN UR_USER UU ON CF.ANSWER_UR_USER_ID = UU.UR_USER_ID
            LEFT JOIN UR_USER UU2 ON SC.ANSWER_UR_USER_ID = UU2.UR_USER_ID
            LEFT JOIN OD_ORDER OO ON C.OD_ORDER_ID = OO.OD_ORDER_ID
            LEFT JOIN CS_ECS_CODE CEC ON CEC.HD_SCODE = C.HD_SCODE AND CEC.HD_BCODE = C.HD_BCODE AND CEC.CLAIM_GUBUN = C.CLAIM_GUBUN
            LEFT JOIN UR_USER_DROP UD ON C.UR_USER_ID = UD.UR_USER_ID
		) AS A
		WHERE 1=1
		 <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(findKeyword)">
			<choose>
				<when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchSelect, "SEARCH_SELECT.USER_NAME")'>
					AND A.USER_NAME IN
					<foreach collection="findKeywordArray" item="findKeyword" separator="," open="(" close=")">
						#{findKeyword}
					</foreach>
				</when>
				<when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchSelect, "SEARCH_SELECT.USE_ID")'>
					AND A.USER_ID IN
					<foreach collection="findKeywordArray" item="findKeyword" separator="," open="(" close=")">
						#{findKeyword}
					</foreach>
				</when>
			</choose>
        </if>
         <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(searchGoodsName)">
           	AND A.GOODS_NAME LIKE CONCAT ('%', #{searchGoodsName},'%')
        </if>
        <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(createDateStart)">
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(createDateEnd)">
            	AND A.CREATE_DT between  #{createDateStart} AND (#{createDateEnd}+ INTERVAL 1 DAY - INTERVAL 1 SECOND)
            </if>
        </if>
        <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(qnaTypeList)">
	        <if test="qnaTypeList.size() > 0"> <!-- 문의상태 -->
	             AND A.QNA_TP IN
	             <foreach collection="qnaTypeList" item="qnaType" index="index" separator="," open="(" close=")">
	                 #{qnaType}
	             </foreach>
	        </if>
        </if>
        <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(goodsType)">
           	AND A.PRODUCT_TP = #{goodsType}
        </if>
        <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(qnaOneType)">
           	AND A.ONETOONE_TP = #{qnaOneType}
        </if>
		<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(qnaStatusList)">
	        <if test="qnaStatusList.size() > 0"> <!-- 처리상태 -->
	             AND A.STATUS IN
	             <foreach collection="qnaStatusList" item="qnaStatus" index="index" separator="," open="(" close=")">
	                 #{qnaStatus}
	             </foreach>
	        </if>
	    </if>
        <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(findManyKeyword)">
        	<choose>
				<when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchManySelect, "SEARCH_SELECT.TITLE")'>
					AND A.QNA_TITLE LIKE CONCAT('%',#{findManyKeyword},'%')
				</when>
				<when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchManySelect, "SEARCH_SELECT.QUESTION")'>
					AND A.QUESTION LIKE CONCAT('%',#{findManyKeyword},'%')
	            </when>
	            <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchManySelect, "SEARCH_SELECT.ANSWER")'>
	            	AND A.ANSWER LIKE CONCAT('%',#{findManyKeyword},'%')  OR A.FIRST_ANSWER LIKE  CONCAT('%',#{findManyKeyword},'%')
				</when>
                <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchManySelect, "SEARCH_SELECT.USER_NAME")'>
                    AND A.USER_NAME LIKE CONCAT('%',#{findManyKeyword},'%')
                </when>
                <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchManySelect, "SEARCH_SELECT.USER_ID")'>
                    AND A.USER_ID LIKE CONCAT('%',#{findManyKeyword},'%')
                </when>
			</choose>
        </if>
        <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(findAnswerKeyword)">
        	<choose>
				<when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchAnswerSelect, "SEARCH_ANSWER.USER_NAME")'>
					AND A.ANSWER_USER_NAME LIKE CONCAT('%',#{findAnswerKeyword},'%')
				</when>
				<when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchAnswerSelect, "SEARCH_ANSWER.USER_ID")'>
					AND A.ANSWER_USER_ID LIKE CONCAT('%',#{findAnswerKeyword},'%')
	            </when>
	            <otherwise>
					AND (A.ANSWER_USER_ID LIKE CONCAT('%',#{findAnswerKeyword},'%') OR A.ANSWER_USER_NAME LIKE CONCAT('%',#{findAnswerKeyword},'%'))
	            </otherwise>
			</choose>
        </if>
        <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(answerDelayView, 'Y')">
        	AND A.DELAY_YN = '지연'
        </if>
        <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(excludeDropUserView, 'Y')">
            AND A.DROP_USER_YN = 'N'
        </if>
		ORDER BY A.CREATE_DT DESC
	</select>


 <!--───────────────────────────────────────────────────────────────────────
	 * description 		: 통합몰문의 관리 상세조회
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.12.16		안치열          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
    <resultMap id="getQnaDetailResultMap" type="kr.co.pulmuone.v1.customer.qna.dto.vo.QnaBosDetailVo">
        <result column="USER_NAME"   	property="userName" />
        <result column="USER_ID"         property="userId" />
        <result column="USER_MOBILE"  property="userMobile" />
        <result column="USER_EMAIL"      property="userEmail" />
        <result column="QNA_TP"        property="qnaType" />
        <result column="QNA_TYPE_NAME"        property="qnaTypeName" />
        <result column="QNA_DIVISION_NAME"        property="qnaDivisionName" />
        <result column="ANSWER_SMS_YN"     property="answerSmsYn" />
        <result column="ANSWER_MAIL_YN"        property="answerMailYn" />
        <result column="STATUS"     property="status" />
        <result column="QNA_STATUS_NAME"     property="qnaStatusName" />
        <result column="CREATE_DT"     property="questionCreateDate" />
        <result column="ANSWER_DT"     property="answeredDate" />
        <result column="SECRET_TP"     property="secretType" />
        <result column="DELAY_GBN_WEEK"     property="answerDelayYn" />
        <result column="SECRET_TP"     property="secretType" />
        <result column="GOODS_NAME"     property="goodsName" />
        <result column="IL_GOODS_ID"     property="ilGoodsId" />
        <result column="GOODS_TP"     property="goodsTp" />
        <result column="TITLE"     property="title" />
        <result column="QUESTION"     property="question" />
        <result column="FIRST_ANSWER"     property="firstContent" />
        <result column="SECOND_ANSWER"     property="secondContent" />
        <result column="FIRST_ANSWER_DT"     property="firstAnswerDate" />
        <result column="SECOND_ANSWER_DT"     property="secondAnswerDate" />
        <result column="FIRST_USER_INFO"     property="firstUserInfo" />
        <result column="SECOND_USER_INFO"     property="secondUserInfo" />
        <result column="CS_QNA_ID"     property="csQnaId" />
        <result column="HD_BCODE"     property="ecsCtgryStd1" />
        <result column="HD_SCODE"     property="ecsCtgryStd2" />
        <result column="CLAIM_GUBUN"     property="ecsCtgryStd3" />
        <result column="SECRET_CMT"     property="secretComment" />
        <result column="OD_ORDER_ID"     property="odOrderId" />
        <result column="OD_ORDER_DETL_ID"     property="odOrderDetlId" />
        <result column="ODID"     property="odid" />
        <result column="PRODUCT_TP"     property="productType" />
        <result column="ORGANIZATION_NM"     property="organizationNm" />
        <result column="UR_USER_ID"         property="urUserId" />
    </resultMap>
    <select id="getQnaDetail" resultMap="getQnaDetailResultMap">
        /* customerQna.getQnaDetail */
        SELECT
			  FN_DECRYPT(U.USER_NM) AS USER_NAME
			, U.LOGIN_ID AS USER_ID
            , U.UR_USER_ID AS UR_USER_ID
			, FN_DECRYPT(C.MOBILE) AS USER_MOBILE
			, FN_DECRYPT(C.MAIL) AS USER_EMAIL
			, C.QNA_TP
		    , FN_COMN_CODE_DIC(C.QNA_TP) AS QNA_TYPE_NAME
		    , CASE WHEN QNA_TP = 'QNA_TP.PRODUCT' THEN C.PRODUCT_TP
		           ELSE C.ONETOONE_TP
		      END AS QNA_DIVISION
		    , CASE WHEN QNA_TP = 'QNA_TP.PRODUCT' THEN FN_COMN_CODE_DIC(C.PRODUCT_TP)
		           ELSE FN_COMN_CODE_DIC(C.ONETOONE_TP)
		      END AS QNA_DIVISION_NAME
		    , C.ANSWER_SMS_YN
		    , C.ANSWER_MAIL_YN
		    , C.STATUS
		    , FN_COMN_CODE_DIC(C.STATUS) AS QNA_STATUS_NAME
		    , C.CREATE_DT
		    , CA.ANSWER_DT
		    , C.SECRET_TP
		    , C.SECRET_CMT
		    , CASE
				 WHEN STATUS = 'QNA_STATUS.ANSWER_COMPLETED_1ST' THEN '정상'
				 WHEN STATUS = 'QNA_STATUS.ANSWER_COMPLETED_2ND' THEN '정상'
	    	     WHEN DATE_ADD(DATE_ADD(DATE_FORMAT(C.CREATE_DT,'%Y-%m-%d'), INTERVAL 1 DAY), INTERVAL 16 HOUR)  >  NOW() AND (C.STATUS = 'QNA_STATUS.ANSWER_CHECKING' OR C.STATUS = 'QNA_STATUS.RECEPTION') THEN '정상'
	     		 ELSE CASE DAYOFWEEK(C.CREATE_DT) WHEN '5' AND DATE_ADD(DATE_ADD(DATE_FORMAT(C.CREATE_DT,'%Y-%m-%d'), INTERVAL 3 DAY), INTERVAL 16 HOUR) <![CDATA[>]]> NOW() AND (C.STATUS = 'QNA_STATUS.ANSWER_CHECKING' OR C.STATUS = 'QNA_STATUS.RECEPTION') THEN '정상'
												  WHEN '5' AND DATE_ADD(DATE_ADD(DATE_FORMAT(C.CREATE_DT,'%Y-%m-%d'), INTERVAL 3 DAY), INTERVAL 16 HOUR) <![CDATA[<]]> NOW() AND (C.STATUS = 'QNA_STATUS.ANSWER_CHECKING' OR C.STATUS = 'QNA_STATUS.RECEPTION') THEN '지연'
												  WHEN '6' AND DATE_ADD(DATE_ADD(DATE_FORMAT(C.CREATE_DT,'%Y-%m-%d'), INTERVAL 2 DAY), INTERVAL 16 HOUR) <![CDATA[>]]> NOW() AND (C.STATUS = 'QNA_STATUS.ANSWER_CHECKING' OR C.STATUS = 'QNA_STATUS.RECEPTION') THEN '정상'
												  WHEN '6' AND DATE_ADD(DATE_ADD(DATE_FORMAT(C.CREATE_DT,'%Y-%m-%d'), INTERVAL 2 DAY), INTERVAL 16 HOUR) <![CDATA[<]]> NOW() AND (C.STATUS = 'QNA_STATUS.ANSWER_CHECKING' OR C.STATUS = 'QNA_STATUS.RECEPTION') THEN '지연'
							  					  ELSE '지연'
							  				      END
			  END AS DELAY_GBN_WEEK
            , CASE WHEN C.QNA_TP = 'QNA_TP.ONETOONE' THEN O.GOODS_NM
                   ELSE I.GOODS_NM
              END AS GOODS_NAME
            , CASE WHEN C.QNA_TP = 'QNA_TP.ONETOONE' THEN O.GOODS_TP_CD
                   ELSE I.GOODS_TP
              END AS GOODS_TP
            , CASE WHEN C.QNA_TP = 'QNA_TP.ONETOONE' THEN O.IL_GOODS_ID
                   ELSE C.IL_GOODS_ID
             END AS IL_GOODS_ID
		    , C.TITLE
		    , C.QUESTION
		    , C.CS_QNA_ID
		    , C.HD_BCODE
		    , C.HD_SCODE
		    , C.CLAIM_GUBUN
		    , C.OD_ORDER_ID
			, C.OD_ORDER_DETL_ID
			, OO.ODID
			, FC.ANSWER AS FIRST_ANSWER
		    , FC.ANSWER_DT AS FIRST_ANSWER_DT
		    , CONCAT(FN_DECRYPT(UF.USER_NM), '(',UF.LOGIN_ID,')') AS FIRST_USER_INFO
			, SC.ANSWER AS SECOND_ANSWER
		    , SC.ANSWER_DT AS SECOND_ANSWER_DT
		    , CONCAT(FN_DECRYPT(US.USER_NM), '(',US.LOGIN_ID,')') AS SECOND_USER_INFO
		    , C.PRODUCT_TP
		    , IFNULL((SELECT ORGANIZATION_NM FROM UR_EMPLOYEE WHERE UR_USER_ID = #{userVo.userId}),'CS커뮤니케이션') AS ORGANIZATION_NM
		FROM CS_QNA C
			LEFT JOIN IL_GOODS I ON I.IL_GOODS_ID = C.IL_GOODS_ID
            LEFT JOIN OD_ORDER_DETL O ON O.OD_ORDER_DETL_ID = C.OD_ORDER_DETL_ID
			INNER JOIN UR_USER U ON C.UR_USER_ID = U.UR_USER_ID
			LEFT JOIN CS_QNA_ANSWER CA ON C.CS_QNA_ID = CA.CS_QNA_ID AND C.STATUS = CA.ANSWER_TP
			LEFT JOIN UR_USER UU ON CA.ANSWER_UR_USER_ID = UU.UR_USER_ID
			LEFT JOIN (SELECT ANSWER, ANSWER_DT, ANSWER_UR_USER_ID, CS_QNA_ID FROM CS_QNA_ANSWER CQA WHERE CQA.ANSWER_TP = 'QNA_STATUS.ANSWER_COMPLETED_1ST') FC ON C.CS_QNA_ID = FC.CS_QNA_ID
			LEFT JOIN UR_USER UF ON FC.ANSWER_UR_USER_ID = UF.UR_USER_ID
			LEFT JOIN (SELECT ANSWER, ANSWER_DT, ANSWER_UR_USER_ID, CS_QNA_ID FROM CS_QNA_ANSWER CQA WHERE CQA.ANSWER_TP = 'QNA_STATUS.ANSWER_COMPLETED_2ND') SC ON C.CS_QNA_ID = SC.CS_QNA_ID
			LEFT JOIN UR_USER US ON SC.ANSWER_UR_USER_ID = US.UR_USER_ID
			LEFT JOIN OD_ORDER OO ON C.OD_ORDER_ID = OO.OD_ORDER_ID
        WHERE C.CS_QNA_ID = #{csQnaId}

    </select>

    <!--───────────────────────────────────────────────────────────────────────
	 * description 		: 답변진행 상태변경
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.12.17		안치열          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
    <update id="putQnaAnswerStatus">
        /*	customerQna.putQnaAnswerStatus	*/
        UPDATE CS_QNA
        SET STATUS = 'QNA_STATUS.ANSWER_CHECKING',
            MODIFY_DT = now()
        WHERE CS_QNA_ID = #{csQnaId}
    </update>


    <!--───────────────────────────────────────────────────────────────────────
	 * description 		: 문의 답변정보 수정
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.12.17		안치열          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
    <update id="putQnaInfo">
        /*	customerQna.putQnaInfo	*/
        UPDATE CS_QNA
        SET STATUS = #{status},
        	SECRET_TP = #{secretType},
        	SECRET_CMT = #{secretComment},
        	HD_BCODE = #{ecsCtgryStd1},
        	HD_SCODE = #{ecsCtgryStd2},
        	CLAIM_GUBUN = #{ecsCtgryStd3},
            MODIFY_DT = now()
        WHERE CS_QNA_ID = #{csQnaId}
    </update>




    <!--───────────────────────────────────────────────────────────────────────
	 * description 		: 문의관리 답변 등록
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.12.17		안치열          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<insert id="addQnaAnswer">
        /* customerQna.addQnaAnswer */
       INSERT INTO CS_QNA_ANSWER
       		(
       		 CS_QNA_ID,
       		 ANSWER_TP,
             ANSWER,
             ANSWER_UR_USER_ID,
             ANSWER_DT
            )
       VALUES
        	(
        	 #{csQnaId},
        	 #{status},
        	 #{content},
        	 #{userVo.userId},
        	 now()
        	)
    </insert>


    <!--───────────────────────────────────────────────────────────────────────
	 * description 		: 1:1문의 상세 첨부파일 이미지
	 * @
	 * @ 수정일			수정자		  수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.12.18		안치열		  최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<select id="getImageList" resultType="kr.co.pulmuone.v1.customer.qna.dto.vo.QnaBosDetailVo">
		/* customerQna.getImageList */
		SELECT
			CS_QNA_ATTC_ID
		  , CS_QNA_ID
		  , IMG_ORIGIN_NM
		  ,	IMG_NM AS IMAGE_NAME
		  ,	IMG_PATH AS IMAGE_PATH
		  <!-- , CONCAT(IMG_PATH, IMG_NM) AS IMAGE_NAME -->
		FROM
			CS_QNA_ATTC
		<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(csQnaId)">
		WHERE CS_QNA_ID = #{csQnaId}
		</if>

	</select>

    <!--───────────────────────────────────────────────────────────────────────
	 * description 		: 1:1문의 등록 시 결과조회
	 * @
	 * @ 수정일			수정자		  수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.01.29		최윤지		  최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<resultMap type="kr.co.pulmuone.v1.customer.qna.dto.vo.OnetooneQnaResultVo" id="getOnetooneQnaAddInfoResultMap">
        <result column="UR_USER_ID" property="urUserId"/>
        <result column="USER_NM" property="userNm"/>
        <result column="MAIL" property="mail"/>
        <result column="MOBILE" property="mobile"/>
        <result column="ONETOONE_TP" property="onetooneType"/>
        <result column="OD_ORDER_ID" property="odOrderId"/>
        <result column="TITLE" property="title"/>
        <result column="QUESTION" property="question"/>
        <result column="ANSWER_SMS_YN" property="answerSmsYn"/>
        <result column="ANSWER_MAIL_YN" property="answerMailYn"/>
        <result column="CREATE_DT" property="createDt"/>
    </resultMap>
	<select id="getOnetooneQnaAddInfo" resultMap="getOnetooneQnaAddInfoResultMap">
		/* customerQna.getOnetooneQnaAddInfo */
		SELECT
		      CQ.UR_USER_ID
		     ,FN_DECRYPT(UU.USER_NM) AS USER_NM
	         ,FN_DECRYPT(UB.MAIL) AS MAIL
	         ,FN_DECRYPT(UB.MOBILE) AS MOBILE
	         ,CQ.ONETOONE_TP
	         ,CQ.OD_ORDER_ID
	         ,CQ.TITLE
	         ,CQ.QUESTION
	         ,CQ.ANSWER_SMS_YN
	         ,CQ.ANSWER_MAIL_YN
	         ,DATE_FORMAT(CQ.CREATE_DT, '%Y-%m-%d %H:%i:%s') AS CREATE_DT
		 FROM CS_QNA CQ
		INNER JOIN UR_BUYER UB ON CQ.UR_USER_ID = UB.UR_USER_ID
		INNER JOIN UR_USER UU ON UB.UR_USER_ID = UU.UR_USER_ID
		WHERE CQ.QNA_TP = 'QNA_TP.ONETOONE'
		  AND CQ.STATUS = 'QNA_STATUS.RECEPTION'
		  AND CQ.UR_USER_ID = #{urUserId}
	 ORDER BY CQ.CREATE_DT DESC
	  LIMIT 1
	</select>

    <!--───────────────────────────────────────────────────────────────────────
	 * description 		: 문의 답변 시 정보 조회
	 * @
	 * @ 수정일			수정자		  수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.01.29		최윤지		  최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<resultMap type="kr.co.pulmuone.v1.customer.qna.dto.vo.QnaBosDetailVo" id="getQnaAnswerInfoResultMap">
		<result column="ANSWER_SMS_YN"     property="answerSmsYn" />
        <result column="ANSWER_MAIL_YN"        property="answerMailYn" />
        <result column="USER_MOBILE"  property="userMobile" />
        <result column="USER_EMAIL"      property="userEmail" />
        <result column="USER_NAME"     property="userName" />
        <result column="QNA_TP"      property="qnaType" />
        <result column="QNA_TYPE_NAME"        property="qnaTypeName" />
        <result column="STATUS"        property="status" />
        <result column="QNA_STATUS_NAME"     property="qnaStatusName" />
        <result column="QNA_DIVISION_NAME"        property="qnaDivisionName" />
        <result column="CREATE_DT"     property="questionCreateDate" />
        <result column="ANSWER_DT"     property="answeredDate" />
        <result column="GOODS_NAME"     property="goodsName" />
        <result column="IL_GOODS_ID"     property="ilGoodsId" />
        <result column="TITLE"     property="title" />
        <result column="QUESTION"     property="question" />
        <result column="FIRST_ANSWER"     property="firstContent" />
        <result column="SECOND_ANSWER"     property="secondContent" />
        <result column="FIRST_ANSWER_DT"     property="firstAnswerDate" />
        <result column="SECOND_ANSWER_DT"     property="secondAnswerDate" />
        <result column="CS_QNA_ID"     property="csQnaId" />
        <result column="OD_ORDER_ID"     property="odOrderId" />
        <result column="OD_ORDER_DETL_ID"     property="odOrderDetlId" />
        <result column="PRODUCT_TYPE_NAME"     property="productTypeName" />
        <result column="UR_USER_ID"     property="urUserId" />
    </resultMap>
	<select id="getQnaAnswerInfo" resultMap="getQnaAnswerInfoResultMap">
		/* customerQna.getQnaAnswerInfo */
		SELECT
				C.ANSWER_SMS_YN
			   ,C.ANSWER_MAIL_YN
			   ,FN_DECRYPT(C.MOBILE) AS USER_MOBILE
			   ,FN_DECRYPT(C.MAIL) AS USER_EMAIL
			   ,FN_DECRYPT(C.USER_NM) AS USER_NAME
			   ,C.QNA_TP
			   ,FN_COMN_CODE_DIC(C.QNA_TP) AS QNA_TYPE_NAME
			   ,C.STATUS
			   ,FN_COMN_CODE_DIC(C.STATUS) AS QNA_STATUS_NAME
			   , CASE WHEN QNA_TP = 'QNA_TP.PRODUCT' THEN C.PRODUCT_TP
				         ELSE C.ONETOONE_TP
				    END AS QNA_DIVISION
			   , CASE WHEN QNA_TP = 'QNA_TP.PRODUCT' THEN FN_COMN_CODE_DIC(C.PRODUCT_TP)
			         ELSE FN_COMN_CODE_DIC(C.ONETOONE_TP)
			    END AS QNA_DIVISION_NAME
			   ,DATE_FORMAT(C.CREATE_DT, '%Y-%m-%d') AS CREATE_DT
			   ,CA.ANSWER_DT
			   ,I.GOODS_NM AS GOODS_NAME
			   ,C.IL_GOODS_ID
			   ,C.TITLE
			   ,C.QUESTION
			   ,FC.ANSWER AS FIRST_ANSWER
			   ,SC.ANSWER AS SECOND_ANSWER
			   ,DATE_FORMAT(FC.ANSWER_DT, '%Y-%m-%d') AS FIRST_ANSWER_DT
			   ,DATE_FORMAT(SC.ANSWER_DT, '%Y-%m-%d') AS SECOND_ANSWER_DT
			   ,C.CS_QNA_ID
			   ,C.OD_ORDER_ID
			   ,C.OD_ORDER_DETL_ID
			   ,FN_COMN_CODE_DIC(C.PRODUCT_TP) AS PRODUCT_TYPE_NAME
			   ,C.UR_USER_ID
		FROM CS_QNA C
		LEFT JOIN IL_GOODS I ON I.IL_GOODS_ID = C.IL_GOODS_ID
		INNER JOIN UR_USER U ON C.UR_USER_ID = U.UR_USER_ID
		LEFT JOIN CS_QNA_ANSWER CA ON C.CS_QNA_ID = CA.CS_QNA_ID AND C.STATUS = CA.ANSWER_TP
		LEFT JOIN (SELECT ANSWER, ANSWER_DT, ANSWER_UR_USER_ID, CS_QNA_ID FROM CS_QNA_ANSWER CQA WHERE CQA.ANSWER_TP = 'QNA_STATUS.ANSWER_COMPLETED_1ST') FC ON C.CS_QNA_ID = FC.CS_QNA_ID
		LEFT JOIN (SELECT ANSWER, ANSWER_DT, ANSWER_UR_USER_ID, CS_QNA_ID FROM CS_QNA_ANSWER CQA WHERE CQA.ANSWER_TP = 'QNA_STATUS.ANSWER_COMPLETED_2ND') SC ON C.CS_QNA_ID = SC.CS_QNA_ID
		WHERE C.CS_QNA_ID = #{csQnaId}
	</select>

</mapper>