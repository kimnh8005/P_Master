<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.pulmuone.v1.comm.mapper.order.order.OrderDetailMapper">
	<!--───────────────────────────────────────────────────────────────────────
         * description 		: 주문상세 상품정보 조회
         * @ 수정일			수정자		  수정내용
         * @ ──────────────────────────────────────────────────────────────────────
         * @ 2020.12.28		이명수	  		최초생성
        ────────────────────────────────────────────────────────────────────────-->
	<!-- 주문상세 상품정보 resultMap -->
	<resultMap id="getOrderDetailGoodsListResultMap" type="kr.co.pulmuone.v1.order.order.dto.OrderDetailGoodsListDto">
		<result column="OD_ORDER_DETL_ID"			property="odOrderDetlId"/>
		<result column="OD_ORDER_DETL_SEQ"			property="odOrderDetlSeq"/>
		<result column="OD_ORDER_DETL_DEPTH_ID"		property="odOrderDetlDepthId"/>
		<result column="OD_ORDER_DETL_PARENT_ID"	property="odOrderDetlParentId"/>
		<result column="BATCH_EXEC_FL"				property="batchExecFl"/>
		<result column="IL_ITEM_CD"                 property="ilItemCd"/>
		<result column="ITEM_BARCODE"               property="itemBarcode"/>
		<result column="IL_GOODS_ID"                property="ilGoodsId"/>
		<result column="GOODS_NM"                   property="goodsNm"/>
		<result column="STORAGE_TYPE"               property="storageType"/>
		<result column="ORDER_STATUS"               property="orderStatus"/>
		<result column="CLAIM_REASON_MSG"           property="claimReasonMsg"/>
		<result column="CLAIM_STATUS"               property="claimStatus"/>
		<result column="CLAIM_STATUS_CODE"          property="claimStatusCode"/>
		<result column="ORDER_STATUS_CODE"          property="orderStatusCode"/>
		<result column="ORDER_CNT"                  property="orderCnt"/>
		<result column="CANCEL_CNT"                 property="cancelCnt"/>
		<result column="CLAIM_DETL_STATUS_NM"       property="claimDetlStatusNm"/>
		<result column="CLAIM_ABLE_CNT"             property="claimAbleCnt"/>
		<result column="ORDER_IF_DT"                property="orderIfDt"/>
		<result column="SHIPPING_DT"                property="shippingDt"/>
		<result column="DELIVERY_DT"                property="deliveryDt"/>
		<result column="GOODS_TP_CD"                property="goodsTpCd"/>
		<result column="GOODS_TP_CD_NM"             property="goodsTpCdNm"/>
		<result column="WAREHOUSE_NM"               property="warehouseNm"/>
		<result column="UR_WAREHOUSE_ID"            property="urWarehouseId"/>
		<result column="TRACKING_NO"                property="trackingNo"/>
		<result column="SHIPPING_COMP_NM"           property="shippingCompNm"/>
		<result column="OD_SHIPPING_ZONE_ID"     	property="odShippingZoneId"/>
		<result column="SHIPPING_PRICE"             property="shippingPrice"/>
		<result column="SHIPPING_NM"                property="shippingNm"/>
		<result column="PAID_PRICE"                 property="paidPrice"/>
		<result column="SALE_PRICE"                 property="salePrice"/>
		<result column="TOTAL_GOODS_PRICE"          property="totalGoodsPrice"/>
		<result column="COUPON_PRICE"               property="couponPrice"/>
		<result column="DISCOUNT_PRICE"             property="discountPrice"/>
		<result column="COLLECTION_MALL_DETAIL_ID"  property="collectionMailDetlId"/>
		<result column="OUTMALL_DETAIL_ID"          property="outmallDetlId"/>
		<result column="EV_EXHIBIT_ID"				property="evExhibitId"/>
		<result column="PROMOTION_TP"				property="promotionTp"/>
		<result column="GOODS_CYCLE_TP_CD"			property="goodsCycleTpCd"/>
		<result column="GOODS_CYCLE_TP"				property="goodsCycleTp"/>
		<result column="GOODS_CYCLE_TERM_TP"		property="goodsCycleTermTp"/>
		<result column="MON_CNT"					property="monCnt"/>
		<result column="TUE_CNT"					property="tueCnt"/>
		<result column="WED_CNT"					property="wedCnt"/>
		<result column="THU_CNT"					property="thuCnt"/>
		<result column="FRI_CNT"					property="friCnt"/>
		<result column="SET_CNT"					property="setCnt"/>
		<result column="DAILY_BULK_YN"				property="dailyBulkYn"/>
		<result column="ALLERGY_YN"					property="allergyYn"/>
		<result column="SCHEDULE_YN"				property="scheduleYn"/>
		<result column="GOODS_DAILY_TP"				property="goodsDailyTp"/>
		<result column="TRACKING_YN"				property="trackingYn"/>
		<result column="TRACKING_URL"				property="trackingUrl"/>
		<result column="HTTP_REQUEST_TP"			property="httpRequestTp"/>
		<result column="INVOICE_PARAM"				property="invoiceParam"/>
		<result column="PS_SHIPPING_COMP_ID"		property="psShippingCompId"/>
		<result column="ACTION_JSON"          	    property="actionJson"/>
		<result column="BOS_JSON"          	        property="bosJson"/>
		<result column="OD_CLAIM_ID"       	        property="odClaimId"/>
		<result column="OD_CLAIM_DETL_ID"  	        property="odClaimDetlId"/>
		<result column="USER_TP"  	        		property="userTp"/>
		<result column="USER_NM"  	        		property="userNm"/>
		<result column="LOGIN_ID"  	        		property="loginId"/>
		<result column="TARGET_TP"  	        	property="targetTp"/>
		<result column="RETURNS_YN"  	        	property="returnsYn"/>
		<result column="BOS_CLAIM_LARGE_NM"  	    property="bosClaimLargeNm"/>
		<result column="BOS_CLAIM_MIDDLE_NM"  	    property="bosClaimMiddleNm"/>
		<result column="BOS_CLAIM_SMALL_NM"  	    property="bosClaimSmallNm"/>
		<result column="ERP_IF_YN"  	        	property="erpIfYn"/>
		<result column="ITEM_TP"  	        		property="itemTp"/>
		<result column="REFUND_POINT_PRICE"  	    property="refundPointPrice"/>
		<result column="REFUND_PRICE"  	        	property="refundPrice"/>
		<result column="ORG_CLAIM_ABLE_CNT"         property="orgClaimAbleCnt"/>
		<result column="IL_SHIPPING_TMPL_ID"        property="ilShippingTmplId"/>
		<result column="COLLECTION_MALL_ID"        	property="collectionMallId"/>
		<result column="OUTMALL_ID"        			property="outMallId"/>
		<result column="UR_STORE_NM"        		property="urStoreNm"/>
		<result column="GOODS_DELIVERY_TYPE"        property="goodsDeliveryType"/>
		<result column="DELIVERY_CNT"        		property="deliveryCnt"/>
		<result column="RECOMMENDED_PRICE"        	property="recommendedPrice"/>
		<result column="DISCOUNT_EMPLOYEE_PRICE"    property="discountEmployeePrice"/>
		<result column="DIRECT_PRICE"        		property="directPrice"/>
		<result column="MISS_CNT"        			property="missCnt"/>
		<result column="SEND_END_DT"        		property="sendEndDt"/>
		<result column="GRP_SHIPPING_ID"        	property="grpShippingId"/>
		<result column="SALE_TP_CD"        			property="saleType"/>
	</resultMap>
	<select id="getOrderDetailGoodsList" parameterType="string" resultMap="getOrderDetailGoodsListResultMap">
		/*	order.detail.getOrderDetailGoodsList  */
		SELECT OOD.OD_ORDER_DETL_ID
			, OOD.OD_ORDER_DETL_SEQ
			, OD_ORDER_DETL_STEP_ID
			, OOD.OD_ORDER_DETL_DEPTH_ID
			, OOD.OD_ORDER_DETL_PARENT_ID
		    , OOD.BATCH_EXEC_FL
			, IFNULL(OODDS.DELIVERY_CNT, 0) AS DELIVERY_CNT
			, OOD.IL_ITEM_CD
			, OOD.ITEM_BARCODE
			, OOD.IL_GOODS_ID
			, OOD.GOODS_NM
			, IFNULL(FN_COMN_CODE_DIC(OOD.STORAGE_TYPE_CD), '') AS STORAGE_TYPE
			, FN_STATUS_NM(OOD.ORDER_STATUS_CD) AS ORDER_STATUS
			, OOD.ORDER_STATUS_CD AS ORDER_STATUS_CODE
			, OOD.ORDER_CNT
			, CANCEL_CNT
			, IFNULL(FN_CLAIM_DETL_STATUS_NM(OOD.OD_ORDER_ID,OOD.OD_ORDER_DETL_ID), '') AS CLAIM_DETL_STATUS_NM
			, CASE
				WHEN OOD.ORDER_CNT - OOD.CANCEL_CNT = 0 THEN 0
				WHEN IFNULL(IUI.MISS_CNT, 0) = 0 THEN OOD.ORDER_CNT - OOD.CANCEL_CNT
				WHEN OOD.ORDER_CNT - (OOD.CANCEL_CNT - IFNULL(OCD.CLAIM_CNT,0) - IFNULL(OCD.MISS_CLAIM_CNT, 0)) - IFNULL(IUI.MISS_CNT, 0) <![CDATA[<=]]> 0 THEN OOD.ORDER_CNT - OOD.CANCEL_CNT
				ELSE OOD.ORDER_CNT - (OOD.CANCEL_CNT - IFNULL(OCD.CLAIM_CNT,0) - IFNULL(OCD.MISS_CLAIM_CNT, 0)) - IFNULL(IUI.MISS_CNT, 0)
			  END AS CLAIM_ABLE_CNT
			, CONCAT(DATE_FORMAT(OOD.ORDER_IF_DT,'%Y-%m-%d')) AS ORDER_IF_DT
			, CONCAT(DATE_FORMAT(OOD.SHIPPING_DT,'%Y-%m-%d')) AS SHIPPING_DT
			, CONCAT(DATE_FORMAT(OOD.DELIVERY_DT,'%Y-%m-%d')) AS DELIVERY_DT
			, OOD.GOODS_TP_CD
			, CASE OOD.GOODS_DELIVERY_TYPE
		   	   WHEN 'GOODS_DELIVERY_TYPE.RESERVATION' THEN CONCAT(FN_COMN_CODE_DIC(OOD.GOODS_TP_CD), '(예약)')
		       ELSE FN_COMN_CODE_DIC(OOD.GOODS_TP_CD)
		      END AS GOODS_TP_CD_NM
			, UW.WAREHOUSE_NM
			, OOD.UR_WAREHOUSE_ID
			, OTN.TRACKING_NO
			, PSC.SHIPPING_COMP_NM
			, OOD.OD_SHIPPING_ZONE_ID
			, OSP.SHIPPING_PRICE
			, ST.NAME AS SHIPPING_NM
			, OOD.PAID_PRICE
			, OOD.SALE_PRICE
			/* , CASE	WHEN IFNULL(OOD.EC_DT, 'N') = 'N'
					THEN OOD.TOT_SALE_PRICE
					ELSE OOD.PAID_PRICE
			  END AS TOTAL_GOODS_PRICE */
			, OOD.TOT_SALE_PRICE AS TOTAL_GOODS_PRICE
-- 			, (IFNULL(OOD.CART_COUPON_PRICE, 0) + IFNULL(OOD.GOODS_COUPON_PRICE, 0)) AS COUPON_PRICE
		    , CASE
				WHEN IFNULL(FN_CLAIM_DETL_STATUS_CD(OOD.OD_ORDER_ID,OOD.OD_ORDER_DETL_ID), '') = 'EC'
				THEN (IFNULL(OOD.CART_COUPON_PRICE, 0) + IFNULL(OOD.GOODS_COUPON_PRICE, 0)) / OOD.ORDER_CNT * (OOD.ORDER_CNT-OOD.CANCEL_CNT)
				ELSE (IFNULL(OOD.CART_COUPON_PRICE, 0) + IFNULL(OOD.GOODS_COUPON_PRICE, 0))
			  END AS COUPON_PRICE /* 재배송인 경우 (재배송수량 * 쿠폰할인금액) */
			, (OOD.CART_COUPON_PRICE + OOD.GOODS_COUPON_PRICE + OOD.DIRECT_PRICE) AS DISCOUNT_PRICE
			, IFNULL(OOD.COLLECTION_MALL_DETAIL_ID, '') AS COLLECTION_MALL_DETAIL_ID
			, IFNULL(OOD.OUTMALL_DETAIL_ID, '') AS OUTMALL_DETAIL_ID
			, IFNULL(OOD.EV_EXHIBIT_ID, 0) AS EV_EXHIBIT_ID
			, IFNULL(OOD.PROMOTION_TP, '') AS PROMOTION_TP
			, OODD.GOODS_CYCLE_TP AS GOODS_CYCLE_TP_CD /* 배송주기 코드 */
			, FN_COMN_CODE_DIC(IFNULL(OODD.GOODS_CYCLE_TP, '')) AS GOODS_CYCLE_TP /* 배송주기 */
			, FN_COMN_CODE_DIC(IFNULL(OODD.GOODS_CYCLE_TERM_TP, '')) AS GOODS_CYCLE_TERM_TP /* 배송기간 */
			, IFNULL(OODD.MON_CNT, 0) AS MON_CNT
			, IFNULL(OODD.TUE_CNT, 0) AS TUE_CNT
			, IFNULL(OODD.WED_CNT, 0) AS WED_CNT
			, IFNULL(OODD.THU_CNT, 0) AS THU_CNT
			, IFNULL(OODD.FRI_CNT, 0) AS FRI_CNT
			, IFNULL(OODD.SET_CNT, 0) AS SET_CNT /* 세트수량 : 일괄배송 해당 */
			, IFNULL(OODD.DAILY_BULK_YN, 'N') AS DAILY_BULK_YN /* 일괄배송 여부 */
			, IFNULL(OODD.ALLERGY_YN, 'N') AS ALLERGY_YN /* 알러지 식단 여부 */
			, IFNULL(OODD.SCHEDULE_YN, 'N') AS SCHEDULE_YN /* 스케쥴 생성 여부 / 베이비밀은 I/F여부 */
			, OOD.GOODS_DAILY_TP
			, CASE WHEN IFNULL(PC.PS_NM, '') != '' THEN
				CASE WHEN LOGISTICS_CD = 'LOTTE' THEN
					CASE WHEN OOD.UR_WAREHOUSE_GRP_CD = 'WAREHOUSE_GROUP.OWN' AND LOGISTICS_CD = 'LOTTE' THEN 'Y'
						   ELSE 'N'
						   END
				ELSE 'Y' END
			 ELSE 'N' END	AS TRACKING_YN	/* 트래킹 추적 가능여부 (대한통운, 롯데), 그외 자체 추적 */
			, PSC.TRACKING_URL		  						AS TRACKING_URL		/* 송장추적 URL */
			, IF(PSC.HTTP_REQUEST_TP = 'P', 'POST', 'GET')	AS HTTP_REQUEST_TP	/* HTTP 전송방법 */
			, PSC.INVOICE_PARAM 							AS INVOICE_PARAM	/* 송장파라미터 */
			, IFNULL(OTN.PS_SHIPPING_COMP_ID, 0)	AS PS_SHIPPING_COMP_ID	/* 택배사 PK */
			, OS.BOS_JSON
			, OS.ACTION_JSON
			, IFNULL(ERP_IF_YN, '') AS ERP_IF_YN
			, IFNULL(ITEM_TP, '') AS ITEM_TP
			, (OOD.ORDER_CNT-OOD.CANCEL_CNT) AS ORG_CLAIM_ABLE_CNT
			, OSP.IL_SHIPPING_TMPL_ID
			, PSC.LOGISTICS_CD
			, CONCAT("[",FN_COMN_CODE_DIC(OOD.ORDER_STATUS_DELI_TP),"]") AS ORDER_STATUS_DELI_TP
			, ST.BUNDLE_YN
			, OO.COLLECTION_MALL_ID
			, OO.OUTMALL_ID
			, CASE WHEN OOD.ORDER_STATUS_DELI_TP = 'ORDER_STATUS_DELI_TP.DAILY' ||
			    		OOD.ORDER_STATUS_DELI_TP = 'ORDER_STATUS_DELI_TP.SHOP_DELIVERY' ||
			    		OOD.ORDER_STATUS_DELI_TP = 'ORDER_STATUS_DELI_TP.SHOP_PICKUP' THEN IFNULL(UR.NM, US1.UR_STORE_NM)
			  ELSE '' END AS UR_STORE_NM
			, OOD.GOODS_DELIVERY_TYPE
			, OOD.RECOMMENDED_PRICE
-- 			, IFNULL(OODC.DISCOUNT_PRICE,0) AS DISCOUNT_EMPLOYEE_PRICE
		    , CASE
				WHEN IFNULL(FN_CLAIM_DETL_STATUS_CD(OOD.OD_ORDER_ID,OOD.OD_ORDER_DETL_ID), '') = 'EC'
				THEN IFNULL(OODC.DISCOUNT_PRICE,0) / OOD.ORDER_CNT * (OOD.ORDER_CNT-OOD.CANCEL_CNT)
				ELSE IFNULL(OODC.DISCOUNT_PRICE,0)
			  END AS DISCOUNT_EMPLOYEE_PRICE /* 재배송인 경우 (재배송수량 * 임직원할인금액) */
-- 			, CASE WHEN IFNULL(OODC.DISCOUNT_PRICE,0) > 0 THEN 0
-- 			       WHEN IFNULL(OODC.DISCOUNT_PRICE,0) = 0 THEN IFNULL(OOD.DIRECT_PRICE,0) END AS DIRECT_PRICE
		    , CASE WHEN IFNULL(FN_CLAIM_DETL_STATUS_CD(OOD.OD_ORDER_ID,OOD.OD_ORDER_DETL_ID), '') = 'EC' THEN
			       		CASE WHEN IFNULL(OODC.DISCOUNT_PRICE,0) > 0 THEN 0
			       		ELSE IFNULL(OOD.DIRECT_PRICE,0) / OOD.ORDER_CNT * (OOD.ORDER_CNT-OOD.CANCEL_CNT) END
			 	   ELSE CASE WHEN IFNULL(OODC.DISCOUNT_PRICE,0) > 0 THEN 0
			 	   		ELSE IFNULL(OOD.DIRECT_PRICE,0) END
			  END AS DIRECT_PRICE /* 재배송인 경우 (재배송수량 * 즉시할인금액) */
			, OOD.ORDER_STATUS_DELI_TP AS ORDER_STATUS_DELI_TP_CD
			, IFNULL(IUI.MISS_CNT, 0) as MISS_CNT
			, OTN.CREATE_DT AS SEND_END_DT
			, CONCAT(OOD.UR_WAREHOUSE_ID, '∀', OSP.IL_SHIPPING_TMPL_ID) AS GRP_SHIPPING_ID
			, OOD.SALE_TP_CD
		FROM
			OD_ORDER_DETL OOD
		INNER JOIN UR_WAREHOUSE UW ON OOD.UR_WAREHOUSE_ID = UW.UR_WAREHOUSE_ID
		INNER JOIN OD_SHIPPING_PRICE OSP ON OOD.OD_SHIPPING_PRICE_ID = OSP.OD_SHIPPING_PRICE_ID
		INNER JOIN OD_STATUS OS ON OS.STATUS_CD = OOD.ORDER_STATUS_CD
		LEFT OUTER JOIN IL_SHIPPING_TEMPLATE ST ON OOD.IL_GOODS_SHIPPING_TEMPLATE_ID = ST.IL_SHIPPING_TMPL_ID
		LEFT OUTER JOIN OD_TRACKING_NUMBER OTN ON OOD.OD_ORDER_DETL_ID  = OTN.OD_ORDER_DETL_ID
		LEFT OUTER JOIN PS_SHIPPING_COMP PSC ON PSC.PS_SHIPPING_COMP_ID = OTN.PS_SHIPPING_COMP_ID
		LEFT OUTER JOIN OD_ORDER_DETL_DAILY OODD ON OOD.OD_ORDER_DETL_ID = OODD.OD_ORDER_DETL_ID
		LEFT OUTER JOIN (
						SELECT	OD_ORDER_DETL_DAILY_ID,
								  COUNT(1) AS DELIVERY_CNT
						FROM	OD_ORDER_DETL_DAILY_SCH
						WHERE	DELIVERY_YN = 'Y'
						GROUP BY OD_ORDER_DETL_DAILY_ID
		) OODDS ON OODD.OD_ORDER_DETL_DAILY_ID = OODDS.OD_ORDER_DETL_DAILY_ID
		LEFT OUTER JOIN PS_CONFIG PC ON OTN.PS_SHIPPING_COMP_ID = PC.PS_KEY AND PS_GRP_TP = 'DELIVERY_TRACKING_SEARCH'
		LEFT OUTER JOIN IL_ITEM II ON OOD.IL_ITEM_CD = II.IL_ITEM_CD
		LEFT OUTER JOIN (
			SELECT
				SUM(IIUI.MISS_CNT) AS MISS_CNT
				, IIUI.ODID
				, IIUI.OD_ORDER_DETL_SEQ
			FROM IF_UNRELEASED_INFO IIUI
			INNER JOIN OD_ORDER_DETL IOOD ON IOOD.ODID = IIUI.ODID AND IOOD.OD_ORDER_DETL_SEQ = IIUI.OD_ORDER_DETL_SEQ
			WHERE IOOD.OD_ORDER_ID = #{odOrderId}
			GROUP BY IIUI.ODID, IIUI.OD_ORDER_DETL_SEQ
		) IUI ON OOD.ODID = IUI.ODID AND OOD.OD_ORDER_DETL_SEQ = IUI.OD_ORDER_DETL_SEQ
		LEFT OUTER JOIN (
			SELECT
				SUM(IF(IOCD.PRIORITY_UNDELIVERED_YN = 'Y', IOCD.CLAIM_CNT, 0)) AS CLAIM_CNT
			    , SUM(IF(IOCD.IF_UNRELEASED_INFO_ID > 0, IOCD.CLAIM_CNT, 0)) AS MISS_CLAIM_CNT
				, IOCD.OD_ORDER_DETL_ID
			FROM OD_CLAIM IOC
			INNER JOIN OD_CLAIM_DETL IOCD ON IOC.OD_CLAIM_ID = IOCD.OD_CLAIM_ID
			WHERE IOC.OD_ORDER_ID = #{odOrderId}
			AND IOC.CLAIM_YN = 'Y'
			GROUP BY IOCD.OD_ORDER_DETL_ID
		) OCD ON OOD.OD_ORDER_DETL_ID = OCD.OD_ORDER_DETL_ID
		LEFT OUTER JOIN OD_SHIPPING_ZONE OSZ ON OSZ.OD_SHIPPING_ZONE_ID = OOD.OD_SHIPPING_ZONE_ID
		INNER JOIN OD_ORDER OO ON OOD.OD_ORDER_ID = OO.OD_ORDER_ID
		LEFT OUTER JOIN OD_ORDER_DETL_DAILY OODA ON OSZ.OD_ORDER_ID = OODA.OD_ORDER_ID
	    LEFT OUTER JOIN UR_STORE_DELIVERY_AREA USDA ON OODA.UR_STORE_ID = USDA.UR_STORE_ID
		LEFT OUTER JOIN UR_STORE UR ON USDA.UR_STORE_ID = UR.UR_STORE_ID
		LEFT OUTER JOIN (
						SELECT US.NM AS UR_STORE_NM
							 , OO.OD_ORDER_ID
						FROM UR_STORE US
						INNER JOIN OD_ORDER OO ON OO.UR_STORE_ID = US.UR_STORE_ID
						WHERE OO.OD_ORDER_ID = #{odOrderId}
						) US1 ON US1.OD_ORDER_ID = OOD.OD_ORDER_ID
		LEFT OUTER JOIN (
					SELECT	T2.*
					FROM	OD_ORDER_DETL T1
					INNER JOIN OD_ORDER_DETL_DISCOUNT T2 ON T1.OD_ORDER_ID = T2.OD_ORDER_ID AND T1.OD_ORDER_DETL_ID = T2.OD_ORDER_DETL_ID
					WHERE	T2.DISCOUNT_TP = 'GOODS_DISCOUNT_TP.EMPLOYEE'
				) OODC ON OOD.OD_ORDER_DETL_ID = OODC.OD_ORDER_DETL_ID
		WHERE
			OOD.OD_ORDER_ID = #{odOrderId}
		GROUP BY OOD.OD_ORDER_DETL_ID
		UNION ALL
		SELECT
			OODP.OD_ORDER_DETL_ID  											/* 주문상세PK */
			, 0 AS OD_ORDER_DETL_SEQ 											/* 주문상세순번 */
			, OODP.OD_ORDER_DETL_STEP_ID
			, 1 AS OD_ORDER_DETL_DEPTH_ID
			, OODP.OD_ORDER_DETL_ID AS OD_ORDER_DETL_PARENT_ID
		    , '' AS BATCH_EXEC_FL
		    , 0 AS DELIVERY_CNT
			, '' AS IL_ITEM_CD													/* 품목PK */
			, '' AS ITEM_BARCODE
			, OODP.IL_GOODS_ID											/* 상품 PK */
			, OODP.GOODS_NM 													/* 상품명 */
			, '' AS STORAGE_TYPE
			, FN_STATUS_NM(OOD.ORDER_STATUS_CD) AS ORDER_STATUS
			, OOD.ORDER_STATUS_CD AS ORDER_STATUS_CODE
			, OODP.ORDER_CNT
			, 0 AS CANCEL_CNT
			, '' AS CLAIM_DETL_STATUS_NM
			, 0 AS CLAIM_ABLE_CNT
			, '' AS ORDER_IF_DT
			, '' AS SHIPPING_DT
			, '' AS DELIVERY_DT
			, OODP.GOODS_TP_CD AS GOODS_TP_CD
			, CASE OODP.GOODS_DELIVERY_TYPE
		   	  	WHEN 'GOODS_DELIVERY_TYPE.RESERVATION' THEN CONCAT(FN_COMN_CODE_DIC(OODP.GOODS_TP_CD), '(예약)')
		      	ELSE FN_COMN_CODE_DIC(OODP.GOODS_TP_CD)
		      END AS GOODS_TP_CD_NM
			, UW.WAREHOUSE_NM AS WAREHOUSE_NM
			, OOD.UR_WAREHOUSE_ID
			, '' AS TRACKING_NO
			, '' AS SHIPPING_COMP_NM
			, OOD.OD_SHIPPING_ZONE_ID
			, OSP.SHIPPING_PRICE
			, '' AS SHIPPING_NM
			, OODP.PAID_PRICE
			, OODP.SALE_PRICE
			, (OODP.SALE_PRICE * OODP.ORDER_CNT) AS TOTAL_GOODS_PRICE /*판매가 * 수량*/
			, (IFNULL(OODP.CART_COUPON_PRICE, 0) + IFNULL(OODP.GOODS_COUPON_PRICE, 0)) AS COUPON_PRICE
			, (OODP.CART_COUPON_PRICE + OODP.GOODS_COUPON_PRICE + OODP.DIRECT_PRICE) AS DISCOUNT_PRICE
			, IFNULL(OOD.COLLECTION_MALL_DETAIL_ID, '') AS COLLECTION_MALL_DETAIL_ID
			, IFNULL(OOD.OUTMALL_DETAIL_ID, '') AS OUTMALL_DETAIL_ID
			, IFNULL(OOD.EV_EXHIBIT_ID, 0) AS EV_EXHIBIT_ID
			, IFNULL(OOD.PROMOTION_TP, '') AS PROMOTION_TP
			, '' AS GOODS_CYCLE_TP_CD
			, '' AS GOODS_CYCLE_TP
			, '' AS GOODS_CYCLE_TERM_TP
			, 0 AS MON_CNT
			, 0 AS TUE_CNT
			, 0 AS WED_CNT
			, 0 AS THU_CNT
			, 0 AS FRI_CNT
			, 0 AS SET_CNT
			, 'N' AS DAILY_BULK_YN
			, 'N' AS ALLERGY_YN /* 알러지 식단 여부 */
			, 'N' AS SCHEDULE_YN /* 스케쥴 생성 여부 / 베이비밀은 I/F여부 */
			, '' AS GOODS_DAILY_TP
			, '' AS TRACKING_YN			/* 트래킹 추적 가능여부 (대한통운, 롯데), 그외 자체 추적 */
			, '' AS TRACKING_URL 		/* 송장추적 URL */
			, '' AS HTTP_REQUEST_TP		/* HTTP 전송방법 */
			, '' AS INVOICE_PARAM		/* 송장파라미터 */
			, '' AS PS_SHIPPING_COMP_ID	/* 택배사 PK */
			, '[]' AS FRONT_JSON													/* 상태 JSON 데이터 */
			, '{}' AS ACTION_JSON
			, '' AS ERP_IF_YN
			, '' AS ITEM_TP
			, 0 AS ORG_CLAIM_ABLE_CNT
			, OSP.IL_SHIPPING_TMPL_ID
			, '' AS LOGISTICS_CD
			, CONCAT("[",FN_COMN_CODE_DIC(OOD.ORDER_STATUS_DELI_TP),"]") AS ORDER_STATUS_DELI_TP
			, ST.BUNDLE_YN
			, OO.COLLECTION_MALL_ID
			, OO.OUTMALL_ID
			, CASE WHEN OOD.ORDER_STATUS_DELI_TP = 'ORDER_STATUS_DELI_TP.DAILY' ||
			    		OOD.ORDER_STATUS_DELI_TP = 'ORDER_STATUS_DELI_TP.SHOP_DELIVERY' ||
			    		OOD.ORDER_STATUS_DELI_TP = 'ORDER_STATUS_DELI_TP.SHOP_PICKUP' THEN IFNULL(UR.NM, US1.UR_STORE_NM)
			  ELSE '' END AS UR_STORE_NM
			, OOD.GOODS_DELIVERY_TYPE
			, OODP.RECOMMENDED_PRICE
			, IFNULL(OODC.DISCOUNT_PRICE,0) AS DISCOUNT_EMPLOYEE_PRICE
			, CASE WHEN IFNULL(OODC.DISCOUNT_PRICE,0) > 0 THEN 0
					 WHEN IFNULL(OODC.DISCOUNT_PRICE,0) = 0 THEN IFNULL(OODP.DIRECT_PRICE,0) END AS DIRECT_PRICE
			, OOD.ORDER_STATUS_DELI_TP AS ORDER_STATUS_DELI_TP_CD
			, 0 as MISS_CNT
			, OTN.CREATE_DT AS SEND_END_DT
			, CONCAT(OOD.UR_WAREHOUSE_ID, '∀', OSP.IL_SHIPPING_TMPL_ID) AS GRP_SHIPPING_ID
			, OOD.SALE_TP_CD
		FROM
			OD_ORDER_DETL OOD
		INNER JOIN UR_WAREHOUSE UW ON OOD.UR_WAREHOUSE_ID = UW.UR_WAREHOUSE_ID
		INNER JOIN OD_ORDER_DETL_PACK OODP ON OOD.OD_ORDER_DETL_PARENT_ID = OODP.OD_ORDER_DETL_ID
		LEFT OUTER JOIN OD_ORDER_DETL_DAILY OODD ON OOD.OD_ORDER_DETL_ID = OODD.OD_ORDER_DETL_ID
		LEFT OUTER JOIN OD_SHIPPING_PRICE OSP ON OOD.OD_SHIPPING_PRICE_ID = OSP.OD_SHIPPING_PRICE_ID
		LEFT OUTER JOIN OD_TRACKING_NUMBER OTN ON OOD.OD_ORDER_DETL_ID  = OTN.OD_ORDER_DETL_ID
		LEFT OUTER JOIN PS_SHIPPING_COMP PSC ON PSC.PS_SHIPPING_COMP_ID = OTN.PS_SHIPPING_COMP_ID
		LEFT OUTER JOIN OD_SHIPPING_ZONE OSZ ON OSZ.OD_SHIPPING_ZONE_ID = OOD.OD_SHIPPING_ZONE_ID
		LEFT OUTER JOIN IL_SHIPPING_TEMPLATE ST ON OOD.IL_GOODS_SHIPPING_TEMPLATE_ID = ST.IL_SHIPPING_TMPL_ID
		INNER JOIN OD_ORDER OO ON OOD.OD_ORDER_ID = OO.OD_ORDER_ID
		LEFT OUTER JOIN OD_ORDER_DETL_DAILY OODA ON OSZ.OD_ORDER_ID = OODA.OD_ORDER_ID
	    LEFT OUTER JOIN UR_STORE_DELIVERY_AREA USDA ON OODA.UR_STORE_ID = USDA.UR_STORE_ID
		LEFT OUTER JOIN UR_STORE UR ON USDA.UR_STORE_ID = UR.UR_STORE_ID
		LEFT OUTER JOIN (
						SELECT US.NM AS UR_STORE_NM
							 , OO.OD_ORDER_ID
						FROM UR_STORE US
						INNER JOIN OD_ORDER OO ON OO.UR_STORE_ID = US.UR_STORE_ID
						WHERE OO.OD_ORDER_ID = #{odOrderId}
						) US1 ON US1.OD_ORDER_ID = OOD.OD_ORDER_ID
		LEFT OUTER JOIN (
					SELECT	T2.*
					FROM	OD_ORDER_DETL T1
					INNER JOIN OD_ORDER_DETL_DISCOUNT T2 ON T1.OD_ORDER_ID = T2.OD_ORDER_ID AND T1.OD_ORDER_DETL_ID = T2.OD_ORDER_DETL_ID
					WHERE	T2.DISCOUNT_TP = 'GOODS_DISCOUNT_TP.EMPLOYEE'
				) OODC ON OOD.OD_ORDER_DETL_ID = OODC.OD_ORDER_DETL_ID
		WHERE
			OOD.OD_ORDER_ID = #{odOrderId}
		GROUP BY OODP.OD_ORDER_DETL_ID
		ORDER BY OD_ORDER_DETL_STEP_ID DESC
	</select>

	<select id="getOrderDetailClaimGoodsList" parameterType="string" resultMap="getOrderDetailGoodsListResultMap">
		/*	order.detail.getOrderDetailClaimGoodsList  */
		<![CDATA[
	 SELECT	  OC.OD_CLAIM_ID
	      	, OCD.OD_CLAIM_DETL_ID
			, UU.USER_TP
			, FN_DECRYPT(UU.USER_NM) AS USER_NM
			, UU.LOGIN_ID
			, OOD.OD_ORDER_DETL_ID
	 		, OOD.OD_ORDER_DETL_SEQ
			, IFNULL(ATTC_CNT, 'N') AS OD_CLAIM_ATTC_ID_EXIST
			, OC.PS_CLAIM_MALL_ID
			, OC.TARGET_TP
			, OC.RETURNS_YN
			, IFNULL(FN_CLAIM_BOS_ID(OCD.BOS_CLAIM_LARGE_ID, 10), '') AS BOS_CLAIM_LARGE_NM
			, IFNULL(FN_CLAIM_BOS_ID(OCD.BOS_CLAIM_MIDDLE_ID , 20), '') AS BOS_CLAIM_MIDDLE_NM
			, IFNULL(FN_CLAIM_BOS_ID(OCD.BOS_CLAIM_SMALL_ID, 30), '') AS BOS_CLAIM_SMALL_NM
			, PCM.REASON_MSG
			, PCB.L_CLAIM_CTGRY_ID
			, PCB.M_CLAIM_CTGRY_ID
			, PCB.S_CLAIM_CTGRY_ID
			, OC.CLAIM_REASON_MSG
			, DATE_FORMAT(OC.CREATE_DT,'%Y-%m-%d %H:%i:%s')  AS CLAIM_DT
			, DATE_FORMAT(OC.APPROVAL_DT,'%Y-%m-%d %H:%i:%s') AS CLAIM_APPROVAL_DT
			, OOD.IL_ITEM_CD
			, OOD.ITEM_BARCODE
			, OOD.IL_GOODS_ID
			, OOD.GOODS_NM
			, FN_COMN_CODE_DIC(OOD.STORAGE_TYPE_CD) AS STORAGE_TYPE
			, OOD.ORDER_STATUS_CD AS ORDER_STATUS_CODE
			, FN_STATUS_NM(OOD.ORDER_STATUS_CD) AS ORDER_STATUS
			, FN_STATUS_NM(OCD.CLAIM_STATUS_CD) AS CLAIM_STATUS
			, OCD.CLAIM_STATUS_CD AS CLAIM_STATUS_CODE
			, OOD.ORDER_CNT
			, OCD.CLAIM_CNT AS CANCEL_CNT
			, (OOD.ORDER_CNT- OCD.CLAIM_CNT) AS CLAIM_ABLE_CNT
			, CONCAT(DATE_FORMAT(OOD.ORDER_IF_DT,'%Y-%m-%d')) AS ORDER_IF_DT
			, CONCAT(DATE_FORMAT(OOD.SHIPPING_DT,'%Y-%m-%d')) AS SHIPPING_DT
			, CONCAT(DATE_FORMAT(OOD.DELIVERY_DT,'%Y-%m-%d')) AS DELIVERY_DT
			, FN_COMN_CODE_DIC(GOODS_TP_CD) AS GOODS_TP_CD_NM
	    	, UW.UR_WAREHOUSE_ID
			, UW.WAREHOUSE_NM
			, OTN.TRACKING_NO
			, PSC.SHIPPING_COMP_NM
			, OOD.OD_SHIPPING_ZONE_ID
			, OC.SHIPPING_PRICE
			, IST.NAME AS SHIPPING_NM
			, OOD.PAID_PRICE
			, (OCD.CART_COUPON_PRICE + OCD.GOODS_COUPON_PRICE) AS DISCOUNT_PRICE
			, OOD.COLLECTION_MALL_DETAIL_ID
			, OOD.OUTMALL_DETAIL_ID
			, OS.BOS_JSON
			, OS.ACTION_JSON
	 		, CASE WHEN IFNULL(PC.PS_NM, '') != '' THEN 'Y' ELSE 'N' END	AS TRACKING_YN	/* 트래킹 추적 가능여부 (대한통운, 롯데), 그외 자체 추적 */
			, PSC.TRACKING_URL		  						AS TRACKING_URL		/* 송장추적 URL */
			, IF(PSC.HTTP_REQUEST_TP = 'P', 'POST', 'GET')	AS HTTP_REQUEST_TP	/* HTTP 전송방법 */
			, PSC.INVOICE_PARAM 							AS INVOICE_PARAM	/* 송장파라미터 */
			, IFNULL(OTN.PS_SHIPPING_COMP_ID, 0)	AS PS_SHIPPING_COMP_ID	/* 택배사 PK */
	      	, OOD.UR_WAREHOUSE_ID
	        , IFNULL(OODD.GOODS_CYCLE_TP, '') AS GOODS_CYCLE_TP_CD /* 배송주기 코드 */
	 		, IFNULL(OODD.MON_CNT, 0) AS MON_CNT
			, IFNULL(OODD.TUE_CNT, 0) AS TUE_CNT
			, IFNULL(OODD.WED_CNT, 0) AS WED_CNT
			, IFNULL(OODD.THU_CNT, 0) AS THU_CNT
			, IFNULL(OODD.FRI_CNT, 0) AS FRI_CNT
			, IFNULL(ERP_IF_YN, '') AS ERP_IF_YN
        	, IFNULL(ITEM_TP, '') AS ITEM_TP
	 		, OC.REFUND_POINT_PRICE
	 		, OC.REFUND_PRICE
			, OCD.PAID_PRICE AS TOTAL_GOODS_PRICE
		 /* , OC.GOODS_PRICE AS TOTAL_GOODS_PRICE */
			, (OOD.ORDER_CNT - (SELECT SUM(CLAIM_CNT)
							   FROM OD_CLAIM x
							   INNER JOIN OD_CLAIM_DETL y ON x.OD_CLAIM_ID = y.OD_CLAIM_ID
							   WHERE y.OD_ORDER_DETL_ID = OCD.OD_ORDER_DETL_ID
							   AND y.OD_CLAIM_DETL_ID <= OCD.OD_CLAIM_DETL_ID
							   AND x.CLAIM_YN = 'Y')) AS ORG_CLAIM_ABLE_CNT
			, PSC.LOGISTICS_CD
			, OO.COLLECTION_MALL_ID
			, OO.OUTMALL_ID
	 		, IF(OOD.ORDER_STATUS_DELI_TP = 'ORDER_STATUS_DELI_TP.RENTAL', OST.BOS_JSON, '') AS ORDER_BOS_JSON
	 		, IF(OOD.ORDER_STATUS_DELI_TP = 'ORDER_STATUS_DELI_TP.RENTAL', OS.BOS_JSON, '') AS CLAIM_BOS_JSON
		FROM
			OD_CLAIM OC
			LEFT JOIN OD_CLAIM_DETL OCD ON OC.OD_CLAIM_ID = OCD.OD_CLAIM_ID
			LEFT JOIN
			(
				SELECT
					OD_CLAIM_ID,
					COUNT(1) AS ATTC_CNT
				FROM
					OD_CLAIM_ATTC
				GROUP BY OD_CLAIM_ID
			) OCA ON OC.OD_CLAIM_ID = OCA.OD_CLAIM_ID
			LEFT JOIN OD_ORDER_DETL OOD ON OCD.OD_ORDER_DETL_ID = OOD.OD_ORDER_DETL_ID
			LEFT JOIN UR_WAREHOUSE UW ON OOD.UR_WAREHOUSE_ID = UW.UR_WAREHOUSE_ID
			LEFT JOIN OD_TRACKING_NUMBER OTN ON OOD.OD_ORDER_DETL_ID  = OTN.OD_ORDER_DETL_ID
			LEFT JOIN PS_SHIPPING_COMP PSC ON PSC.PS_SHIPPING_COMP_ID = OTN.PS_SHIPPING_COMP_ID
			LEFT OUTER JOIN PS_CONFIG PC ON OTN.PS_SHIPPING_COMP_ID = PC.PS_KEY AND PS_GRP_TP = 'DELIVERY_TRACKING_SEARCH'
			LEFT JOIN OD_SHIPPING_PRICE OSP ON OOD.OD_SHIPPING_PRICE_ID = OSP.OD_SHIPPING_PRICE_ID
			LEFT JOIN IL_SHIPPING_TEMPLATE IST ON OOD.IL_GOODS_SHIPPING_TEMPLATE_ID = IST.IL_SHIPPING_TMPL_ID
			LEFT JOIN OD_STATUS OS ON OS.STATUS_CD = OCD.CLAIM_STATUS_CD
			LEFT JOIN PS_CLAIM_MALL PCM ON OC.PS_CLAIM_MALL_ID  = PCM.PS_CLAIM_MALL_ID
			LEFT JOIN PS_CLAIM_BOS PCB ON OC.CLAIM_REASON_CD  = PCB.PS_CLAIM_BOS_ID
			LEFT OUTER JOIN OD_ORDER_DETL_DAILY OODD ON OOD.OD_ORDER_ID = OODD.OD_ORDER_ID AND OOD.OD_ORDER_DETL_ID = OODD.OD_ORDER_DETL_ID
			LEFT OUTER JOIN UR_USER UU ON  OC.CREATE_ID = UU.UR_USER_ID
			LEFT OUTER JOIN IL_ITEM II ON OOD.IL_ITEM_CD = II.IL_ITEM_CD
			INNER JOIN OD_ORDER OO ON OO.OD_ORDER_ID = OOD.OD_ORDER_ID
	 		INNER JOIN OD_STATUS OST ON OST.STATUS_CD = OOD.ORDER_STATUS_CD
	   WHERE
			OC.OD_ORDER_ID = #{odOrderId}
		/* GROUP BY OD_CLAIM_ID */
		ORDER BY OC.OD_CLAIM_ID DESC, OOD.OD_ORDER_DETL_SEQ ASC
		]]>
	</select>

	<!-- 주문상세 주문 상세 결제정보(결제상세정보) resultMap -->
	<resultMap id="getOrderDetailPayDetlListResultMap" type="kr.co.pulmuone.v1.order.order.dto.OrderDetailPayDetlListDto">
		<result property="createDt" column="CREATE_DT" />
		<result property="approvalDt" column="APPROVAL_DT" />
		<result property="salePrice" column="SALE_PRICE" />
		<result property="shippingPrice" column="SHIPPING_PRICE" />
		<result property="discountCouponPrice" column="DISCOUNT_COUPON_PRICE" />
		<result property="paymentTargetPrice" column="PAYMENT_TARGET_PRICE" />
		<result property="pointPrice" column="POINT_PRICE" />
		<result property="discountEmployeePrice" column="DISCOUNT_EMPLOYEE_PRICE" />
		<result property="paymentPrice" column="PAYMENT_PRICE" />
		<result property="paymentPriceMaster" column="PAYMENT_PRICE_MASTER" />
		<result property="status" column="STATUS" />
		<result property="payType"    column="PAY_TYPE"/>
		<result property="cardQuota" column="CARD_QUOTA" />
		<result property="payInfo" column="PAY_INFO" />
		<result property="shippingCouponPrice" column="SHIPPING_COUPON_PRICE" />
		<result property="cartCouponPrice" column="CART_COUPON_PRICE" />
		<result property="goodsCouponPrice" column="GOODS_COUPON_PRICE" />
		<result property="directPrice" column="DIRECT_PRICE" />
		<result property="paidPrice" column="PAID_PRICE" />
		<result property="taxablePrice" column="TAXABLE_PRICE" />
		<result property="nonTaxablePrice" column="NON_TAXABLE_PRICE" />
		<result property="urEmployeeYn"    column="UR_EMPLOYEE_YN"/>
		<result property="tid"    column="TID"/>
		<result property="odid"    column="ODID"/>
		<result property="payTypeCd" column="PAY_TYPE_CD" />
		<result property="pgServiceCd"    column="PG_SERVICE_CD"/>
		<result property="cashReceiptNo"    column="CASH_RECEIPT_NO"/>
		<result property="cashReceiptAuthNo"    column="CASH_RECEIPT_AUTH_NO"/>
	</resultMap>
	<select id="getOrderDetailPayDetlList" parameterType="string" resultMap="getOrderDetailPayDetlListResultMap">
		/*	order.detail.getOrderDetailPayDetlList  */
		SELECT
		      DATE_FORMAT(OPM.CREATE_DT,'%Y-%m-%d %H:%i:%s') AS CREATE_DT																			/* 주문일자 */
			 ,DATE_FORMAT(OPM.APPROVAL_DT,'%Y-%m-%d %H:%i:%s') AS APPROVAL_DT 																		/* 결제일자 */
--			 ,IF(IFNULL(SUM(OODD.DISCOUNT_PRICE), 0) > 0,  OOD.TOTAL_GOODS_PRICE , OPM.SALE_PRICE) + (OSP.SHIPPING_PRICE + OSP.SHIPPING_DISCOUNT_PRICE)  AS  TOTAL_ORDER_PRICE 		/* 총 주문금액 */
			 ,IF(IFNULL(SUM(OODD.DISCOUNT_PRICE), 0) <![CDATA[>]]> 0,  OOD.TOTAL_GOODS_PRICE
				  										, IF(COUNT(OP2.OD_PAYMENT_MASTER_ID) <![CDATA[>]]> 1, OP.SALE_PRICE, OPM.SALE_PRICE))
				+ (OSP.SHIPPING_PRICE + OSP.SHIPPING_DISCOUNT_PRICE)  AS  TOTAL_ORDER_PRICE														/* 총 주문금액 */
--			 ,IF(IFNULL(SUM(OODD.DISCOUNT_PRICE), 0) > 0,  OOD.TOTAL_GOODS_PRICE , OPM.SALE_PRICE) AS SALE_PRICE								/* 총 상품금액 */
			 ,IF(IFNULL(SUM(OODD.DISCOUNT_PRICE), 0) <![CDATA[>]]> 0,  OOD.TOTAL_GOODS_PRICE
														, IF(COUNT(OP2.OD_PAYMENT_MASTER_ID) <![CDATA[>]]> 1, OP.SALE_PRICE, OPM.SALE_PRICE)) AS SALE_PRICE		/* 총 상품금액 */
			 ,(OSP.SHIPPING_PRICE + OSP.SHIPPING_DISCOUNT_PRICE) AS SHIPPING_PRICE																/* 배송비 (배송비 + 배송비할인금액) */
--			 ,(OPM.CART_COUPON_PRICE + OPM.GOODS_COUPON_PRICE + OSP.SHIPPING_DISCOUNT_PRICE) AS DISCOUNT_COUPON_PRICE							/* 쿠폰할인 (상품쿠폰 + 장바구니쿠폰 + 베송비쿠폰) */
			 ,IF(COUNT(OP2.OD_PAYMENT_MASTER_ID) <![CDATA[>]]> 1, (OPM.CART_COUPON_PRICE + OPM.GOODS_COUPON_PRICE + OSP.SHIPPING_DISCOUNT_PRICE)
									, (OP.CART_COUPON_PRICE + OP.GOODS_COUPON_PRICE + OSP.SHIPPING_DISCOUNT_PRICE)) AS DISCOUNT_COUPON_PRICE	/* 쿠폰할인 (상품쿠폰 + 장바구니쿠폰 + 베송비쿠폰) */
-- 			 ,CASE WHEN OODD.DISCOUNT_TP = 'GOODS_DISCOUNT_TP.IMMEDIATE' THEN IFNULL(SUM(OODD.DISCOUNT_PRICE), 0) ELSE 0 END AS DIRECT_PRICE
-- 			 ,CASE WHEN OODD.DISCOUNT_TP = 'GOODS_DISCOUNT_TP.EMPLOYEE' THEN IFNULL(SUM(OODD.DISCOUNT_PRICE), 0) ELSE 0 END AS DISCOUNT_EMPLOYEE_PRICE
--			 ,CASE WHEN IFNULL(SUM(OODD.DISCOUNT_PRICE), 0) > 0 THEN 0
--			    	 WHEN IFNULL(SUM(OODD.DISCOUNT_PRICE), 0) = 0 THEN IFNULL(OPM.DIRECT_PRICE,0) END AS DIRECT_PRICE							/* 즉시할인 */
			 ,CASE	WHEN IFNULL(SUM(OODD.DISCOUNT_PRICE), 0) <![CDATA[>]]> 0
						THEN 0
					WHEN IFNULL(SUM(OODD.DISCOUNT_PRICE), 0) = 0
						THEN IFNULL(IF(COUNT(OP2.OD_PAYMENT_MASTER_ID) <![CDATA[>]]> 1, OP.DIRECT_PRICE, OPM.DIRECT_PRICE),0)
			 END AS DIRECT_PRICE																												/* 즉시할인 */
			 ,IFNULL(SUM(OODD.DISCOUNT_PRICE), 0) AS DISCOUNT_EMPLOYEE_PRICE   	  																/*임직원 지원금*/
-- 			 ,(IF(IFNULL(SUM(OODD.DISCOUNT_PRICE), 0) > 0,  OOD.TOTAL_GOODS_PRICE , OPM.SALE_PRICE) + (OSP.SHIPPING_PRICE + OSP.SHIPPING_DISCOUNT_PRICE)) - (OPM.CART_COUPON_PRICE + OPM.GOODS_COUPON_PRICE + OSP.SHIPPING_DISCOUNT_PRICE)
-- 			  - OPM.DIRECT_PRICE AS PAYMENT_TARGET_PRICE																						/* 결제대상금액 */
--			 ,OPM.PAYMENT_PRICE + OPM.POINT_PRICE AS PAYMENT_TARGET_PRICE 																		/* 결제대상금액 */
			 ,IF(COUNT(OP2.OD_PAYMENT_MASTER_ID) <![CDATA[>]]> 1, OP.PAYMENT_PRICE + OP.POINT_PRICE, OPM.PAYMENT_PRICE + OPM.POINT_PRICE) AS PAYMENT_TARGET_PRICE			/* 결제대상금액 */
--		     ,OPM.POINT_PRICE AS POINT_PRICE 																									/* 적립금사용 */
			 ,IF(COUNT(OP2.OD_PAYMENT_MASTER_ID) <![CDATA[>]]> 1, OP.POINT_PRICE, OPM.POINT_PRICE) AS POINT_PRICE															/* 적립금사용 */
-- 			 ,(IF(IFNULL(SUM(OODD.DISCOUNT_PRICE), 0) > 0,  OOD.TOTAL_GOODS_PRICE , OPM.SALE_PRICE) + (OSP.SHIPPING_PRICE + OSP.SHIPPING_DISCOUNT_PRICE)) - (OPM.CART_COUPON_PRICE + OPM.GOODS_COUPON_PRICE + OSP.SHIPPING_DISCOUNT_PRICE)
-- 			  - OPM.DIRECT_PRICE  - OPM.POINT_PRICE  AS PAYMENT_PRICE																		/* 최종결제금액 */
		 	 ,IF(COUNT(OP2.OD_PAYMENT_MASTER_ID)  <![CDATA[>]]> 1, OPM.PAYMENT_PRICE, 0) AS PAYMENT_PRICE_MASTER 						/* 최종결제마스터금액(od_payment_master.payment_price) */
		 	 ,IF(COUNT(OP2.OD_PAYMENT_MASTER_ID)  <![CDATA[>]]> 1, OP.PAYMENT_PRICE, OPM.PAYMENT_PRICE) AS PAYMENT_PRICE 				/* 최종결제금액 */
			 ,FN_STATUS_NM(OPM.STATUS) AS STATUS 																	/*결제상태 : 입금완료, 입금대기중, 입금전취소*/
--			 ,FN_COMN_CODE_DIC(OPM.PAY_TP) AS PAY_TYPE 																/*결제방법*/
			 ,CASE 	WHEN OOD.REGULAR_CNT <![CDATA[>]]> 0
					THEN IF(OPM.STATUS = 'IC', FN_COMN_CODE_DIC(OPM.PAY_TP), '정기결제')
					ELSE IFNULL(FN_COMN_CODE_DIC(OPM.PAY_TP), '-')
			  END AS PAY_TYPE 																/*결제방법*/
			 ,IF(OPM.PAY_TP = 'PAY_TP.CARD', OPM.CARD_QUOTA, '') AS CARD_QUOTA 										/*카드 > 카드번호*/
			 ,CASE OPM.PAY_TP WHEN 'PAY_TP.CARD' THEN CONCAT(OPM.INFO, ' (', FN_COMN_CODE_DIC(OPM.PG_SERVICE), '/', IFNULL(OPM.CARD_NUMBER, ''), ')')
							  WHEN 'PAY_TP.VIRTUAL_BANK' THEN CONCAT(OPM.BANK_NM, ' ', OPM.VIRTUAL_ACCOUNT_NUMBER, '(', FN_COMN_CODE_DIC(OPM.PG_SERVICE), ')')
							  WHEN 'PAY_TP.BANK' THEN  CONCAT(IFNULL(OPM.INFO, ''), ' (', FN_COMN_CODE_DIC(OPM.PG_SERVICE), ')')
							  WHEN 'PAY_TP.FREE' THEN  '무료결제'
							  WHEN 'PAY_TP.COLLECTION' THEN  '외부몰결제'
							  WHEN 'PAY_TP.DIRECT' THEN '직접결제'
							  ELSE '' END AS PAY_INFO 																/*결제기관(PG)*/
			 ,IF(COUNT(OP2.OD_PAYMENT_MASTER_ID) <![CDATA[>]]> 1, OP.CART_COUPON_PRICE, OPM.CART_COUPON_PRICE) AS CART_COUPON_PRICE
			 ,IF(COUNT(OP2.OD_PAYMENT_MASTER_ID) <![CDATA[>]]> 1, OP.GOODS_COUPON_PRICE, OPM.GOODS_COUPON_PRICE) AS GOODS_COUPON_PRICE
			 ,IF(COUNT(OP2.OD_PAYMENT_MASTER_ID) <![CDATA[>]]> 1, OP.DIRECT_PRICE, OPM.DIRECT_PRICE) AS DIRECT_PRICE
			 ,IF(COUNT(OP2.OD_PAYMENT_MASTER_ID) <![CDATA[>]]> 1, OP.PAID_PRICE, OPM.PAID_PRICE) AS PAID_PRICE
			 ,IF(COUNT(OP2.OD_PAYMENT_MASTER_ID) <![CDATA[>]]> 1, OP.TAXABLE_PRICE, OPM.TAXABLE_PRICE) AS TAXABLE_PRICE
			 ,IF(COUNT(OP2.OD_PAYMENT_MASTER_ID) <![CDATA[>]]> 1, OP.NON_TAXABLE_PRICE, OPM.NON_TAXABLE_PRICE) AS NON_TAXABLE_PRICE
			 ,(
				SELECT
					IFNULL(SUM(SHIPPING_DISCOUNT_PRICE), 0)
				FROM(
						SELECT
							OSP.SHIPPING_DISCOUNT_PRICE
						FROM OD_SHIPPING_PRICE OSP
								 INNER JOIN OD_ORDER_DETL OOD ON OOD.OD_SHIPPING_PRICE_ID = OSP.OD_SHIPPING_PRICE_ID
						WHERE
							OOD.OD_ORDER_ID = #{odOrderId}
						  AND OSP.PM_COUPON_ISSUE_ID >  0
						GROUP BY OSP.OD_SHIPPING_PRICE_ID
					) A
			) AS  SHIPPING_COUPON_PRICE 																			/*배송비 > 배송비쿠폰 이용 시 */
			 , (CASE WHEN IFNULL(OO.UR_EMPLOYEE_CD, '') != ''  THEN 'Y' ELSE 'N' END) AS UR_EMPLOYEE_YN
			 , OPM.TID																								/* 거래 ID */
			 , OPM.PAY_TP AS PAY_TYPE_CD																				/* 결제방법 공통코드 */
			 , OO.ODID																								/* 주문번호 */
			 , OPM.PG_SERVICE AS PG_SERVICE_CD																		/* PG종류 공통코드 */
			 , IFNULL(OOCR.CASH_RECEIPT_NO,'') AS CASH_RECEIPT_NO													/* 현금영수증 신청번호*/
			 , IFNULL(OOCR.CASH_RECEIPT_AUTH_NO,'') AS CASH_RECEIPT_AUTH_NO											/* 현금영수증 승인번호 */
		FROM OD_PAYMENT OP
		INNER JOIN OD_PAYMENT_MASTER OPM ON OP.OD_PAYMENT_MASTER_ID = OPM.OD_PAYMENT_MASTER_ID
		INNER JOIN OD_PAYMENT OP2 ON OP2.OD_PAYMENT_MASTER_ID = OPM.OD_PAYMENT_MASTER_ID
		INNER JOIN OD_ORDER OO ON OP.OD_ORDER_ID = OO.OD_ORDER_ID
		LEFT OUTER JOIN (
			SELECT	T2.*
			FROM	OD_ORDER_DETL T1
			INNER JOIN OD_ORDER_DETL_DISCOUNT T2 ON T1.OD_ORDER_ID = T2.OD_ORDER_ID AND T1.OD_ORDER_DETL_ID = T2.OD_ORDER_DETL_ID
			WHERE	T2.DISCOUNT_TP = 'GOODS_DISCOUNT_TP.EMPLOYEE'
			AND T1.OD_ORDER_ID = #{odOrderId}
			AND	T1.OD_ORDER_DETL_DEPTH_ID != 3
		) OODD ON OO.OD_ORDER_ID = OODD.OD_ORDER_ID
		LEFT JOIN OD_ORDER_CASH_RECEIPT OOCR ON OOCR.OD_PAYMENT_MASTER_ID = OPM.OD_PAYMENT_MASTER_ID
		INNER JOIN(
			SELECT
				  SUM(CASE WHEN GOODS_TP_CD = 'GOODS_TYPE.GIFT' OR GOODS_TP_CD = 'GOODS_TYPE.GIFT_FOOD_MARKETING' THEN 0 ELSE RECOMMENDED_PRICE * ORDER_CNT END) AS TOTAL_GOODS_PRICE
				 ,SUM(CASE WHEN GOODS_DELIVERY_TYPE = 'GOODS_DELIVERY_TYPE.REGULAR' THEN 1 ELSE 0 END) AS REGULAR_CNT
				 ,OD_ORDER_ID
			FROM
				OD_ORDER_DETL
			WHERE
				OD_ORDER_ID = #{odOrderId} AND EC_DT IS NULL
		) OOD ON OP.OD_ORDER_ID = OOD.OD_ORDER_ID
		INNER JOIN(
			SELECT
				SUM(TBL.ORG_SHIPPING_PRICE) AS ORG_SHIPPING_PRICE
				,SUM(TBL.SHIPPING_DISCOUNT_PRICE) AS SHIPPING_DISCOUNT_PRICE
				,SUM(TBL.SHIPPING_PRICE ) AS SHIPPING_PRICE
				,TBL.OD_ORDER_ID
			FROM(
				SELECT
					OSP.ORG_SHIPPING_PRICE
					,OSP.SHIPPING_DISCOUNT_PRICE
					,OSP.SHIPPING_PRICE
					,OOD.OD_ORDER_ID
				FROM
					OD_SHIPPING_PRICE OSP
					JOIN OD_ORDER_DETL OOD ON OOD.OD_SHIPPING_PRICE_ID = OSP.OD_SHIPPING_PRICE_ID
				WHERE
					OOD.OD_ORDER_ID = #{odOrderId}
				AND
					OOD.EC_DT IS NULL
				GROUP BY OSP.OD_SHIPPING_PRICE_ID
			) TBL
		)OSP ON OP.OD_ORDER_ID = OSP.OD_ORDER_ID
		WHERE OP.OD_ORDER_ID = #{odOrderId}
		  AND OPM.TYPE = 'G'
	</select>

	<!-- 주문상세 주문 상세 결제정보(결제 정보) resultMap -->
	<resultMap id="getOrderDetailPayListResultMap" type="kr.co.pulmuone.v1.order.order.dto.OrderDetailPayListDto">
		<result column="TYPE"				property="type"/>
		<result column="PG_SERVICE"			property="pgService"/>
		<result column="PAY_TYPE"			property="payType"/>
		<result column="PAY_INFO"			property="payInfo"/>
		<result column="ORDER_STATUS"		property="orderStatus"/>
		<result column="CREATE_DT"			property="createDt"/>
		<result column="APPROVAL_DT"		property="approvalDt"/>
		<result column="PAYMENT_PRICE"		property="paymentPrice"/>
	</resultMap>

	<select id="getOrderDetailPayList" parameterType="string" resultMap="getOrderDetailPayListResultMap">
		/*	order.detail.getOrderDetailPayList  */
		SELECT
			  OPM.TYPE
			, FN_COMN_CODE_DIC(OPM.PG_SERVICE) AS PG_SERVICE
			, IFNULL(FN_COMN_CODE_DIC(OPM.PAY_TP), '-') AS PAY_TYPE
			, CASE OPM.PAY_TP WHEN 'PAY_TP.CARD' THEN CONCAT('신용카드 ',IF(OPM.CARD_QUOTA='00',' / 일시불', CONCAT('(', OPM.CARD_QUOTA, '개월 할부)')))
                             WHEN 'PAY_TP.VIRTUAL_BANK' THEN CONCAT(OPM.BANK_NM,' ', OPM.VIRTUAL_ACCOUNT_NUMBER)
                             WHEN 'PAY_TP.BANK' THEN  CONCAT('실시간계좌이체 ',OPM.INFO)
                             WHEN 'PAY_TP.FREE' THEN  '무료결제'
                             WHEN 'PAY_TP.COLLECTION' THEN  '외부몰 결제'
                             ELSE '' END AS PAY_INFO
			, FN_ORDER_STATUS_NM(#{odOrderId}) AS ORDER_STATUS
			, DATE_FORMAT(OPM.CREATE_DT,'%Y-%m-%d %H:%i:%s') AS CREATE_DT
			, DATE_FORMAT(OPM.APPROVAL_DT,'%Y-%m-%d %H:%i:%s') AS APPROVAL_DT
			, OPM.PAYMENT_PRICE
		FROM
		(
			SELECT
				  OPM.OD_PAYMENT_MASTER_ID
				, OPM.TYPE
				, OPM.PG_SERVICE
				, OPM.PAY_TP
				, OPM.CARD_QUOTA
				, OPM.BANK_NM
				, OPM.VIRTUAL_ACCOUNT_NUMBER
				, OPM.INFO
				, OPM.CREATE_DT
				, OPM.APPROVAL_DT
				, OP.PAYMENT_PRICE
			FROM
				OD_PAYMENT_MASTER OPM
				INNER JOIN OD_PAYMENT OP ON OP.OD_PAYMENT_MASTER_ID = OPM.OD_PAYMENT_MASTER_ID AND OP.OD_ORDER_ID = #{odOrderId}
			WHERE
				EXISTS ( SELECT 'X'
	 		   					FROM
	 		   						OD_PAYMENT
								WHERE OD_PAYMENT_MASTER_ID = OPM.OD_PAYMENT_MASTER_ID
								<!-- AND OD_CLAIM_ID = 0 -->
								AND OD_ORDER_ID = #{odOrderId}
				)
		) OPM
		ORDER BY  OPM.OD_PAYMENT_MASTER_ID ASC
	</select>

	<!-- 주문상세 주문 상세 결제정보(환불 정보) resultMap -->
	<resultMap id="getOrderDetailRefundListResultMap" type="kr.co.pulmuone.v1.order.order.dto.OrderDetailRefundListDto">
		<result column="CREATE_DT"				property="createDt"/>
		<result column="APPROVAL_DT"			property="approvalDt"/>
		<result column="GOODS_PRICE"			property="goodsPrice"/>
		<result column="SHIPPING_PRICE"			property="shippingPrice"/>
		<result column="TARGET_TP"				property="targetTp"/>
		<result column="DISCOUNT_COUPON_PRICE"	property="discountCouponPrice"/>
		<result column="REFUND_TARGET_PRICE"	property="refundTargetPrice"/>
		<result column="REFUND_POINT_PRICE"		property="refundPointPrice"/>
		<result column="REFUND_EMPLOYEE_PRICE"	property="refundEmployeePrice"/>
		<result column="REFUND_PRICE"			property="refundPrice"/>
		<result column="CLAIM_STATUS"			property="claimStatus"/>
		<result column="PAY_TYPE"				property="payType"/>
		<result column="REFUND_TYPE"			property="refundType"/>
		<result column="OD_CLAIM_ID"			property="odClaimId"/>
		<result column="PG_SERVICE"				property="pgService"/>
		<result column="TYPE"					property="type"/>
		<result column="TYPE_CD"			    property="typeCd"/>
		<result column="CARD_QUOTA"			    property="cardQuota"/>
		<result column="PAY_INFO"			    property="payInfo"/>
		<result column="TID"			    	property="tid"/>
		<result column="ODID"			    	property="odid"/>
		<result column="PAY_TYPE_CD"			property="payTypeCd"/>
		<result column="PG_SERVICE_CD"			property="pgServiceCd"/>
		<result column="CASH_RECEIPT_NO"		property="cashReceiptNo"/>
		<result column="CASH_RECEIPT_AUTH_NO"	property="cashReceiptAuthNo"/>
		<result column="PAYMENT_PRICE"			property="paymentPrice"/>
		<result column="CLAIM_STATUS_CD"		property="claimStatusCd"/>
		<result column="ADD_PAYMENT_TP"			property="addPaymentTp"/>
		<result column="ADD_PAYMENT_TP_NM"		property="addPaymentTpNm"/>
		<result column="STATUS"					property="status"/>
	</resultMap>

	<select id="getOrderDetailRefundList" parameterType="string" resultMap="getOrderDetailRefundListResultMap">
		/*	order.detail.getOrderDetailRefundList  */
		SELECT X.*
		FROM (
						(
								SELECT
									   DATE_FORMAT(IFNULL(OPM.CREATE_DT, OC.CREATE_DT),'%Y-%m-%d %H:%i:%s') AS CREATE_DT
									 , IFNULL(DATE_FORMAT(OPM.APPROVAL_DT,'%Y-%m-%d %H:%i:%s'), '-') AS APPROVAL_DT
								     , CASE WHEN SUM(OCD.ADD_PAYMENT_SHIPPING_PRICE) > 0 OR OC.TARGET_TP = 'S' THEN OC.GOODS_PRICE
								     		ELSE (OC.GOODS_PRICE + IFNULL(OPM.SHIPPING_PRICE, OC.SHIPPING_PRICE))
								     	END AS TOTAL_REFUND_PRICE																	/*총 환불금액*/
									 , OC.GOODS_PRICE 																				/*총 환불 상품금액*/
									 , CASE WHEN OCD.CLAIM_STATUS_CD = 'IB' THEN OC.SHIPPING_PRICE
											ELSE IFNULL(OPM.SHIPPING_PRICE, SUM(OCD.ADD_PAYMENT_SHIPPING_PRICE) * -1)
										END AS SHIPPING_PRICE 																		/* 배송비 */
								     , IFNULL(OC.CART_COUPON_PRICE, 0) + IFNULL(OC.GOODS_COUPON_PRICE, 0) AS DISCOUNT_COUPON_PRICE 	/* 쿠폰할인차감 */
								     , IFNULL(OCDD2.DIRECT_PRICE, 0) AS DIRECT_PRICE												/* 즉시할인 */
									 , IFNULL(SUM(OCDD.DISCOUNT_PRICE), 0) AS REFUND_EMPLOYEE_PRICE 								/*임직원 환불금*/
									 /*, CASE WHEN SUM(OCD.ADD_PAYMENT_SHIPPING_PRICE) > 0 THEN
									 														   (OC.GOODS_PRICE + IFNULL(OPM.SHIPPING_PRICE, SUM(OCD.ADD_PAYMENT_SHIPPING_PRICE)))
									 														 - (IFNULL(OC.CART_COUPON_PRICE, 0) + IFNULL(OC.GOODS_COUPON_PRICE, 0))
									 														 - (IF(IFNULL(SUM(OCDD.DISCOUNT_PRICE), 0) > 0,  SUM(OCDD.DISCOUNT_PRICE) , IFNULL(OCDD2.DIRECT_PRICE, 0)))
									 		ELSE OC.GOODS_PRICE + IFNULL(OPM.SHIPPING_PRICE, OC.SHIPPING_PRICE)
									 		   - (IFNULL(OC.CART_COUPON_PRICE, 0) + IFNULL(OC.GOODS_COUPON_PRICE, 0))
									 		   - (IF(IFNULL(SUM(OCDD.DISCOUNT_PRICE), 0) > 0,  SUM(OCDD.DISCOUNT_PRICE) , IFNULL(OCDD2.DIRECT_PRICE, 0)))
									 	END AS REFUND_TARGET_PRICE */	   																/*환불금액*/
								     , IFNULL(OPM.PAYMENT_PRICE, OC.REFUND_PRICE) + IFNULL(OPM.POINT_PRICE, OC.REFUND_POINT_PRICE) AS REFUND_TARGET_PRICE
								     , IFNULL(OPM.POINT_PRICE, OC.REFUND_POINT_PRICE) AS REFUND_POINT_PRICE							/* 환불 적립금 */
								     /*, CASE WHEN SUM(OCD.ADD_PAYMENT_SHIPPING_PRICE) > 0 THEN
									 														   (OC.GOODS_PRICE + IFNULL(OPM.SHIPPING_PRICE, SUM(OCD.ADD_PAYMENT_SHIPPING_PRICE)))
									 														 - (IFNULL(OC.CART_COUPON_PRICE, 0) + IFNULL(OC.GOODS_COUPON_PRICE, 0))
									 														 - (IF(IFNULL(SUM(OCDD.DISCOUNT_PRICE), 0) > 0,  SUM(OCDD.DISCOUNT_PRICE) , IFNULL(OCDD2.DIRECT_PRICE, 0)))
									 														 - IFNULL(OPM.POINT_PRICE, OC.REFUND_POINT_PRICE)
									 		ELSE OC.GOODS_PRICE + IFNULL(OPM.SHIPPING_PRICE, OC.SHIPPING_PRICE)
									 		   - (IFNULL(OC.CART_COUPON_PRICE, 0) + IFNULL(OC.GOODS_COUPON_PRICE, 0))
									 		   - (IF(IFNULL(SUM(OCDD.DISCOUNT_PRICE), 0) > 0,  SUM(OCDD.DISCOUNT_PRICE) , IFNULL(OCDD2.DIRECT_PRICE, 0)))
									 		   - IFNULL(OPM.POINT_PRICE, OC.REFUND_POINT_PRICE)
									 	END AS REFUND_PRICE*/ 	   																		/* 결제수단 환불금액 */
								     , IFNULL(OPM.PAYMENT_PRICE, OC.REFUND_PRICE) AS REFUND_PRICE
									 , OC.TARGET_TP 																				/*귀책구분 B:구매자, G:판매자*/
									 , OC.REFUND_TYPE 																				/*결제기관(PG) : 원결제내역, 무통장입금*/
									 , OC.OD_CLAIM_ID
									 , FN_COMN_CODE_DIC(OPM.PG_SERVICE) AS PG_SERVICE
									 , FN_COMN_CODE_DIC(OPM.PAY_TP) AS PAY_TYPE
									 , OPM.TYPE
									 , 'ADD_REFUND_1' AS TYPE_CD
									 , IFNULL((
									SELECT
										OS.STATUS_NM
									FROM
										OD_CLAIM_DETL OCD
									INNER JOIN
										OD_STATUS OS ON OCD.CLAIM_STATUS_CD = OS.STATUS_CD
									WHERE
										OCD.OD_CLAIM_ID = OC.OD_CLAIM_ID
									LIMIT 1
									), '-') AS CLAIM_STATUS /* 클레임상태 */
									 ,IF(OPM.PAY_TP = 'PAY_TP.CARD', OPM.CARD_QUOTA, '') AS CARD_QUOTA 										/*카드 > 카드번호*/
									 ,CASE OPM.PAY_TP WHEN 'PAY_TP.CARD' THEN CONCAT(OPM.INFO, ' (', FN_COMN_CODE_DIC(OPM.PG_SERVICE), '/', IFNULL(OPM.CARD_NUMBER, ''), ')')
													  WHEN 'PAY_TP.VIRTUAL_BANK' THEN CONCAT(OPM.BANK_NM, ' ', OPM.VIRTUAL_ACCOUNT_NUMBER, '(', FN_COMN_CODE_DIC(OPM.PG_SERVICE), ')')
													  WHEN 'PAY_TP.BANK' THEN  CONCAT(IFNULL(OPM.INFO, ''), ' (', FN_COMN_CODE_DIC(OPM.PG_SERVICE), ')')
													  WHEN 'PAY_TP.FREE' THEN  '무료결제'
													  WHEN 'PAY_TP.COLLECTION' THEN  '외부몰결제'
													  ELSE '' END AS PAY_INFO
									 , OPM.TID																								/* 거래 ID */
									 , OPM.PAY_TP AS PAY_TYPE_CD																			/* 결제방법 공통코드 */
									 , OO.ODID																								/* 주문번호 */
									 , OPM.PG_SERVICE AS PG_SERVICE_CD 																		/* PG종류 공통코드 */
									 , IFNULL(OOCR.CASH_RECEIPT_NO,'') AS CASH_RECEIPT_NO 													/* 현금영수증 신청번호*/
								     , IFNULL(OOCR.CASH_RECEIPT_AUTH_NO,'') AS CASH_RECEIPT_AUTH_NO											/* 현금영수증 승인번호 */
									 , IFNULL(OPM.PAYMENT_PRICE, 0 ) AS PAYMENT_PRICE
									 , OCD.CLAIM_STATUS_CD
									 , IFNULL(FN_COMN_CODE_DIC(OCA.BANK_CD), '') AS BANK_NM
									 , IFNULL(FN_DECRYPT(OCA.ACCOUNT_NUMBER), '') AS ACCOUNT_NUMBER
									 , IFNULL(FN_DECRYPT(OCA.ACCOUNT_HOLDER), '') AS ACCOUNT_HOLDER
									 , IFNULL(OC.ADD_PAYMENT_TP, '') AS ADD_PAYMENT_TP
									 , IFNULL(FN_COMN_CODE_DIC(OC.ADD_PAYMENT_TP), '') AS ADD_PAYMENT_TP_NM
									 , OPM.STATUS
								FROM
									OD_CLAIM OC
								INNER JOIN OD_CLAIM_DETL OCD ON OC.OD_CLAIM_ID = OCD.OD_CLAIM_ID
								LEFT OUTER JOIN OD_PAYMENT OP ON OC.OD_CLAIM_ID = OP.OD_CLAIM_ID
								LEFT OUTER JOIN OD_PAYMENT_MASTER OPM ON OP.OD_PAYMENT_MASTER_ID = OPM.OD_PAYMENT_MASTER_ID
								LEFT OUTER JOIN OD_CLAIM_DETL_DISCOUNT OCDD ON OC.OD_CLAIM_ID = OCDD.OD_CLAIM_ID AND OCD.OD_CLAIM_DETL_ID = OCDD.OD_CLAIM_DETL_ID AND OCDD.DISCOUNT_TP = 'GOODS_DISCOUNT_TP.EMPLOYEE'
								LEFT JOIN OD_ORDER_CASH_RECEIPT OOCR ON OOCR.OD_PAYMENT_MASTER_ID = OPM.OD_PAYMENT_MASTER_ID
								LEFT OUTER JOIN OD_ORDER OO ON OO.OD_ORDER_ID = OC.OD_ORDER_ID
								LEFT OUTER JOIN OD_CLAIM_ACCOUNT OCA ON OC.OD_CLAIM_ID = OCA.OD_CLAIM_ID
								LEFT JOIN (
											SELECT SUM(OCDD1.DISCOUNT_PRICE) AS DIRECT_PRICE
												 , OC1.OD_ORDER_ID
				 								 , OC1.OD_CLAIM_ID
											FROM OD_CLAIM_DETL_DISCOUNT OCDD1
											LEFT JOIN OD_CLAIM OC1 ON OCDD1.OD_CLAIM_ID = OC1.OD_CLAIM_ID
											WHERE OC1.OD_ORDER_ID  = #{odOrderId}
											AND OCDD1.DISCOUNT_TP NOT IN ('GOODS_DISCOUNT_TP.GOODS_COUPON', 'GOODS_DISCOUNT_TP.CART_COUPON', 'GOODS_DISCOUNT_TP.EMPLOYEE')
								    		GROUP BY OC1.OD_ORDER_ID, OC1.OD_CLAIM_ID
											) OCDD2 ON OC.OD_ORDER_ID = OCDD2.OD_ORDER_ID AND OC.OD_CLAIM_ID = OCDD2.OD_CLAIM_ID
								WHERE
									OC.OD_ORDER_ID = #{odOrderId}
								 AND OCD.CLAIM_STATUS_CD NOT IN ('CW', 'RW', 'CE', 'RE', 'EC')
								 AND OC.CLAIM_YN = 'Y'
								 AND (OPM.TYPE != 'A' OR OPM.TYPE IS NULL)
								 AND NOT EXISTS (
								 	SELECT OPM1.TID
									  FROM OD_PAYMENT_MASTER OPM1
									  WHERE OPM.OD_PAYMENT_MASTER_ID = OPM1.OD_PAYMENT_MASTER_ID
										AND OPM1.TYPE = 'A'
								 )
								GROUP BY OC.OD_CLAIM_ID
								ORDER BY `TYPE` ASC, OC.OD_CLAIM_ID ASC
						)
						UNION ALL
						(
							SELECT
								   DATE_FORMAT(IFNULL(OPM.CREATE_DT, OC.CREATE_DT),'%Y-%m-%d %H:%i:%s') AS CREATE_DT
								 , IFNULL(DATE_FORMAT(OPM.APPROVAL_DT,'%Y-%m-%d %H:%i:%s'), '-') AS APPROVAL_DT
							     , 0 AS TOTAL_REFUND_PRICE
								 , OC.GOODS_PRICE 																				/*환불요청금액*/
								 , OPM.SHIPPING_PRICE 																			/*배송비*/
								 , 0 AS DISCOUNT_COUPON_PRICE 																	/* 쿠폰할인차감 */
							     , 0 AS DIRECT_PRICE																			/* 즉시할인 */
							     , 0 AS REFUND_EMPLOYEE_PRICE 																	/*임직원 환불금*/
								 , 0 AS REFUND_TARGET_PRICE 																 	/*환불금액*/
								 , 0 AS REFUND_POINT_PRICE																		/*적립금환불*/
								 , IFNULL(OPM.PAYMENT_PRICE, OC.REFUND_PRICE) AS REFUND_PRICE									/*환불금액*/
							     , OC.TARGET_TP 																				/*귀책구분 B:구매자, G:판매자*/
								 , OC.REFUND_TYPE 																				/*결제기관(PG) : 원결제내역, 무통장입금*/
								 , OC.OD_CLAIM_ID
								 , FN_COMN_CODE_DIC(OPM.PG_SERVICE) AS PG_SERVICE
								 , FN_COMN_CODE_DIC(OPM.PAY_TP) AS PAY_TYPE
								 , OPM.TYPE
								 , 'ADD_REFUND_1' AS TYPE_CD
								 , IFNULL((
								SELECT
									OS.STATUS_NM
								FROM
									OD_CLAIM_DETL OCD
										INNER JOIN
									OD_STATUS OS ON OCD.CLAIM_STATUS_CD = OS.STATUS_CD
								WHERE
									OCD.OD_CLAIM_ID = OC.OD_CLAIM_ID
								LIMIT 1
								), '-') AS CLAIM_STATUS
								 ,IF(OPM.PAY_TP = 'PAY_TP.CARD', OPM.CARD_QUOTA, '') AS CARD_QUOTA 										/*카드 > 카드번호*/
								 ,CASE OPM.PAY_TP WHEN 'PAY_TP.CARD' THEN CONCAT(OPM.INFO, ' (', FN_COMN_CODE_DIC(OPM.PG_SERVICE), '/', IFNULL(OPM.CARD_NUMBER, ''), ')')
												  WHEN 'PAY_TP.VIRTUAL_BANK' THEN CONCAT(OPM.BANK_NM, ' ', OPM.VIRTUAL_ACCOUNT_NUMBER, '(', FN_COMN_CODE_DIC(OPM.PG_SERVICE), ')')
												  WHEN 'PAY_TP.BANK' THEN  CONCAT(IFNULL(OPM.INFO, ''), ' (', FN_COMN_CODE_DIC(OPM.PG_SERVICE), ')')
												  WHEN 'PAY_TP.FREE' THEN  '무료결제'
												  WHEN 'PAY_TP.COLLECTION' THEN  '외부몰결제'
												  ELSE '' END AS PAY_INFO
								 , OPM.TID																								/* 거래 ID */
								 , OPM.PAY_TP AS PAY_TYPE_CD																				/* 결제방법 공통코드 */
								 , OO.ODID																								/* 주문번호 */
								 , OPM.PG_SERVICE AS PG_SERVICE_CD 																						/* PG종류 공통코드 */
								 , IFNULL(OOCR.CASH_RECEIPT_NO,'') AS CASH_RECEIPT_NO													/* 현금영수증 신청번호*/
								 , IFNULL(OOCR.CASH_RECEIPT_AUTH_NO,'') AS CASH_RECEIPT_AUTH_NO											/* 현금영수증 승인번호 */
								 , IFNULL(OPM.PAYMENT_PRICE, 0 ) AS PAYMENT_PRICE
								 , OCD.CLAIM_STATUS_CD
								 , IFNULL(FN_COMN_CODE_DIC(OCA.BANK_CD), '') AS BANK_NM
								 , IFNULL(FN_DECRYPT(OCA.ACCOUNT_NUMBER), '') AS ACCOUNT_NUMBER
								 , IFNULL(FN_DECRYPT(OCA.ACCOUNT_HOLDER), '') AS ACCOUNT_HOLDER
								 , IFNULL(OC.ADD_PAYMENT_TP, '') AS ADD_PAYMENT_TP
								 , IFNULL(FN_COMN_CODE_DIC(OC.ADD_PAYMENT_TP), '') AS ADD_PAYMENT_TP_NM
								 , OPM.STATUS
							FROM
								OD_CLAIM OC
							INNER JOIN OD_CLAIM_DETL OCD ON OC.OD_CLAIM_ID = OCD.OD_CLAIM_ID
							LEFT OUTER JOIN OD_PAYMENT OP ON OC.OD_CLAIM_ID = OP.OD_CLAIM_ID
							LEFT OUTER JOIN OD_PAYMENT_MASTER OPM ON OP.OD_PAYMENT_MASTER_ID = OPM.OD_PAYMENT_MASTER_ID
							LEFT JOIN OD_ORDER_CASH_RECEIPT OOCR ON OOCR.OD_PAYMENT_MASTER_ID = OPM.OD_PAYMENT_MASTER_ID
							LEFT OUTER JOIN OD_ORDER OO ON OO.OD_ORDER_ID = OC.OD_ORDER_ID
							LEFT OUTER JOIN OD_CLAIM_ACCOUNT OCA ON OC.OD_CLAIM_ID = OCA.OD_CLAIM_ID
							WHERE
								OC.OD_ORDER_ID = #{odOrderId}
							  AND OCD.CLAIM_STATUS_CD NOT IN ('CW', 'RW', 'CE', 'RE', 'EC')
							  AND OC.CLAIM_YN = 'Y'
							  AND OPM.TYPE = 'A'
							GROUP BY OC.OD_CLAIM_ID
							ORDER BY `TYPE` ASC, OC.OD_CLAIM_ID ASC
						)
						UNION ALL
						(
								SELECT
									   DATE_FORMAT(IFNULL(OPM.CREATE_DT, OC.CREATE_DT),'%Y-%m-%d %H:%i:%s') AS CREATE_DT
									 , IFNULL(DATE_FORMAT(OPM.APPROVAL_DT,'%Y-%m-%d %H:%i:%s'), '-') AS APPROVAL_DT
									 , 0 AS TOTAL_REFUND_PRICE
									 , OC.GOODS_PRICE 																				/*환불요청금액*/
									 , OPM.SHIPPING_PRICE 																			/*배송비*/
									 , 0 AS DISCOUNT_COUPON_PRICE 																	/* 쿠폰할인차감 */
									 , 0 AS DIRECT_PRICE																			/* 즉시할인 */
									 , 0 AS REFUND_EMPLOYEE_PRICE 																	/*임직원 환불금*/
									 , 0 AS REFUND_TARGET_PRICE 																 	/*환불금액*/
									 , 0 AS REFUND_POINT_PRICE																		/*적립금환불*/
									 , IFNULL(OPM.PAYMENT_PRICE, OC.REFUND_PRICE) AS REFUND_PRICE									/*환불금액*/
									 , OC.TARGET_TP 																				/*귀책구분 B:구매자, G:판매자*/
									 , OC.REFUND_TYPE 																				/*결제기관(PG) : 원결제내역, 무통장입금*/
									 , OC.OD_CLAIM_ID
									 , FN_COMN_CODE_DIC(OPM.PG_SERVICE) AS PG_SERVICE
									 , FN_COMN_CODE_DIC(OPM.PAY_TP) AS PAY_TYPE
									 , OPM.TYPE
									 , 'ADD_REFUND_2' AS TYPE_CD
									 , IFNULL((
											SELECT
												OS.STATUS_NM
											FROM
												OD_CLAIM_DETL OCD
													INNER JOIN
												OD_STATUS OS ON OCD.CLAIM_STATUS_CD = OS.STATUS_CD
											WHERE
												OCD.OD_CLAIM_ID = OC.OD_CLAIM_ID
											LIMIT 1
											), '-') AS CLAIM_STATUS
									 ,IF(OPM.PAY_TP = 'PAY_TP.CARD', OPM.CARD_QUOTA, '') AS CARD_QUOTA 										/*카드 > 카드번호*/
									 ,CASE OPM.PAY_TP WHEN 'PAY_TP.CARD' THEN CONCAT(OPM.INFO, ' (', FN_COMN_CODE_DIC(OPM.PG_SERVICE), '/', IFNULL(OPM.CARD_NUMBER, ''), ')')
													  WHEN 'PAY_TP.VIRTUAL_BANK' THEN CONCAT(OPM.BANK_NM, ' ', OPM.VIRTUAL_ACCOUNT_NUMBER, '(', FN_COMN_CODE_DIC(OPM.PG_SERVICE), ')')
													  WHEN 'PAY_TP.BANK' THEN  CONCAT(IFNULL(OPM.INFO, ''), ' (', FN_COMN_CODE_DIC(OPM.PG_SERVICE), ')')
													  WHEN 'PAY_TP.FREE' THEN  '무료결제'
													  WHEN 'PAY_TP.COLLECTION' THEN  '외부몰결제'
													  ELSE '' END AS PAY_INFO
									 , OPM.TID																								/* 거래 ID */
									 , OPM.PAY_TP AS PAY_TYPE_CD																				/* 결제방법 공통코드 */
									 , OO.ODID																								/* 주문번호 */
									 , OPM.PG_SERVICE AS PG_SERVICE_CD 																						/* PG종류 공통코드 */
									 , IFNULL(OOCR.CASH_RECEIPT_NO,'') AS CASH_RECEIPT_NO													/* 현금영수증 신청번호*/
									 , IFNULL(OOCR.CASH_RECEIPT_AUTH_NO,'') AS CASH_RECEIPT_AUTH_NO											/* 현금영수증 승인번호 */
									 , IFNULL(OPM.PAYMENT_PRICE, 0 ) AS PAYMENT_PRICE
									 , OCD.CLAIM_STATUS_CD
									 , IFNULL(FN_COMN_CODE_DIC(OCA.BANK_CD), '') AS BANK_NM
									 , IFNULL(FN_DECRYPT(OCA.ACCOUNT_NUMBER), '') AS ACCOUNT_NUMBER
									 , IFNULL(FN_DECRYPT(OCA.ACCOUNT_HOLDER), '') AS ACCOUNT_HOLDER
									 , IFNULL(OC.ADD_PAYMENT_TP, '') AS ADD_PAYMENT_TP
									 , IFNULL(FN_COMN_CODE_DIC(OC.ADD_PAYMENT_TP), '') AS ADD_PAYMENT_TP_NM
									 , OPM.STATUS
								FROM
									OD_CLAIM OC
								INNER JOIN OD_CLAIM_DETL OCD ON OC.OD_CLAIM_ID = OCD.OD_CLAIM_ID
								LEFT OUTER JOIN OD_PAYMENT OP ON OC.OD_CLAIM_ID = OP.OD_CLAIM_ID
								LEFT OUTER JOIN OD_PAYMENT_MASTER OPM ON OP.OD_PAYMENT_MASTER_ID = OPM.OD_PAYMENT_MASTER_ID
								LEFT JOIN OD_ORDER_CASH_RECEIPT OOCR ON OOCR.OD_PAYMENT_MASTER_ID = OPM.OD_PAYMENT_MASTER_ID
								LEFT OUTER JOIN OD_ORDER OO ON OO.OD_ORDER_ID = OC.OD_ORDER_ID
								LEFT OUTER JOIN OD_CLAIM_ACCOUNT OCA ON OC.OD_CLAIM_ID = OCA.OD_CLAIM_ID
								WHERE
									OC.OD_ORDER_ID = #{odOrderId}
								  AND OPM.TID IN (
									SELECT OPM1.TID
									FROM OD_CLAIM OC1
									LEFT OUTER JOIN OD_PAYMENT OP1 ON OC1.OD_CLAIM_ID = OP1.OD_CLAIM_ID
									LEFT OUTER JOIN OD_PAYMENT_MASTER OPM1 ON OP1.OD_PAYMENT_MASTER_ID = OPM1.OD_PAYMENT_MASTER_ID
									WHERE OPM1.TYPE = 'A'
									  AND OC1.OD_ORDER_ID = #{odOrderId}
								  )
								  AND OPM.TYPE = 'F'
								  AND OC.CLAIM_YN = 'Y'
								ORDER BY OC.OD_CLAIM_ID ASC
						)
			) X
		ORDER BY CREATE_DT /* `TYPE` ASC */
	</select>

	<!-- 주문상세 쿠폰 할인 정보 resultMap -->
	<resultMap id="getOrderDetailDiscountListResultMap" type="kr.co.pulmuone.v1.order.order.dto.OrderDetailDiscountListDto">
		<result column="DISCOUNT_TP"			property="discountTp"/>
		<result column="COUPON_ID"			property="couponId"/>
		<result column="COUPON_NM"			property="couponNm"/>
		<result column="GOODS_NM_CNT"		property="goodsNmCnt"/>
		<result column="DISCOUNT_VALUE"		property="discountValue"/>
		<result column="DISCOUNT_PRICE"		property="discountPrice"/>
		<result column="GOODS_NM"			property="goodsNm"/>
		<result column="OD_CLAIM_ID"		property="odClaimId"/>
	</resultMap>

	<select id="getOrderDetailDiscountList" parameterType="string" resultMap="getOrderDetailDiscountListResultMap">
		/*	order.detail.getOrderDetailDiscountList  */
			SELECT
				x.DISCOUNT_TP
				, x.COUPON_ID
				, x.COUPON_NM
				, IF(count(1) > 1, CONCAT('외 ', count(1)-1, '건'),'') AS GOODS_NM_CNT
				, x.DISCOUNT_VALUE
				, CONCAT(FORMAT(SUM(x.DISCOUNT_PRICE),0),' 원') AS DISCOUNT_PRICE
				, x.GOODS_NM
				, x.OD_CLAIM_ID
			FROM
			(
					SELECT
						  FN_COMN_CODE_DIC(OODD.DISCOUNT_TP) AS DISCOUNT_TP
						, OODD.PM_COUPON_ID AS COUPON_ID
						, OODD.PM_COUPON_NM AS COUPON_NM
						, CASE WHEN PC.COUPON_TP = 'COUPON_TYPE.SALEPRICE_APPPOINT' THEN '판매가지정'
							WHEN PC.COUPON_TP = 'COUPON_TYPE.SHIPPING_PRICE' THEN CONCAT(FORMAT(PC.PERCENTAGE_MAX_DISCOUNT_AMOUNT,0),' 원')
							WHEN PC.COUPON_TP = 'COUPON_TYPE.GOODS' OR PC.COUPON_TP ='COUPON_TYPE.CART'
								THEN CASE WHEN PC.DISCOUNT_TP = 'COUPON_DISCOUNT_STATUS.PERCENTAGE_DISCOUNT' THEN CONCAT(PC.DISCOUNT_VAL,'%/ 최대',FORMAT(PC.PERCENTAGE_MAX_DISCOUNT_AMOUNT,0) ,'원')
										ELSE CONCAT(FORMAT(PC.DISCOUNT_VAL,0),' 원')
									END
							END AS DISCOUNT_VALUE
						, OODD.DISCOUNT_PRICE
						, OOD.GOODS_NM
						, 0 AS OD_CLAIM_ID
						, 1 AS RE_TYPE
					FROM
						OD_ORDER_DETL_DISCOUNT OODD
					INNER JOIN OD_ORDER_DETL OOD ON OODD.OD_ORDER_ID = OOD.OD_ORDER_ID AND OODD.OD_ORDER_DETL_ID = OOD.OD_ORDER_DETL_ID
					LEFT OUTER JOIN PM_COUPON_ISSUE PCI ON OODD.PM_COUPON_ISSUE_ID = PCI.PM_COUPON_ISSUE_ID
					LEFT OUTER JOIN PM_COUPON PC ON PCI.PM_COUPON_ID = PC.PM_COUPON_ID
					WHERE
						OODD.OD_ORDER_ID = #{odOrderId}
					AND OODD.DISCOUNT_TP IN ('GOODS_DISCOUNT_TP.GOODS_COUPON', 'GOODS_DISCOUNT_TP.CART_COUPON')

					UNION ALL

					SELECT
						  FN_COMN_CODE_DIC(OCDD.DISCOUNT_TP) AS DISCOUNT_TP
						, OCDD.PM_COUPON_ID AS COUPON_ID
						, OCDD.PM_COUPON_NM AS COUPON_NM
						, CASE WHEN PC.COUPON_TP = 'COUPON_TYPE.SALEPRICE_APPPOINT' THEN '판매가지정'
							WHEN PC.COUPON_TP = 'COUPON_TYPE.SHIPPING_PRICE' THEN CONCAT(FORMAT(PC.PERCENTAGE_MAX_DISCOUNT_AMOUNT,0),' 원')
							WHEN PC.COUPON_TP = 'COUPON_TYPE.GOODS' OR PC.COUPON_TP ='COUPON_TYPE.CART'
								THEN CASE WHEN PC.DISCOUNT_TP = 'COUPON_DISCOUNT_STATUS.PERCENTAGE_DISCOUNT' THEN CONCAT(PC.DISCOUNT_VAL,'%/ 최대',FORMAT(PC.PERCENTAGE_MAX_DISCOUNT_AMOUNT,0) ,'원')
										ELSE CONCAT(FORMAT(PC.DISCOUNT_VAL,0),' 원')
									END
							END AS DISCOUNT_VALUE
						, 0 AS DISCOUNT_PRICE
						, OOD.GOODS_NM
						, OC.OD_CLAIM_ID
						, 3 AS RE_TYPE
					FROM
						OD_CLAIM_DETL_DISCOUNT OCDD
					INNER JOIN OD_CLAIM OC ON OCDD.OD_ORDER_ID = OC.OD_ORDER_ID AND OCDD.OD_CLAIM_ID = OC.OD_CLAIM_ID AND OC.CLAIM_YN = 'Y'
					INNER JOIN OD_CLAIM_DETL OCD ON OC.OD_CLAIM_ID = OCD.OD_CLAIM_ID AND OCDD.OD_CLAIM_DETL_ID = OCD.OD_CLAIM_DETL_ID AND OCD.CLAIM_STATUS_CD IN ('CC', 'RC', 'IB')
					INNER JOIN OD_ORDER_DETL OOD ON OC.OD_ORDER_ID = OOD.OD_ORDER_ID AND OCD.OD_ORDER_DETL_ID = OOD.OD_ORDER_DETL_ID
					LEFT OUTER JOIN PM_COUPON_ISSUE PCI ON OCDD.PM_COUPON_ISSUE_ID = PCI.PM_COUPON_ISSUE_ID
					LEFT OUTER JOIN PM_COUPON PC ON PCI.PM_COUPON_ID = PC.PM_COUPON_ID
					WHERE
						OCDD.OD_ORDER_ID = #{odOrderId}
					AND OCDD.DISCOUNT_TP IN ('GOODS_DISCOUNT_TP.GOODS_COUPON', 'GOODS_DISCOUNT_TP.CART_COUPON')

					UNION ALL

					SELECT
						'배송비쿠폰' AS DISCOUNT_TP                     /* 할인유형코드명 */
						,PCI.PM_COUPON_ID AS COUPON_ID
						,OSP.PM_COUPON_NM AS COUPON_NM
						,'배송비' AS DISCOUNT_VALUE
						,OSP.SHIPPING_DISCOUNT_PRICE AS DISCOUNT_PRICE      /* 할인금액 */
						,(SELECT WAREHOUSE_NM FROM UR_WAREHOUSE WHERE UR_WAREHOUSE_ID = OOD.UR_WAREHOUSE_ID) AS GOODS_NM
						, 0 AS OD_CLAIM_ID
						, 2 AS RE_TYPE
					FROM
						OD_SHIPPING_PRICE OSP
						JOIN OD_ORDER_DETL OOD ON OOD.OD_SHIPPING_PRICE_ID = OSP.OD_SHIPPING_PRICE_ID
						LEFT OUTER JOIN PM_COUPON_ISSUE PCI ON OSP.PM_COUPON_ISSUE_ID = PCI.PM_COUPON_ISSUE_ID
						LEFT OUTER JOIN PM_COUPON PC ON PCI.PM_COUPON_ID = PC.PM_COUPON_ID
					WHERE
						OOD.OD_ORDER_ID = #{odOrderId}
						AND EXISTS(SELECT
										*
									FROM
										OD_SHIPPING_PRICE OSP
										JOIN OD_ORDER_DETL OOD ON OOD.OD_SHIPPING_PRICE_ID = OSP.OD_SHIPPING_PRICE_ID
									WHERE
										OOD.OD_ORDER_ID = #{odOrderId} AND OSP.PM_COUPON_ISSUE_ID > 0 AND OSP.SHIPPING_DISCOUNT_PRICE  >  0)
						AND OSP.PM_COUPON_ISSUE_ID  > 0
						AND OSP.SHIPPING_DISCOUNT_PRICE > 0
				   GROUP BY OSP.OD_SHIPPING_PRICE_ID, OOD.UR_WAREHOUSE_ID

				   UNION ALL

					SELECT
						'배송비쿠폰' AS DISCOUNT_TP                     /* 할인유형코드명 */
						,PCI.PM_COUPON_ID AS COUPON_ID
						,OSP.PM_COUPON_NM AS COUPON_NM
						,'배송비' AS DISCOUNT_VALUE
						,0 AS DISCOUNT_PRICE       /* 할인금액 */
						,(SELECT WAREHOUSE_NM FROM UR_WAREHOUSE WHERE UR_WAREHOUSE_ID = OOD.UR_WAREHOUSE_ID) AS GOODS_NM
						, OC.OD_CLAIM_ID
						, 4 AS RE_TYPE
					FROM
						OD_SHIPPING_PRICE OSP
						INNER JOIN OD_ORDER_DETL OOD ON OOD.OD_SHIPPING_PRICE_ID = OSP.OD_SHIPPING_PRICE_ID
						INNER JOIN OD_CLAIM OC ON OOD.OD_ORDER_ID = OC.OD_ORDER_ID AND OC.CLAIM_YN = 'Y'
						INNER JOIN OD_CLAIM_DETL OCD ON OC.OD_CLAIM_ID = OCD.OD_CLAIM_ID AND OOD.OD_ORDER_DETL_ID = OCD.OD_ORDER_DETL_ID AND OCD.CLAIM_STATUS_CD IN ('CC', 'RC', 'IB')
						LEFT OUTER JOIN PM_COUPON_ISSUE PCI ON OSP.PM_COUPON_ISSUE_ID = PCI.PM_COUPON_ISSUE_ID
						LEFT OUTER JOIN PM_COUPON PC ON PCI.PM_COUPON_ID = PC.PM_COUPON_ID
					WHERE
						OOD.OD_ORDER_ID = #{odOrderId}
						AND EXISTS(SELECT
										*
									FROM
										OD_SHIPPING_PRICE OSP
										JOIN OD_ORDER_DETL OOD ON OOD.OD_SHIPPING_PRICE_ID = OSP.OD_SHIPPING_PRICE_ID
									WHERE
										OOD.OD_ORDER_ID = #{odOrderId} AND OSP.PM_COUPON_ISSUE_ID > 0 AND OSP.SHIPPING_DISCOUNT_PRICE  >  0)
						AND OSP.PM_COUPON_ISSUE_ID  > 0
						AND OSP.SHIPPING_DISCOUNT_PRICE > 0
						AND OSP.REISSUE_YN = 'Y'
				   GROUP BY OSP.OD_SHIPPING_PRICE_ID, OOD.UR_WAREHOUSE_ID
		) x
		GROUP BY x.DISCOUNT_TP, x.COUPON_ID, x.COUPON_NM, x.DISCOUNT_VALUE, x.OD_CLAIM_ID
		ORDER BY x.RE_TYPE, x.DISCOUNT_TP, x.COUPON_ID
	</select>

	<!-- 주문 상세 클레임 회수 정보 조회 -->
	<select id="getOrderDetailClaimCollectionList" resultType="kr.co.pulmuone.v1.order.order.dto.OrderDetailClaimCollectionListDto">
		/*	order.detail.getOrderDetailClaimCollectionList  */
		<![CDATA[
		SELECT
			uw.WAREHOUSE_NM AS warehouseNm
			, otn.TRACKING_NO AS trackingNo
			, psc.SHIPPING_COMP_NM AS shippingCompNm
			, ocd.ADD_PAYMENT_SHIPPING_PRICE AS addPaymentShippingPrice
			, CASE WHEN oc.TARGET_TP = 'B' THEN '구매자' ELSE '판매자' END AS targetTpNm
			, ood.GOODS_NM AS goodsNm
			, IF(count(1) > 1, CONCAT('외 ', count(1)-1, '건'),'') AS goodsNmCnt
			, FN_DECRYPT(ocsz.RECV_NM) AS recvNm
			, FN_DECRYPT(ocsz.RECV_HP) AS recvHp
			, FN_DECRYPT(ocsz.RECV_ZIP_CD) AS recvZipCd
			, FN_DECRYPT(ocsz.RECV_ADDR1) AS recvAddr1
			, FN_DECRYPT(ocsz.RECV_ADDR2) AS recvAddr2
			, DELIVERY_MSG AS deliveryMsg
			, GROUP_CONCAT(
				DISTINCT CONCAT(
								IFNULL(psc.SHIPPING_COMP_NM, "-"), ",",
								IFNULL(otn.TRACKING_NO, "-"), ",",
								IFNULL(psc.PS_SHIPPING_COMP_ID, 0), ",",
								IFNULL(psc.TRACKING_URL,"-"), ",",
								IF(psc.HTTP_REQUEST_TP = 'P', 'POST', 'GET'), ",",
								IFNULL(psc.INVOICE_PARAM,"-"), ",",
								CASE WHEN IFNULL(PC1.PS_NM, '') != '' THEN
										CASE WHEN psc.LOGISTICS_CD = 'LOTTE' THEN
											CASE WHEN ood.UR_WAREHOUSE_GRP_CD = 'WAREHOUSE_GROUP.OWN' AND psc.LOGISTICS_CD = 'LOTTE' THEN 'Y'
														ELSE 'N'
													END
											ELSE 'N' END /* 반품 송장은 API지원이 안됨 */
								ELSE 'N' END, ",",
								IFNULL(psc.LOGISTICS_CD,"")
								) SEPARATOR '∀'
						)  AS SHIPPING_INFO
		FROM OD_ORDER oo
		INNER JOIN OD_ORDER_DETL ood ON oo.OD_ORDER_ID = ood.OD_ORDER_ID
		INNER JOIN OD_CLAIM oc ON oo.OD_ORDER_ID = oc.OD_ORDER_ID AND oc.CLAIM_YN = 'Y' AND oc.RETURNS_YN = 'Y' AND oc.CLAIM_STATUS_TP = 'CLAIM_STATUS_TP.RETURN'
		INNER JOIN OD_CLAIM_DETL ocd ON oc.OD_CLAIM_ID = ocd.OD_CLAIM_ID AND ood.OD_ORDER_DETL_ID = ocd.OD_ORDER_DETL_ID
		INNER JOIN OD_CLAIM_SHIPPING_ZONE ocsz ON oc.OD_CLAIM_ID = ocsz.OD_CLAIM_ID AND ocd.OD_CLAIM_DETL_ID = ocsz.OD_CLAIM_DETL_ID
		INNER JOIN UR_WAREHOUSE uw ON ood.UR_WAREHOUSE_ID = uw.UR_WAREHOUSE_ID
		INNER JOIN OD_RETURN_TRACKING_NUMBER otn ON ocd.OD_CLAIM_DETL_ID = otn.OD_CLAIM_DETL_ID
		/*INNER JOIN OD_TRACKING_NUMBER otn ON ood.OD_ORDER_DETL_ID = otn.OD_ORDER_DETL_ID*/
		INNER JOIN PS_SHIPPING_COMP psc ON otn.PS_SHIPPING_COMP_ID = psc.PS_SHIPPING_COMP_ID
		LEFT OUTER JOIN PS_CONFIG PC1 ON otn.PS_SHIPPING_COMP_ID = PC1.PS_KEY AND PS_GRP_TP = 'DELIVERY_TRACKING_SEARCH'
		WHERE oo.OD_ORDER_ID = #{odOrderId}
		GROUP BY uw.WAREHOUSE_NM, otn.TRACKING_NO, psc.SHIPPING_COMP_NM
		]]>
	</select>

	<resultMap id="getOrderDetailConsultListResultMap" type="kr.co.pulmuone.v1.order.order.dto.OrderDetailConsultListDto">
		<result column="OD_CONSULT_ID"				property="odConsultId"/>
		<result column="MODIFY_NM"					property="modifyNm"/>
		<result column="MODIFY_ID"					property="modifyId"/>
		<result column="MODIFY_DT"					property="modifyDt"/>
		<result column="OD_CONSULT_TYPE"			property="odConsultType"/>
		<result column="CONSULT_MSG"				property="odConsultMsg"/>
		<result column="LOGIN_ID"					property="loginId"/>
	</resultMap>

	<select id="getOrderDetailConsultList" resultMap="getOrderDetailConsultListResultMap">
		/*	order.detail.getOrderDetailConsultList  */
		SELECT
		    OC.OD_CONSULT_ID
            , CASE WHEN (#{batchCreateUserId} = OC.CREATE_ID) THEN '시스템' ELSE FN_DECRYPT(UU.USER_NM) END AS MODIFY_NM
            , CASE WHEN (#{batchCreateUserId} = OC.CREATE_ID) THEN 'system' ELSE UU.LOGIN_ID END AS MODIFY_ID
            , DATE_FORMAT(OC.MODIFY_DT,'%Y-%m-%d %H:%i:%s') AS MODIFY_DT
            , OD_CONSULT_TYPE
            , CONSULT_MSG
        FROM
            OD_CONSULT OC
            LEFT OUTER JOIN UR_USER UU ON OC.MODIFY_ID = UU.UR_USER_ID
        WHERE
            OC.DEL_YN = 'N'
            AND OC.OD_ORDER_ID = #{odOrderId}
		ORDER BY OD_CONSULT_ID DESC
	</select>

	<insert id="addOrderDetailConsult">
		/* order.detail.addOrderDetailConsult */
		INSERT INTO OD_CONSULT
		(
			  OD_ORDER_ID
			, OD_CONSULT_TYPE
			, CONSULT_MSG
			, CREATE_ID
			, CREATE_DT
			, MODIFY_ID
			, MODIFY_DT
		)
		VALUES
		(
			  #{odOrderId}
			, #{odConsultType}
			, #{odConsultMsg}
			, #{createId}
			, NOW()
			, #{createId}
			, NOW()
		)
	</insert>

	<update id="putOrderDetailConsult">
		/* order.detail.putOrderDetailConsult */
		UPDATE OD_CONSULT
		SET
		MODIFY_ID = #{createId}
		, MODIFY_DT = NOW()
		<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(odConsultType)">
			, OD_CONSULT_TYPE = #{odConsultType}
		</if>
		<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(odConsultMsg)">
			, CONSULT_MSG = #{odConsultMsg}
		</if>
		WHERE
		OD_CONSULT_ID = #{odConsultId}
	</update>

	<update id="delOrderDetailConsult">
		/* order.detail.delOrderDetailConsult */
		DELETE FROM OD_CONSULT
		 WHERE OD_CONSULT_ID = #{odConsultId}
	</update>

	<select id="getOrderDetailHistoryList" resultType="kr.co.pulmuone.v1.order.order.dto.OrderDetailHistoryListDto">
		/*	order.detail.getOrderDetailHistoryList  */
		SELECT X.*
		FROM
		(
			(
				SELECT OCDH.OD_CLAIM_DETL_HIST_ID  AS HISTORY_ID
					, OCDH.OD_ORDER_DETL_SEQ AS ORDER_DETAIL_ID
					, DATE_FORMAT(OCDH.CREATE_DT,'%Y-%m-%d %H:%i:%s') AS REG_DATE
					, FN_STATUS_NM(OCDH.STATUS_CD) AS PROC_STATUS
					,CASE
						 WHEN (#{batchId} = OCDH.CREATE_ID)
							 THEN
							 '배치'
						 WHEN (#{guestId} = OCDH.CREATE_ID)
							 THEN
							 '비회원'
						 WHEN (#{virtualId} = OCDH.CREATE_ID)
							 THEN
							 '가상계좌입금'
						 ELSE
							 CASE
								 WHEN
									 CHAR_LENGTH(FN_DECRYPT(UU.USER_NM)) > 2
									 THEN
									 CONCAT(
											 SUBSTRING(FN_DECRYPT(UU.USER_NM), 1, 1)
										 ,LPAD('*', CHAR_LENGTH(FN_DECRYPT(UU.USER_NM)) - 2, '*')
										 ,SUBSTRING(FN_DECRYPT(UU.USER_NM), CHAR_LENGTH(FN_DECRYPT(UU.USER_NM)), CHAR_LENGTH(FN_DECRYPT(UU.USER_NM)))
										 , ' / '
										 , CONCAT(SUBSTRING(UU.LOGIN_ID, 1, 3),RPAD('*', CHAR_LENGTH(UU.LOGIN_ID) - 3, '*'))
										 )
								 ELSE
									 CONCAT(
											 SUBSTRING(FN_DECRYPT(UU.USER_NM), 1, 1)
										 ,LPAD('*', CHAR_LENGTH(FN_DECRYPT(UU.USER_NM)) - 1, '*')
										 , ' / '
										 , CONCAT(SUBSTRING(UU.LOGIN_ID, 1, 3),RPAD('*', CHAR_LENGTH(UU.LOGIN_ID) - 3, '*'))
										 )
								 END
					END AS USER_NM /*관리자명 : 첫글자, 끝글자 외 마스킹, 관리자 ID : 앞 3자리 외 마스킹*/
				    , OCDH.HIST_MSG
				FROM
					OD_CLAIM OC
				INNER JOIN
					OD_CLAIM_DETL OCD ON OC.OD_CLAIM_ID = OCD.OD_CLAIM_ID
				INNER JOIN
					OD_CLAIM_DETL_HIST OCDH ON OCD.OD_CLAIM_ID = OCDH.OD_CLAIM_ID AND OCD.OD_CLAIM_DETL_ID = OCDH.OD_CLAIM_DETL_ID
				LEFT OUTER JOIN
					UR_USER UU ON OCDH.CREATE_ID = UU.UR_USER_ID
				WHERE
					OC.OD_ORDER_ID = #{odOrderId}
			)
			UNION ALL
			(
				SELECT OODH.OD_ORDER_DETL_HIST_ID AS HISTORY_ID
				, OODH.OD_ORDER_DETL_SEQ AS ORDER_DETAIL_ID
				, DATE_FORMAT(OODH.CREATE_DT,'%Y-%m-%d %H:%i:%s') AS REG_DATE
				, FN_STATUS_NM(OODH.STATUS_CD) AS PROC_STATUS
				,CASE
					 WHEN (#{batchId} = OODH.CREATE_ID)
						 THEN
						 '배치'
					 WHEN (#{guestId} = OODH.CREATE_ID)
						 THEN
						 '비회원'
					 WHEN (#{virtualId} = OODH.CREATE_ID)
						 THEN
						 '가상계좌입금'
					 ELSE
						 CASE
							 WHEN
								 CHAR_LENGTH(FN_DECRYPT(UU.USER_NM)) > 2
								 THEN
								 CONCAT(
										 SUBSTRING(FN_DECRYPT(UU.USER_NM), 1, 1)
									 ,LPAD('*', CHAR_LENGTH(FN_DECRYPT(UU.USER_NM)) - 2, '*')
									 ,SUBSTRING(FN_DECRYPT(UU.USER_NM), CHAR_LENGTH(FN_DECRYPT(UU.USER_NM)), CHAR_LENGTH(FN_DECRYPT(UU.USER_NM)))
									 , ' / '
									 , CONCAT(SUBSTRING(UU.LOGIN_ID, 1, 3),RPAD('*', CHAR_LENGTH(UU.LOGIN_ID) - 3, '*'))
									 )
							 ELSE
								 CONCAT(
										 SUBSTRING(FN_DECRYPT(UU.USER_NM), 1, 1)
									 ,LPAD('*', CHAR_LENGTH(FN_DECRYPT(UU.USER_NM)) - 1, '*')
									 , ' / '
									 , CONCAT(SUBSTRING(UU.LOGIN_ID, 1, 3),RPAD('*', CHAR_LENGTH(UU.LOGIN_ID) - 3, '*'))
									 )
							 END
					END AS USER_NM /*관리자명 : 첫글자, 끝글자 외 마스킹, 관리자 ID : 앞 3자리 외 마스킹*/
				, OODH.HIST_MSG
				FROM
					OD_ORDER_DETL OOD
				INNER JOIN
					OD_ORDER_DETL_HIST OODH ON OODH.OD_ORDER_ID = OOD.OD_ORDER_ID AND OODH.OD_ORDER_DETL_ID = OOD.OD_ORDER_DETL_ID
				LEFT OUTER JOIN
					UR_USER UU ON OODH.CREATE_ID = UU.UR_USER_ID
				WHERE
					OOD.OD_ORDER_ID = #{odOrderId}
			)
			UNION ALL
			(
				SELECT OCIDH.OD_CS_DETL_HIST_ID AS HISTORY_ID
					 , OOD.OD_ORDER_DETL_SEQ AS ORDER_DETAIL_ID
					 , DATE_FORMAT(OCIDH.CREATE_DT,'%Y-%m-%d %H:%i:%s') AS REG_DATE
					 , CONCAT('CS환불 / ', FN_COMN_CODE_DIC(OCI.APPR_STAT)) AS PROC_STATUS
					 , CASE
						  WHEN (#{batchId} = OCIDH.CREATE_ID)
							  THEN
							  '배치'
						  WHEN (#{guestId} = OCIDH.CREATE_ID)
							  THEN
							  '비회원'
						  WHEN (#{virtualId} = OCIDH.CREATE_ID)
							  THEN
							  '가상계좌입금'
						  ELSE
							  CASE
								  WHEN
									  CHAR_LENGTH(FN_DECRYPT(UU.USER_NM)) > 2
									  THEN
									  CONCAT(
											  SUBSTRING(FN_DECRYPT(UU.USER_NM), 1, 1)
										  ,LPAD('*', CHAR_LENGTH(FN_DECRYPT(UU.USER_NM)) - 2, '*')
										  ,SUBSTRING(FN_DECRYPT(UU.USER_NM), CHAR_LENGTH(FN_DECRYPT(UU.USER_NM)), CHAR_LENGTH(FN_DECRYPT(UU.USER_NM)))
										  , ' / '
										  , CONCAT(SUBSTRING(UU.LOGIN_ID, 1, 3),RPAD('*', CHAR_LENGTH(UU.LOGIN_ID) - 3, '*'))
										  )
								  ELSE
									  CONCAT(
											  SUBSTRING(FN_DECRYPT(UU.USER_NM), 1, 1)
										  ,LPAD('*', CHAR_LENGTH(FN_DECRYPT(UU.USER_NM)) - 1, '*')
										  , ' / '
										  , CONCAT(SUBSTRING(UU.LOGIN_ID, 1, 3),RPAD('*', CHAR_LENGTH(UU.LOGIN_ID) - 3, '*'))
										  )
								  END
						END AS USER_NM /*관리자명 : 첫글자, 끝글자 외 마스킹, 관리자 ID : 앞 3자리 외 마스킹*/
				 	, OCIDH.HIST_MSG
				FROM
					OD_CS_INFO OCI
						INNER JOIN
					OD_CS_INFO_DETL OCID ON OCI.OD_CS_ID = OCID.OD_CS_ID
						INNER JOIN
					OD_CS_INFO_DETL_HIST OCIDH ON OCID.OD_CS_DETL_ID = OCIDH.OD_CS_DETL_ID
						INNER JOIN
					OD_ORDER_DETL OOD ON OCIDH.OD_ORDER_DETL_ID = OOD.OD_ORDER_DETL_ID
						LEFT OUTER JOIN
					UR_USER UU ON OCI.APPR_REQ_USER_ID = UU.UR_USER_ID
				WHERE
					OCI.OD_ORDER_ID = #{odOrderId}
			)
		) X
		ORDER BY REG_DATE DESC
</select>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 주문상세 동일 출고처 주문상세ID 리스트 조회
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.01.12		이규한          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<select id="getUrWarehouseOdOrderDetlIdList" resultType="long">
		/* orderDetail.getUrWarehouseOdOrderDetlIdList */
		SELECT OOD.OD_ORDER_DETL_ID		/* 주문상세 PK */
		  FROM OD_ORDER_DETL OOD		/* 주문 상세 */
		 WHERE OOD.OD_ORDER_ID = (SELECT OD_ORDER_ID			/* 주문 PK */
		                            FROM OD_ORDER_DETL
		                           WHERE OD_ORDER_DETL_ID = #{odOrderDetlId})
		   AND OOD.UR_WAREHOUSE_ID = (SELECT UR_WAREHOUSE_ID	/* 출고처 PK */
		                                FROM OD_ORDER_DETL
		                               WHERE OD_ORDER_DETL_ID = #{odOrderDetlId})
		   AND OOD.OD_SHIPPING_PRICE_ID = (SELECT OD_SHIPPING_PRICE_ID	/* 배송비 정책 PK */
		                                              FROM OD_ORDER_DETL
		                                             WHERE OD_ORDER_DETL_ID = #{odOrderDetlId})
		   AND OOD.ORDER_STATUS_CD = 'IC'
	</select>

    <!--───────────────────────────────────────────────────────────────────────
     * description         : 주문상세 > 주문자정보 > 주문자 정보 조회 (OD_ORDER)
     * @
     * @ 수정일            수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2021.01.26     최윤지          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <resultMap id="getOrderBuyerResultMap" type="kr.co.pulmuone.v1.order.order.dto.OrderBuyerDto">
		<result column="OD_ORDER_ID"            property="odOrderId"/>
		<result column="ODID"            		property="odid"/>
        <result column="SELLERS_GROUP_CD"       property="sellersGroupCd"/>
        <result column="SELLERS_GROUP_NM"       property="sellersGroupNm"/>
        <result column="BUYER_NM"            	property="buyerNm"/>
        <result column="LOGIN_ID"            	property="loginId"/>
        <result column="UR_USER_ID"            	property="urUserId"/>
        <result column="UR_GROUP_NM"            property="urGroupNm"/>
        <result column="UR_GROUP_ID"            property="urGroupId"/>
        <result column="UR_EMPLOYEE_YN"         property="urEmployeeYn"/>
		<result column="BUYER_HP"            	property="buyerHp"/>
        <result column="BUYER_TEL"            	property="buyerTel"/>
        <result column="BUYER_MAIL"            	property="buyerMail"/>
        <result column="CREATE_DT"            	property="createDt"/>
        <result column="COLLECTION_MALL_ID"     property="collectionMallId"/>
        <result column="OUTMALL_ID"            	property="outmallId"/>
		<result column="SELLERS_URL"            property="sellersUrl"/>
		<result column="SELLERS_ADMIN_URL"		property="sellersAdminUrl"/>
		<result column="SELLERS_NM"				property="sellersNm"/>
		<result column="GUEST_CI"				property="guestCi"/>
		<result column="APPROVAL_DT" 			property="approvalDt" />
		<result column="AGENT_TYPE"             property="agentType"/>
		<result column="ORDER_COPY_YN"        	property="orderCopyYn"/>
		<result column="ORDER_COPY_SAL_IF_YN"   property="orderCopySalIfYn"/>
		<result column="ORDER_COPY_ODID"        property="orderCopyOdid"/>
		<result column="ORDER_CREATE_YN"        property="orderCreateYn"/>
		<result column="OUTMALL_TYPE"        	property="outmallType"/>
		<result column="OD_REGULAR_REQ_ID"      property="odRegularReqId"/>
		<result column="REQ_ID"        			property="reqId"/>
		<result column="GIFT_YN"        		property="giftYn"/>
	</resultMap>
    <select id="getOrderBuyer" resultMap="getOrderBuyerResultMap">
    /* orderDetail.getOrderBuyer */
		SELECT
		      OO.OD_ORDER_ID
			, OO.ODID
		    , OO.SELLERS_GROUP_CD
			, FN_COMN_CODE_DIC(OO.SELLERS_GROUP_CD) AS SELLERS_GROUP_NM
			, FN_DECRYPT(OO.BUYER_NM) AS BUYER_NM
			, IFNULL(UU.LOGIN_ID, '') AS LOGIN_ID
			, IFNULL(UU.UR_USER_ID, 0) AS UR_USER_ID
			, OO.UR_GROUP_NM
		    , OO.UR_GROUP_ID
			, (CASE WHEN IFNULL(OO.UR_EMPLOYEE_CD, '') != ''  THEN 'Y' ELSE 'N' END) AS UR_EMPLOYEE_YN
			, FN_DECRYPT(OO.BUYER_HP) AS BUYER_HP
			, FN_DECRYPT(OO.BUYER_TEL) AS BUYER_TEL
			, FN_DECRYPT(OO.BUYER_MAIL) AS BUYER_MAIL
			, DATE_FORMAT(OO.CREATE_DT,'%Y-%m-%d %H:%i:%s') AS CREATE_DT
			, OO.COLLECTION_MALL_ID
			, OO.OUTMALL_ID
			, IFNULL(SELLERS_URL, '') AS SELLERS_URL
			, IFNULL(SELLERS_ADMIN_URL, '') AS SELLERS_ADMIN_URL
			, IFNULL(SELLERS_NM, '') AS SELLERS_NM
			, OO.GUEST_CI
			, IFNULL(DATE_FORMAT(OPM.APPROVAL_DT ,'%Y-%m-%d %H:%i:%s'), '') AS APPROVAL_DT
			, FN_COMN_CODE_DIC(OO.AGENT_TYPE_CD)                           AS AGENT_TYPE
			, IFNULL(OO.ORDER_COPY_YN, 'N')									AS ORDER_COPY_YN
		    , IFNULL(OO.ORDER_COPY_SAL_IF_YN, 'N')								AS ORDER_COPY_SAL_IF_YN
			, IFNULL(OO.ORDER_COPY_ODID, '')									AS ORDER_COPY_ODID
			, IFNULL(OO.ORDER_CREATE_YN, 'N')									AS ORDER_CREATE_YN
			, IFNULL((SELECT OUTMALL_TYPE FROM OD_ORDER_DETL WHERE OD_ORDER_ID = OO.OD_ORDER_ID LIMIT 1), '') AS OUTMALL_TYPE
			, IFNULL(ORR.OD_REGULAR_REQ_ID, 0) AS OD_REGULAR_REQ_ID
			, IFNULL(ORR.REQ_ID, '') AS REQ_ID
			, OO.GIFT_YN
		FROM
			OD_ORDER OO
			LEFT OUTER JOIN UR_USER UU ON OO.UR_USER_ID = UU.UR_USER_ID
			LEFT OUTER JOIN OM_SELLERS OS ON OO.OM_SELLERS_ID = OS.OM_SELLERS_ID
			LEFT OUTER JOIN OD_PAYMENT OP ON OO.OD_ORDER_ID = OP.OD_ORDER_ID
			LEFT OUTER JOIN OD_PAYMENT_MASTER OPM ON OP.OD_PAYMENT_MASTER_ID = OPM.OD_PAYMENT_MASTER_ID
			LEFT OUTER JOIN OD_REGULAR_RESULT ORRT ON OO.OD_ORDER_ID = ORRT.OD_ORDER_ID
			LEFT OUTER JOIN OD_REGULAR_REQ ORR ON ORRT.OD_REGULAR_REQ_ID = ORR.OD_REGULAR_REQ_ID
		WHERE
			OO.ODID = #{odid}
		LIMIT 1
    </select>

    <!--───────────────────────────────────────────────────────────────────────
     * description         : 주문상세 > 배송정보 > 배송정보 조회 (OD_SHIPPING_ZONE)
     * @
     * @ 수정일            수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2021.01.26     최윤지          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <resultMap id="getOrderDetailShippingZoneListMap" type="kr.co.pulmuone.v1.order.order.dto.vo.OrderDetlShippingZoneVo">
		<result column="OD_SHIPPING_ZONE_ID"            property="odShippingZoneId"/>
		<result column="OD_ORDER_DETL_ID"            	property="odOrderDetlId"/>
		<result column="OD_ORDER_ID"            		property="odOrderId"/>
		<result column="IL_GOODS_ID"            		property="ilGoodsId"/>
		<result column="ORDER_STATUS_CODE"            	property="orderStatusCode"/>
		<result column="DELIVERY_TYPE_CODE"            	property="deliveryTypeCode"/>
		<result column="RECV_NM"            			property="recvNm"/>
		<result column="ORG_RECV_NM"            		property="orgRecvNm"/>
		<result column="RECV_HP"            			property="recvHp"/>
		<result column="ORG_RECV_HP"            		property="orgRecvHp"/>
		<result column="PHONE_PREFIX"            		property="phonePrefix"/>
		<result column="RECV_HP1"            			property="recvHp1"/>
        <result column="RECV_HP2"       				property="recvHp2"/>
        <result column="RECV_ZIP_CD"            		property="recvZipCd"/>
        <result column="RECV_ADDR1"            			property="recvAddr1"/>
        <result column="ORG_RECV_ADDR1"            		property="orgRecvAddr1"/>
        <result column="RECV_ADDR2"            			property="recvAddr2"/>
        <result column="ORG_RECV_ADDR2"            		property="orgRecvAddr2"/>
        <result column="RECV_BLD_NO"            		property="recvBldNo"/>
        <result column="DELIVERY_MSG_CD"         		property="deliveryMsgCd"/>
		<result column="DELIVERY_MSG"            		property="deliveryMsg"/>
        <result column="DOOR_MSG_CD"            		property="doorMsgCd"/>
        <result column="DOOR_MSG_CD_NAME"            	property="doorMsgCdName"/>
        <result column="DOOR_MSG"            			property="doorMsg"/>
        <result column="DOOR_ETC"     					property="doorEtc"/>
        <result column="DELIVERY_DT"            		property="deliveryDt"/>
		<result column="CREATE_DT"            			property="createDt"/>
		<result column="UR_USER_ID"						property="urUserId"/>
		<result column="GUEST_CI"						property="guestCi"/>
		<result column="GOODS_DAILY_TYPE"				property="goodsDailyType"/>
		<result column="DELIVERY_AREA_NM" 				property="deliveryAreaNm" />
		<result column="STORE_DELIVERY_INTERVAL_TP" 	property="storeDeliveryIntervalTp" />
		<result column="HIST_CNT" 						property="histCnt" />
		<result column="GOODS_DAILY_TP_GRRENJUICE_YN" 	property="goodsDailyTpGreenjuiceYn" />
		<result column="PROMOTION_TP" 					property="promotionTp" />
		<result column="OD_ORDER_DETL_PARENT_ID" 		property="odOrderDetlParentId" />
		<result column="WAREHOUSE_NM" 					property="warehouseNm" />
		<result column="UR_WAREHOUSE_ID" 				property="urWarehouseId" />
		<result column="OD_SHIPPING_PRICE_ID" 			property="odShippingPriceId" />
		<result column="SHIPPING_PRICE" 				property="shippingPrice" />
		<result column="SHIPPING_DISCOUNT_PRICE" 		property="shippingDiscountPrice" />
		<result column="SHIPPING_INFO" 					property="shippingInfo" />
		<result column="GOODS_NAME_INFO" 				property="goodsNmInfo" />
		<result column="OD_SHIPPING_PRICE_ID" 			property="odShippingPriceId" />
		<result column="IL_SHIPPING_TMPL_ID" 			property="ilShippingTmplId" />
		<result column="ORDER_STATUS_INFO" 				property="orderStatusInfo" />
		<result column="DELIVERY_AREA_TEL" 				property="deliveryAreaTel" />
		<result column="ORDER_STATUS_DELI_TP" 			property="orderStatusDeliTp" />
		<result column="UR_STORE_NM" 					property="urStoreNm" />
		<result column="DAILY_BULK_YN" 					property="dailyBulkYn" />
	</resultMap>
    <select id="getOrderDetailShippingZoneList" resultMap="getOrderDetailShippingZoneListMap">
    /* orderDetail.getOrderDetailShippingZoneList */
    (
     /*합배송 제외*/
     SELECT
   		   OSZ.OD_SHIPPING_ZONE_ID
   		 , OOD.OD_ORDER_DETL_ID
   		 , OOD.OD_ORDER_ID
         , OOD.IL_GOODS_ID
		 , OOD.ORDER_STATUS_CD AS ORDER_STATUS_CODE
		 , FN_COMN_CODE_DIC(OOD.ORDER_STATUS_DELI_TP) AS ORDER_STATUS_DELI_TP
		 , OSZ.DELIVERY_TYPE AS DELIVERY_TYPE_CODE
         , FN_DECRYPT(OSZ.RECV_NM) RECV_NM
         , FN_DECRYPT(OSZ.RECV_NM) ORG_RECV_NM
         , FN_DECRYPT(OSZ.RECV_HP) RECV_HP
         , FN_DECRYPT(OSZ.RECV_HP) ORG_RECV_HP
         , LEFT(FN_DECRYPT(OSZ.RECV_HP), 3) PHONE_PREFIX
         , SUBSTRING(FN_DECRYPT(OSZ.RECV_HP), 4, 4) RECV_HP1
         , SUBSTRING(FN_DECRYPT(OSZ.RECV_HP), 8, 4) RECV_HP2
         , FN_DECRYPT(OSZ.RECV_ZIP_CD) RECV_ZIP_CD
         , FN_DECRYPT(OSZ.RECV_ADDR1) RECV_ADDR1
         , FN_DECRYPT(OSZ.RECV_ADDR1) ORG_RECV_ADDR1
         , FN_DECRYPT(OSZ.RECV_ADDR2) RECV_ADDR2
         , FN_DECRYPT(OSZ.RECV_ADDR2) ORG_RECV_ADDR2
         , OSZ.RECV_BLD_NO
         , OSZ.DELIVERY_MSG_CD
         , OSZ.DELIVERY_MSG
         , OSZ.DOOR_MSG_CD
         , FN_COMN_CODE_DIC(OSZ.DOOR_MSG_CD) AS DOOR_MSG_CD_NAME
         , FN_DECRYPT(OSZ.DOOR_MSG) AS DOOR_MSG
         , FN_DECRYPT(OSZ.DOOR_ETC) AS DOOR_ETC
         , DATE_FORMAT(OOD.DELIVERY_DT , '%Y-%m-%d') DELIVERY_DT
         , DATE_FORMAT(OSZ.CREATE_DT , '%Y-%m-%d') CREATE_DT
         , OO.UR_USER_ID
         , OO.GUEST_CI
         , OOD.GOODS_DAILY_TP AS GOODS_DAILY_TYPE
         , USDA.DELIVERY_AREA_NM
         , USDA.STORE_DELIVERY_INTERVAL_TP
         , (SELECT COUNT(1) FROM OD_SHIPPING_ZONE_HIST WHERE OD_ORDER_ID = OSZ.OD_ORDER_ID AND OD_SHIPPING_ZONE_ID = OSZ.OD_SHIPPING_ZONE_ID) AS HIST_CNT
		 , IF(OOD.GOODS_DAILY_TP = 'GOODS_DAILY_TP.GREENJUICE', 'Y', 'N') AS GOODS_DAILY_TP_GRRENJUICE_YN
		 , OOD.PROMOTION_TP
		 , UW.WAREHOUSE_NM
		 , OOD.UR_WAREHOUSE_ID
		 , OSP.SHIPPING_PRICE
		 , OSP.SHIPPING_DISCOUNT_PRICE
		 , IFNULL(A.SHIPPING_INFO, '-') AS SHIPPING_INFO
		 , IFNULL(OOD.GOODS_NM, '-') AS GOODS_NAME_INFO
		 , OOD.OD_SHIPPING_PRICE_ID
		 , OSP.IL_SHIPPING_TMPL_ID
         , OOD.ORDER_STATUS_CD AS ORDER_STATUS_INFO
		 , UR.TEL AS DELIVERY_AREA_TEL
     	 , CASE WHEN OOD.ORDER_STATUS_DELI_TP = 'ORDER_STATUS_DELI_TP.DAILY' ||
			    		OOD.ORDER_STATUS_DELI_TP = 'ORDER_STATUS_DELI_TP.SHOP_DELIVERY' ||
			    		OOD.ORDER_STATUS_DELI_TP = 'ORDER_STATUS_DELI_TP.SHOP_PICKUP' THEN IFNULL(UR.NM, US1.UR_STORE_NM)
			  ELSE '' END AS UR_STORE_NM
		 ,(SELECT DAILY_BULK_YN FROM OD_ORDER_DETL_DAILY WHERE OD_ORDER_DETL_ID = OOD.OD_ORDER_DETL_ID) AS DAILY_BULK_YN
 	 FROM OD_ORDER_DETL OOD
   	 JOIN OD_SHIPPING_ZONE OSZ ON OSZ.OD_SHIPPING_ZONE_ID = OOD.OD_SHIPPING_ZONE_ID
   	 JOIN OD_ORDER OO ON OSZ.OD_ORDER_ID = OO.OD_ORDER_ID
   	 LEFT OUTER JOIN OD_ORDER_DETL_DAILY OODD ON OSZ.OD_ORDER_ID = OODD.OD_ORDER_ID
     LEFT OUTER JOIN UR_STORE_DELIVERY_AREA USDA ON OODD.UR_STORE_ID = USDA.UR_STORE_ID
     LEFT OUTER JOIN UR_STORE UR ON USDA.UR_STORE_ID = UR.UR_STORE_ID
	 LEFT OUTER JOIN UR_WAREHOUSE UW ON OOD.UR_WAREHOUSE_ID = UW.UR_WAREHOUSE_ID
	 LEFT OUTER JOIN OD_TRACKING_NUMBER OTN ON OOD.OD_ORDER_DETL_ID  = OTN.OD_ORDER_DETL_ID
	 LEFT OUTER JOIN PS_SHIPPING_COMP PSC ON PSC.PS_SHIPPING_COMP_ID = OTN.PS_SHIPPING_COMP_ID
	 LEFT OUTER JOIN OD_SHIPPING_PRICE OSP ON OOD.OD_SHIPPING_PRICE_ID = OSP.OD_SHIPPING_PRICE_ID
	 LEFT OUTER JOIN
					(
						SELECT
								GROUP_CONCAT(
									DISTINCT CONCAT(
													IFNULL(PSC1.SHIPPING_COMP_NM, "-"), ",",
													IFNULL(OTN1.TRACKING_NO, "-"), ",",
													IFNULL(OTN1.PS_SHIPPING_COMP_ID, 0), ",",
													IFNULL(PSC1.TRACKING_URL,"-"), ",",
													IF(PSC1.HTTP_REQUEST_TP = 'P', 'POST', 'GET'), ",",
													IFNULL(PSC1.INVOICE_PARAM,"-"), ",",
													CASE WHEN IFNULL(PC1.PS_NM, '') != '' THEN
															CASE WHEN PSC1.LOGISTICS_CD = 'LOTTE' THEN
																CASE WHEN OOD1.UR_WAREHOUSE_GRP_CD = 'WAREHOUSE_GROUP.OWN' AND PSC1.LOGISTICS_CD = 'LOTTE' THEN 'Y'
																			ELSE 'N'
																		END
																ELSE 'Y' END
													ELSE 'N' END, ",",
													IFNULL(PSC1.LOGISTICS_CD,"")
													) SEPARATOR '∀'
											)  AS SHIPPING_INFO
								, OOD1.OD_SHIPPING_ZONE_ID
								, OOD1.UR_WAREHOUSE_ID
   	     				FROM OD_ORDER_DETL OOD1
						LEFT OUTER JOIN OD_TRACKING_NUMBER OTN1 ON OOD1.OD_ORDER_DETL_ID  = OTN1.OD_ORDER_DETL_ID
						LEFT OUTER JOIN PS_SHIPPING_COMP PSC1 ON PSC1.PS_SHIPPING_COMP_ID = OTN1.PS_SHIPPING_COMP_ID
						LEFT OUTER JOIN PS_CONFIG PC1 ON OTN1.PS_SHIPPING_COMP_ID = PC1.PS_KEY AND PS_GRP_TP = 'DELIVERY_TRACKING_SEARCH'
   	     				LEFT OUTER JOIN IL_SHIPPING_TEMPLATE ST1 ON OOD1.IL_GOODS_SHIPPING_TEMPLATE_ID = ST1.IL_SHIPPING_TMPL_ID
						WHERE OOD1.OD_ORDER_ID = #{odOrderId}
   	     				AND ST1.BUNDLE_YN = 'N'
						GROUP BY OOD1.UR_WAREHOUSE_ID
					) AS A ON A.UR_WAREHOUSE_ID = OOD.UR_WAREHOUSE_ID
    LEFT OUTER JOIN IL_SHIPPING_TEMPLATE ST ON OOD.IL_GOODS_SHIPPING_TEMPLATE_ID = ST.IL_SHIPPING_TMPL_ID
    LEFT OUTER JOIN (
						SELECT US.NM AS UR_STORE_NM
							 , OO.OD_ORDER_ID
						FROM UR_STORE US
						INNER JOIN OD_ORDER OO ON OO.UR_STORE_ID = US.UR_STORE_ID
						WHERE OO.OD_ORDER_ID = #{odOrderId}
						) US1 ON US1.OD_ORDER_ID = OOD.OD_ORDER_ID
    WHERE OSZ.OD_ORDER_ID = #{odOrderId}
    AND ST.BUNDLE_YN = 'N'
    <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(odShippingZoneId)">
            AND OSZ.OD_SHIPPING_ZONE_ID = #{odShippingZoneId}
    </if>
	GROUP BY OOD.OD_ORDER_DETL_ID
    HAVING GOODS_DAILY_TP_GRRENJUICE_YN = 'N'
    ORDER BY OSZ.OD_SHIPPING_ZONE_ID, OOD.OD_ORDER_DETL_ID DESC
	)
	UNION ALL
    (
    /*합배송*/
	SELECT
   		   OSZ.OD_SHIPPING_ZONE_ID
   		 , OOD.OD_ORDER_DETL_ID
   		 , OOD.OD_ORDER_ID
         , OOD.IL_GOODS_ID
		 , OOD.ORDER_STATUS_CD AS ORDER_STATUS_CODE
		 , FN_COMN_CODE_DIC(OOD.ORDER_STATUS_DELI_TP) AS ORDER_STATUS_DELI_TP
		 , OSZ.DELIVERY_TYPE AS DELIVERY_TYPE_CODE
         , FN_DECRYPT(OSZ.RECV_NM) RECV_NM
         , FN_DECRYPT(OSZ.RECV_NM) ORG_RECV_NM
         , FN_DECRYPT(OSZ.RECV_HP) RECV_HP
         , FN_DECRYPT(OSZ.RECV_HP) ORG_RECV_HP
         , LEFT(FN_DECRYPT(OSZ.RECV_HP), 3) PHONE_PREFIX
         , SUBSTRING(FN_DECRYPT(OSZ.RECV_HP), 4, 4) RECV_HP1
         , SUBSTRING(FN_DECRYPT(OSZ.RECV_HP), 8, 4) RECV_HP2
         , FN_DECRYPT(OSZ.RECV_ZIP_CD) RECV_ZIP_CD
         , FN_DECRYPT(OSZ.RECV_ADDR1) RECV_ADDR1
         , FN_DECRYPT(OSZ.RECV_ADDR1) ORG_RECV_ADDR1
         , FN_DECRYPT(OSZ.RECV_ADDR2) RECV_ADDR2
         , FN_DECRYPT(OSZ.RECV_ADDR2) ORG_RECV_ADDR2
         , OSZ.RECV_BLD_NO
         , OSZ.DELIVERY_MSG_CD
         , OSZ.DELIVERY_MSG
         , OSZ.DOOR_MSG_CD
         , FN_COMN_CODE_DIC(OSZ.DOOR_MSG_CD) AS DOOR_MSG_CD_NAME
         , FN_DECRYPT(OSZ.DOOR_MSG) AS DOOR_MSG
         , FN_DECRYPT(OSZ.DOOR_ETC) AS DOOR_ETC
         , DATE_FORMAT(OOD.DELIVERY_DT , '%Y-%m-%d') DELIVERY_DT
         , DATE_FORMAT(OSZ.CREATE_DT , '%Y-%m-%d') CREATE_DT
         , OO.UR_USER_ID
         , OO.GUEST_CI
         , OOD.GOODS_DAILY_TP AS GOODS_DAILY_TYPE
         , USDA.DELIVERY_AREA_NM
         , USDA.STORE_DELIVERY_INTERVAL_TP
         , (SELECT COUNT(1) FROM OD_SHIPPING_ZONE_HIST WHERE OD_ORDER_ID = OSZ.OD_ORDER_ID AND OD_SHIPPING_ZONE_ID = OSZ.OD_SHIPPING_ZONE_ID) AS HIST_CNT
		 , IF(OOD.GOODS_DAILY_TP = 'GOODS_DAILY_TP.GREENJUICE', 'Y', 'N') AS GOODS_DAILY_TP_GRRENJUICE_YN
		 , OOD.PROMOTION_TP
		 , UW.WAREHOUSE_NM
		 , OOD.UR_WAREHOUSE_ID
		 , OSP.SHIPPING_PRICE
		 , OSP.SHIPPING_DISCOUNT_PRICE
		 , IFNULL(A.SHIPPING_INFO, '-') AS SHIPPING_INFO
		 , IFNULL(A.GOODS_NAME_INFO, '-') AS GOODS_NAME_INFO
		 , OOD.OD_SHIPPING_PRICE_ID
		 , OSP.IL_SHIPPING_TMPL_ID
         , A.ORDER_STATUS_INFO
		 , UR.TEL AS DELIVERY_AREA_TEL
		 , CASE WHEN OOD.ORDER_STATUS_DELI_TP = 'ORDER_STATUS_DELI_TP.DAILY' ||
			    		OOD.ORDER_STATUS_DELI_TP = 'ORDER_STATUS_DELI_TP.SHOP_DELIVERY' ||
			    		OOD.ORDER_STATUS_DELI_TP = 'ORDER_STATUS_DELI_TP.SHOP_PICKUP' THEN IFNULL(UR.NM, US1.UR_STORE_NM)
			  ELSE '' END AS UR_STORE_NM
		 ,(SELECT DAILY_BULK_YN FROM OD_ORDER_DETL_DAILY WHERE OD_ORDER_DETL_ID = OOD.OD_ORDER_DETL_ID) AS DAILY_BULK_YN
 	 FROM OD_ORDER_DETL OOD
   	 JOIN OD_SHIPPING_ZONE OSZ ON OSZ.OD_SHIPPING_ZONE_ID = OOD.OD_SHIPPING_ZONE_ID
   	 JOIN OD_ORDER OO ON OSZ.OD_ORDER_ID = OO.OD_ORDER_ID
   	 LEFT OUTER JOIN OD_ORDER_DETL_DAILY OODD ON OSZ.OD_ORDER_ID = OODD.OD_ORDER_ID
     LEFT OUTER JOIN UR_STORE_DELIVERY_AREA USDA ON OODD.UR_STORE_ID = USDA.UR_STORE_ID
	 LEFT OUTER JOIN UR_STORE UR ON USDA.UR_STORE_ID = UR.UR_STORE_ID
	 LEFT OUTER JOIN UR_WAREHOUSE UW ON OOD.UR_WAREHOUSE_ID = UW.UR_WAREHOUSE_ID
	 LEFT OUTER JOIN OD_TRACKING_NUMBER OTN ON OOD.OD_ORDER_DETL_ID  = OTN.OD_ORDER_DETL_ID
	 LEFT OUTER JOIN PS_SHIPPING_COMP PSC ON PSC.PS_SHIPPING_COMP_ID = OTN.PS_SHIPPING_COMP_ID
	 LEFT OUTER JOIN OD_SHIPPING_PRICE OSP ON OOD.OD_SHIPPING_PRICE_ID = OSP.OD_SHIPPING_PRICE_ID
	 LEFT OUTER JOIN
					(
						SELECT
								GROUP_CONCAT(
									DISTINCT CONCAT(
													IFNULL(PSC1.SHIPPING_COMP_NM, "-"), ",",
													IFNULL(OTN1.TRACKING_NO, "-"), ",",
													IFNULL(OTN1.PS_SHIPPING_COMP_ID, 0), ",",
													IFNULL(PSC1.TRACKING_URL,"-"), ",",
													IF(PSC1.HTTP_REQUEST_TP = 'P', 'POST', 'GET'), ",",
													IFNULL(PSC1.INVOICE_PARAM,"-"), ",",
													CASE WHEN IFNULL(PC1.PS_NM, '') != '' THEN
															CASE WHEN PSC1.LOGISTICS_CD = 'LOTTE' THEN
																CASE WHEN OOD1.UR_WAREHOUSE_GRP_CD = 'WAREHOUSE_GROUP.OWN' AND PSC1.LOGISTICS_CD = 'LOTTE' THEN 'Y'
																			ELSE 'N'
																		END
																ELSE 'Y' END
													ELSE 'N' END, ",",
													IFNULL(PSC1.LOGISTICS_CD,"")
													) SEPARATOR '∀'
											)  AS SHIPPING_INFO
								, OOD1.OD_SHIPPING_ZONE_ID
								, OOD1.UR_WAREHOUSE_ID
								, CASE WHEN (COUNT( DISTINCT OOD1.OD_ORDER_DETL_PARENT_ID) - 1) = 0 THEN OOD1.GOODS_NM ELSE CONCAT( OOD1.GOODS_NM , ' 외 ', (COUNT(DISTINCT OOD1.OD_ORDER_DETL_PARENT_ID)-1), '건') END AS GOODS_NAME_INFO
								, GROUP_CONCAT(DISTINCT CONCAT(OOD1.ORDER_STATUS_CD) SEPARATOR '∀')  AS ORDER_STATUS_INFO
   	     				FROM OD_ORDER_DETL OOD1
						LEFT OUTER JOIN OD_TRACKING_NUMBER OTN1 ON OOD1.OD_ORDER_DETL_ID  = OTN1.OD_ORDER_DETL_ID
						LEFT OUTER JOIN PS_SHIPPING_COMP PSC1 ON PSC1.PS_SHIPPING_COMP_ID = OTN1.PS_SHIPPING_COMP_ID
						LEFT OUTER JOIN PS_CONFIG PC1 ON OTN1.PS_SHIPPING_COMP_ID = PC1.PS_KEY AND PS_GRP_TP = 'DELIVERY_TRACKING_SEARCH'
   	     				LEFT OUTER JOIN IL_SHIPPING_TEMPLATE ST1 ON OOD1.IL_GOODS_SHIPPING_TEMPLATE_ID = ST1.IL_SHIPPING_TMPL_ID
						WHERE OOD1.OD_ORDER_ID = #{odOrderId}
   	     				AND ST1.BUNDLE_YN = 'Y'
						GROUP BY OOD1.UR_WAREHOUSE_ID
					) AS A ON A.UR_WAREHOUSE_ID = OOD.UR_WAREHOUSE_ID
	LEFT OUTER JOIN IL_SHIPPING_TEMPLATE ST ON OOD.IL_GOODS_SHIPPING_TEMPLATE_ID = ST.IL_SHIPPING_TMPL_ID
	LEFT OUTER JOIN (
						SELECT US.NM AS UR_STORE_NM
							 , OO.OD_ORDER_ID
						FROM UR_STORE US
						INNER JOIN OD_ORDER OO ON OO.UR_STORE_ID = US.UR_STORE_ID
						WHERE OO.OD_ORDER_ID = #{odOrderId}
						) US1 ON US1.OD_ORDER_ID = OOD.OD_ORDER_ID
    WHERE OSZ.OD_ORDER_ID = #{odOrderId}
    AND ST.BUNDLE_YN = 'Y'
    <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(odShippingZoneId)">
            AND OSZ.OD_SHIPPING_ZONE_ID = #{odShippingZoneId}
    </if>
	GROUP BY OSZ.OD_SHIPPING_ZONE_ID, OOD.UR_WAREHOUSE_ID, OSP.IL_SHIPPING_TMPL_ID, OSP.SHIPPING_PRICE, OSP.SHIPPING_DISCOUNT_PRICE
    ORDER BY OSZ.OD_SHIPPING_ZONE_ID, OOD.OD_ORDER_DETL_ID DESC
	)
	UNION ALL
	(
     /*녹즙*/
     SELECT
   		   OSZ.OD_SHIPPING_ZONE_ID
   		 , OOD.OD_ORDER_DETL_ID
   		 , OOD.OD_ORDER_ID
         , OOD.IL_GOODS_ID
		 , OOD.ORDER_STATUS_CD AS ORDER_STATUS_CODE
		 , FN_COMN_CODE_DIC(OOD.ORDER_STATUS_DELI_TP) AS ORDER_STATUS_DELI_TP
		 , OSZ.DELIVERY_TYPE AS DELIVERY_TYPE_CODE
         , FN_DECRYPT(OSZ.RECV_NM) RECV_NM
         , FN_DECRYPT(OSZ.RECV_NM) ORG_RECV_NM
         , FN_DECRYPT(OSZ.RECV_HP) RECV_HP
         , FN_DECRYPT(OSZ.RECV_HP) ORG_RECV_HP
         , LEFT(FN_DECRYPT(OSZ.RECV_HP), 3) PHONE_PREFIX
         , SUBSTRING(FN_DECRYPT(OSZ.RECV_HP), 4, 4) RECV_HP1
         , SUBSTRING(FN_DECRYPT(OSZ.RECV_HP), 8, 4) RECV_HP2
         , FN_DECRYPT(OSZ.RECV_ZIP_CD) RECV_ZIP_CD
         , FN_DECRYPT(OSZ.RECV_ADDR1) RECV_ADDR1
         , FN_DECRYPT(OSZ.RECV_ADDR1) ORG_RECV_ADDR1
         , FN_DECRYPT(OSZ.RECV_ADDR2) RECV_ADDR2
         , FN_DECRYPT(OSZ.RECV_ADDR2) ORG_RECV_ADDR2
         , OSZ.RECV_BLD_NO
         , OSZ.DELIVERY_MSG_CD
         , OSZ.DELIVERY_MSG
         , OSZ.DOOR_MSG_CD
         , FN_COMN_CODE_DIC(OSZ.DOOR_MSG_CD) AS DOOR_MSG_CD_NAME
         , FN_DECRYPT(OSZ.DOOR_MSG) AS DOOR_MSG
         , FN_DECRYPT(OSZ.DOOR_ETC) AS DOOR_ETC
         , DATE_FORMAT(OOD.DELIVERY_DT , '%Y-%m-%d') DELIVERY_DT
         , DATE_FORMAT(OSZ.CREATE_DT , '%Y-%m-%d') CREATE_DT
         , OO.UR_USER_ID
         , OO.GUEST_CI
         , OOD.GOODS_DAILY_TP AS GOODS_DAILY_TYPE
         , USDA.DELIVERY_AREA_NM
         , USDA.STORE_DELIVERY_INTERVAL_TP
         , (SELECT COUNT(1) FROM OD_SHIPPING_ZONE_HIST WHERE OD_ORDER_ID = OSZ.OD_ORDER_ID AND OD_SHIPPING_ZONE_ID = OSZ.OD_SHIPPING_ZONE_ID) AS HIST_CNT
		 , IF(OOD.GOODS_DAILY_TP = 'GOODS_DAILY_TP.GREENJUICE', 'Y', 'N') AS GOODS_DAILY_TP_GRRENJUICE_YN
		 , OOD.PROMOTION_TP
		 , UW.WAREHOUSE_NM
		 , OOD.UR_WAREHOUSE_ID
		 , OSP.SHIPPING_PRICE
		 , OSP.SHIPPING_DISCOUNT_PRICE
		 , IFNULL(A.SHIPPING_INFO, '-') AS SHIPPING_INFO
		 , IFNULL(OODP.GOODS_NM, IFNULL(OOD.GOODS_NM, '-')) AS GOODS_NAME_INFO
		 , OOD.OD_SHIPPING_PRICE_ID
		 , OSP.IL_SHIPPING_TMPL_ID
         , OOD.ORDER_STATUS_CD AS ORDER_STATUS_INFO
         , UR.TEL AS DELIVERY_AREA_TEL
         , CASE WHEN OOD.ORDER_STATUS_DELI_TP = 'ORDER_STATUS_DELI_TP.DAILY' ||
			    		OOD.ORDER_STATUS_DELI_TP = 'ORDER_STATUS_DELI_TP.SHOP_DELIVERY' ||
			    		OOD.ORDER_STATUS_DELI_TP = 'ORDER_STATUS_DELI_TP.SHOP_PICKUP' THEN IFNULL(UR.NM, US1.UR_STORE_NM)
			  ELSE '' END AS UR_STORE_NM
		 ,(SELECT DAILY_BULK_YN FROM OD_ORDER_DETL_DAILY WHERE OD_ORDER_DETL_ID = OOD.OD_ORDER_DETL_ID) AS DAILY_BULK_YN
 	 FROM OD_ORDER_DETL OOD
   	 JOIN OD_SHIPPING_ZONE OSZ ON OSZ.OD_SHIPPING_ZONE_ID = OOD.OD_SHIPPING_ZONE_ID
   	 JOIN OD_ORDER OO ON OSZ.OD_ORDER_ID = OO.OD_ORDER_ID
   	 LEFT OUTER JOIN OD_ORDER_DETL_DAILY OODD ON OSZ.OD_ORDER_ID = OODD.OD_ORDER_ID
     LEFT OUTER JOIN UR_STORE_DELIVERY_AREA USDA ON OODD.UR_STORE_ID = USDA.UR_STORE_ID
	 LEFT OUTER JOIN UR_STORE UR ON USDA.UR_STORE_ID = UR.UR_STORE_ID
	 LEFT OUTER JOIN UR_WAREHOUSE UW ON OOD.UR_WAREHOUSE_ID = UW.UR_WAREHOUSE_ID
	 LEFT OUTER JOIN OD_TRACKING_NUMBER OTN ON OOD.OD_ORDER_DETL_ID  = OTN.OD_ORDER_DETL_ID
	 LEFT OUTER JOIN PS_SHIPPING_COMP PSC ON PSC.PS_SHIPPING_COMP_ID = OTN.PS_SHIPPING_COMP_ID
	 LEFT OUTER JOIN OD_SHIPPING_PRICE OSP ON OOD.OD_SHIPPING_PRICE_ID = OSP.OD_SHIPPING_PRICE_ID
	 LEFT OUTER JOIN OD_ORDER_DETL_PACK OODP ON OODP.OD_ORDER_DETL_ID = OOD.OD_ORDER_DETL_PARENT_ID
	 LEFT OUTER JOIN
					(
						SELECT
								GROUP_CONCAT(
									DISTINCT CONCAT(
													IFNULL(PSC1.SHIPPING_COMP_NM, "-"), ",",
													IFNULL(OTN1.TRACKING_NO, "-"), ",",
													IFNULL(OTN1.PS_SHIPPING_COMP_ID, 0), ",",
													IFNULL(PSC1.TRACKING_URL,"-"), ",",
													IF(PSC1.HTTP_REQUEST_TP = 'P', 'POST', 'GET'), ",",
													IFNULL(PSC1.INVOICE_PARAM,"-"), ",",
													CASE WHEN IFNULL(PC1.PS_NM, '') != '' THEN
															CASE WHEN PSC1.LOGISTICS_CD = 'LOTTE' THEN
																CASE WHEN OOD1.UR_WAREHOUSE_GRP_CD = 'WAREHOUSE_GROUP.OWN' AND PSC1.LOGISTICS_CD = 'LOTTE' THEN 'Y'
																			ELSE 'N'
																		END
																ELSE 'Y' END
													ELSE 'N' END, ",",
													IFNULL(PSC1.LOGISTICS_CD,"")
													) SEPARATOR '∀'
											)  AS SHIPPING_INFO
								, OOD1.OD_SHIPPING_ZONE_ID
								, OOD1.UR_WAREHOUSE_ID
   	     				FROM OD_ORDER_DETL OOD1
						LEFT OUTER JOIN OD_TRACKING_NUMBER OTN1 ON OOD1.OD_ORDER_DETL_ID  = OTN1.OD_ORDER_DETL_ID
						LEFT OUTER JOIN PS_SHIPPING_COMP PSC1 ON PSC1.PS_SHIPPING_COMP_ID = OTN1.PS_SHIPPING_COMP_ID
						LEFT OUTER JOIN PS_CONFIG PC1 ON OTN1.PS_SHIPPING_COMP_ID = PC1.PS_KEY AND PS_GRP_TP = 'DELIVERY_TRACKING_SEARCH'
   	     				LEFT OUTER JOIN IL_SHIPPING_TEMPLATE ST1 ON OOD1.IL_GOODS_SHIPPING_TEMPLATE_ID = ST1.IL_SHIPPING_TMPL_ID
						WHERE OOD1.OD_ORDER_ID = #{odOrderId}
   	     				AND ST1.BUNDLE_YN = 'N'
						GROUP BY OOD1.UR_WAREHOUSE_ID
					) AS A ON A.UR_WAREHOUSE_ID = OOD.UR_WAREHOUSE_ID
    LEFT OUTER JOIN IL_SHIPPING_TEMPLATE ST ON OOD.IL_GOODS_SHIPPING_TEMPLATE_ID = ST.IL_SHIPPING_TMPL_ID
    LEFT OUTER JOIN (
						SELECT US.NM AS UR_STORE_NM
							 , OO.OD_ORDER_ID
						FROM UR_STORE US
						INNER JOIN OD_ORDER OO ON OO.UR_STORE_ID = US.UR_STORE_ID
						WHERE OO.OD_ORDER_ID = #{odOrderId}
						) US1 ON US1.OD_ORDER_ID = OOD.OD_ORDER_ID
    WHERE OSZ.OD_ORDER_ID = #{odOrderId}
    AND ST.BUNDLE_YN = 'N'
    AND OOD.GOODS_DAILY_TP = 'GOODS_DAILY_TP.GREENJUICE'
    <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(odShippingZoneId)">
            AND OSZ.OD_SHIPPING_ZONE_ID = #{odShippingZoneId}
    </if>
    GROUP BY OSZ.OD_SHIPPING_ZONE_ID
    ORDER BY OSZ.OD_SHIPPING_ZONE_ID, OOD.OD_ORDER_DETL_ID DESC
	)
    </select>

    <!--───────────────────────────────────────────────────────────────────────
     * description         : 주문복사 > 배송정보 > 배송정보 조회 (OD_SHIPPING_ZONE)
     * @
     * @ 수정일            수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2021.04.20     강상국          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <resultMap id="getOrderDetailCopyShippingZoneListMap" type="kr.co.pulmuone.v1.order.order.dto.OrderDetlCopyShippingZoneDto">
		<result column="OD_SHIPPING_ZONE_ID"		property="odShippingZoneId" />
		<result column="OD_SHIPPING_PRICE_ID" 		property="odShippingPriceId" />
		<result column="OD_ORDER_DETL_ID" 			property="odOrderDetlId" />
		<result column="DELIVERY_TYPE_NM" 			property="deliveryTypeNm" />
		<result column="WAREHOUSE_NM" 				property="warehouseNm" />
		<result column="UR_WAREHOUSE_ID" 			property="urWarehouseId" />
		<result column="IL_SHIPPING_TMPL_ID" 		property="ilShippingTmplId" />
		<result column="TRACKING_NO" 				property="trackingNo" />
		<result column="SHIPPING_COMP_NM" 			property="shippingCompNm" />
		<result column="SHIPPING_PRICE" 			property="shippingPrice" />
		<result column="SHIPPING_DISCOUNT_PRICE" 	property="shippingDiscountPrice" />
		<result column="PM_COUPON_NM" 				property="pmCouponNm" />
		<result column="IL_GOODS_ID" 				property="ilGoodsId" />
		<result column="GOODS_NM" 					property="goodsNm" />
		<result column="RECV_NM" 					property="recvNm" />
		<result column="ORG_RECV_NM" 				property="orgRecvNm" />
		<result column="RECV_HP" 					property="recvHp" />
		<result column="ORG_RECV_HP" 				property="orgRecvHp" />
		<result column="PHONE_PREFIX" 				property="phonePrefix" />
		<result column="RECV_HP1" 					property="recvHp1" />
		<result column="RECV_HP2" 					property="recvHp2" />
		<result column="RECV_TEL" 					property="recvTel" />
		<result column="RECV_MAIL" 					property="recvMail" />
		<result column="RECV_ZIP_CD" 				property="recvZipCd" />
		<result column="RECV_ADDR1" 				property="recvAddr1" />
		<result column="ORG_RECV_ADDR1" 			property="orgRecvAddr1" />
		<result column="RECV_ADDR2" 				property="recvAddr2" />
		<result column="ORG_RECV_ADDR2" 			property="orgRecvAddr2" />
		<result column="RECV_BLD_NO" 				property="recvBldNo" />
		<result column="DELIVERY_MSG" 				property="deliveryMsg" />
		<result column="DOOR_MSG_CD" 				property="doorMsgCd" />
		<result column="DOOR_MSG" 					property="doorMsg" />
		<result column="DOOR_MSG_CD_NAME"           property="doorMsgCdName"/>
		<result column="ORDER_STATUS_CD"           	property="orderStatusCd"/>
		<result column="UR_USER_ID"           		property="urUserId"/>
		<result column="GUEST_CI"           		property="guestCi"/>
		<result column="OD_ORDER_ID"           		property="odOrderId"/>
	</resultMap>
    <select id="getOrderDetailCopyShippingZoneList" resultMap="getOrderDetailCopyShippingZoneListMap">
    	/* orderDetail.getOrderDetailCopyShippingZoneList */
		SELECT
			OSZ.OD_SHIPPING_ZONE_ID 									/* 주문 배송지 PK */
			, OSP.OD_SHIPPING_PRICE_ID 									/* 주문 배송비 PK */
			, OOD.OD_ORDER_DETL_ID 										/* 주문상세 PK */
			, FN_COMN_CODE_DIC(OSZ.DELIVERY_TYPE) AS DELIVERY_TYPE_NM	/* 배송방법 */
			, UW.WAREHOUSE_NM											/* 출고처명 */
			, OOD.UR_WAREHOUSE_ID										/* 출고처ID */
			, OSP.IL_SHIPPING_TMPL_ID									/* 배송비 정책 PK : IL_GOODS_SHIPPING_TEMPLATE.IL_GOODS_SHIPPING_TEMPLATE_ID */
			, OTN.TRACKING_NO											/* 송장번호 */
			, OTN.SHIPPING_COMP_NM 										/* 택배사 */
			, OSP.SHIPPING_PRICE										/* 배송비 */
			, OSP.SHIPPING_DISCOUNT_PRICE 								/* 배송비 할인금액 */
			, CASE WHEN SHIPPING_DISCOUNT_PRICE != 0 THEN CONCAT('(', PM_COUPON_NM , ' ', SHIPPING_DISCOUNT_PRICE, '원 할인)') ELSE '' END AS PM_COUPON_NM	/* 배송비할인금액명 */
			, OOD.IL_GOODS_ID 											/* 상품코드 */
			, OOD.GOODS_NM 												/* 상품명 */
			, FN_DECRYPT(OSZ.RECV_NM) AS RECV_NM						/* 받는분  */
			, FN_DECRYPT(OSZ.RECV_NM) ORG_RECV_NM
			, FN_DECRYPT(OSZ.RECV_HP) AS RECV_HP						/* 휴대폰  */
			, FN_DECRYPT(OSZ.RECV_HP) ORG_RECV_HP
         	, LEFT(FN_DECRYPT(OSZ.RECV_HP), 3) PHONE_PREFIX
	        , SUBSTRING(FN_DECRYPT(OSZ.RECV_HP), 4, 4) RECV_HP1
	        , SUBSTRING(FN_DECRYPT(OSZ.RECV_HP), 8, 4) RECV_HP2
			, FN_DECRYPT(OSZ.RECV_TEL) AS RECV_TEL						/* 연락처 */
			, FN_DECRYPT(OSZ.RECV_MAIL) AS RECV_MAIL					/* 이메일 */
			, FN_DECRYPT(OSZ.RECV_ZIP_CD) AS RECV_ZIP_CD				/* 우편번호 */
			, FN_DECRYPT(OSZ.RECV_ADDR1) AS	RECV_ADDR1					/* 배송지주소 */
			, FN_DECRYPT(OSZ.RECV_ADDR1) ORG_RECV_ADDR1
			, FN_DECRYPT(OSZ.RECV_ADDR2) AS RECV_ADDR2 					/* 상세주소 */
			, FN_DECRYPT(OSZ.RECV_ADDR2) ORG_RECV_ADDR2
			, OSZ.RECV_BLD_NO											/* 건물번호 */
			, OSZ.DELIVERY_MSG 											/* 배송요청사항 */
			, OSZ.DOOR_MSG_CD 											/* 출입정보타입 공통코드(ACCESS_INFORMATION) */
			, FN_DECRYPT(OSZ.DOOR_MSG) AS DOOR_MSG 						/* 배송출입 현관 비밀번호 */
			, FN_COMN_CODE_DIC(OSZ.DOOR_MSG_CD) AS DOOR_MSG_CD_NAME		/* 출입정보타입명 */
			, OOD.ORDER_STATUS_CD										/* 정상주문상태 */
			, OO.UR_USER_ID												/* 회원ID */
			, OO.GUEST_CI												/* 비회원 */
			, OOD.OD_ORDER_ID											/* 주문Pk */
		FROM
			OD_SHIPPING_ZONE OSZ
			INNER JOIN OD_ORDER OO ON OSZ.OD_ORDER_ID = OO.OD_ORDER_ID
			INNER JOIN OD_ORDER_DETL OOD ON OSZ.OD_SHIPPING_ZONE_ID = OOD.OD_SHIPPING_ZONE_ID
			INNER JOIN UR_WAREHOUSE UW ON OOD.UR_WAREHOUSE_ID = UW.UR_WAREHOUSE_ID
			LEFT OUTER JOIN
				(SELECT OTN.OD_ORDER_DETL_ID, OTN.TRACKING_NO, OTN.PS_SHIPPING_COMP_ID, PSC.SHIPPING_COMP_NM
				FROM
					OD_TRACKING_NUMBER OTN
					LEFT OUTER JOIN PS_SHIPPING_COMP PSC ON OTN.PS_SHIPPING_COMP_ID = PSC.PS_SHIPPING_COMP_ID
				) OTN ON OOD.OD_ORDER_DETL_ID  = OTN.OD_ORDER_DETL_ID
			INNER JOIN OD_SHIPPING_PRICE OSP ON OOD.OD_SHIPPING_PRICE_ID = OSP.OD_SHIPPING_PRICE_ID
				 AND OOD.IL_GOODS_SHIPPING_TEMPLATE_ID = OSP.IL_SHIPPING_TMPL_ID
		WHERE
			OSZ.OD_ORDER_ID = #{odOrderId}
		ORDER BY OOD.OD_ORDER_DETL_SEQ
    </select>

    <!--───────────────────────────────────────────────────────────────────────
     * description         : 주문상세 > 배송정보 > 주문 상세 변경내역 조회 (변경 정보) (OD_SHIPPING_ZONE_HIST)
     * @
     * @ 수정일            수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2021.02.04 	   최윤지          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <select id="getOrderShippingZoneHistList"  resultType="kr.co.pulmuone.v1.order.order.dto.vo.OrderDetlShippingZoneHistVo">
    /* orderDetail.getOrderShippingZoneHistList */
     SELECT
           OSZH.OD_SHIPPING_ZONE_ID
         , FN_COMN_CODE_DIC(OSZH.DELIVERY_TYPE) DELIVERY_TYPE
         , FN_DECRYPT(OSZH.RECV_NM) RECV_NM
         , FN_DECRYPT(OSZH.RECV_HP) RECV_HP
         , LEFT(FN_DECRYPT(OSZH.RECV_HP), 3) PHONE_PREFIX
         , SUBSTRING(FN_DECRYPT(OSZH.RECV_HP), 4, 4) RECV_HP1
         , SUBSTRING(FN_DECRYPT(OSZH.RECV_HP), 8, 4) RECV_HP2
         , FN_DECRYPT(OSZH.RECV_ZIP_CD) RECV_ZIP_CD
         , FN_DECRYPT(OSZH.RECV_ADDR1) RECV_ADDR1
         , FN_DECRYPT(OSZH.RECV_ADDR2) RECV_ADDR2
         , OSZH.RECV_BLD_NO
         , OSZH.DELIVERY_MSG_CD
		 , OSZH.DELIVERY_MSG <!-- 배송요청사항 > 기타/직접입력 -->
         , OSZH.DOOR_MSG_CD
         , FN_COMN_CODE_DIC(OSZH.DOOR_MSG_CD) AS DOOR_MSG_CD_NAME
         , FN_DECRYPT(OSZH.DOOR_MSG) AS DOOR_MSG
         , FN_DECRYPT(OSZH.DOOR_ETC) AS DOOR_ETC
         , OSZH.CREATE_DT
     	 , OOD.DELIVERY_DT
         , OO.UR_USER_ID
         , OO.GUEST_CI
		 , USDA.DELIVERY_AREA_NM
         , USDA.STORE_DELIVERY_INTERVAL_TP
     FROM OD_SHIPPING_ZONE_HIST OSZH
     INNER JOIN OD_ORDER OO ON OSZH.OD_ORDER_ID = OO.OD_ORDER_ID
	 LEFT OUTER JOIN OD_ORDER_DETL OOD ON OO.OD_ORDER_ID = OOD.OD_ORDER_ID
     LEFT OUTER JOIN OD_ORDER_DETL_DAILY OODD ON OSZH.OD_ORDER_ID = OODD.OD_ORDER_ID
     LEFT OUTER JOIN UR_STORE_DELIVERY_AREA USDA ON OODD.UR_STORE_ID = USDA.UR_STORE_ID
/*	 LEFT OUTER JOIN UR_DELIVERY_AREA UDA ON UDA.UR_DELIVERY_AREA_ID = USDA.UR_DELIVERY_AREA_ID
	 LEFT OUTER JOIN UR_STORE US ON US.UR_STORE_ID = USDA.UR_STORE_ID*/
    WHERE OSZH.OD_SHIPPING_ZONE_ID = #{odShippingZoneId}
	GROUP BY OSZH.OD_SHIPPING_ZONE_HIST_ID
   	ORDER BY OSZH.CREATE_DT DESC
    </select>


    <!--───────────────────────────────────────────────────────────────────────
     * description         : 주문상세 > 결제정보 > 즉시할인내역조회
     * @
     * @ 수정일            수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2021.02.08 	   최윤지          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <select id="getOrderDirectDiscountList" resultType="kr.co.pulmuone.v1.order.order.dto.vo.OrderDetlDirectDiscountVo">
	/* orderDetail.getOrderDirectDiscountList */
	SELECT
		  OD.OD_ORDER_DETL_ID
		 ,OO.IL_GOODS_ID
		 ,OO.GOODS_NM
		 ,OO.RECOMMENDED_PRICE
		 ,OO.SALE_PRICE
		 ,FN_COMN_CODE_DIC(OD.DISCOUNT_TP) AS DISCOUNT_TP
		 ,OD.DISCOUNT_PRICE
	FROM OD_ORDER_DETL_DISCOUNT OD
		INNER JOIN OD_ORDER_DETL OO ON OD.OD_ORDER_ID = OO.OD_ORDER_ID AND OD.OD_ORDER_DETL_ID = OO.OD_ORDER_DETL_ID
	WHERE OD.OD_ORDER_ID = #{odOrderId}
	  AND OD.DISCOUNT_TP NOT IN ('GOODS_DISCOUNT_TP.GOODS_COUPON', 'GOODS_DISCOUNT_TP.CART_COUPON')
	ORDER BY OD.OD_ORDER_DETL_DISCOUNT_ID ASC
	</select>

    <!--───────────────────────────────────────────────────────────────────────
     * description         : 쿠폰발급PK로 배송비쿠폰재발급가능한지여부 확인
     * @
     * @ 수정일                    수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2021.02.17     천혜현          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <select id="isPossibilityReissueCouponInOdshippingPrice" resultType="int">
	   /* orderDetail.isPossibilityReissueCouponInOdshippingPrice */
	   SELECT
	       IF(SUM(OOD.ORDER_CNT) = SUM(OOD.CANCEL_CNT), true, false ) AS IS_REISSUE_COUPON
       FROM
	       OD_SHIPPING_PRICE OSP
		   JOIN OD_ORDER_DETL OOD ON OSP.OD_SHIPPING_PRICE_ID = OOD.OD_SHIPPING_PRICE_ID
	   WHERE
	       OOD.OD_ORDER_ID = #{odOrderId}
	       AND OSP.PM_COUPON_ISSUE_ID = #{pmCouponIssueId}
    </select>

     <!--───────────────────────────────────────────────────────────────────────
     * description         : 쿠폰발급PK로 쿠폰재발급가능한지여부 확인
     * @
     * @ 수정일                    수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2021.02.17     천혜현          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <select id="isPossibilityReissueCouponInOdOrderDetl" resultType="int">
       /* orderDetail.isPossibilityReissueCouponInOdOrderDetl */
       SELECT
           IF(SUM(OOD.ORDER_CNT) = SUM(OOD.CANCEL_CNT), true, false ) AS IS_REISSUE_COUPON
       FROM
           OD_ORDER_DETL_DISCOUNT OODD
           JOIN OD_ORDER_DETL OOD ON OODD.OD_ORDER_DETL_ID = OOD.OD_ORDER_DETL_ID
       WHERE
           OODD.OD_ORDER_ID = #{odOrderId}
           AND OODD.PM_COUPON_ISSUE_ID = #{pmCouponIssueId}
    </select>
    <!--───────────────────────────────────────────────────────────────────────
     * description         : 쿠폰발급PK로 쿠폰재발급가능한지여부 확인
     * @
     * @ 수정일                    수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2021.02.17     천혜현          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <select id="isPossibilityReissueCartCouponInOdOrderDetl" resultType="int">
       /* orderDetail.isPossibilityReissueCartCouponInOdOrderDetl */
       SELECT
       		IF(O.ORDER_CNT = IFNULL(
       			(	SELECT SUM(OCD.CLAIM_CNT)
       				FROM OD_CLAIM_DETL_DISCOUNT OCDD
       				JOIN OD_CLAIM_DETL OCD ON OCDD.OD_CLAIM_DETL_ID = OCD.OD_CLAIM_DETL_ID
       				WHERE OCDD.PM_COUPON_ISSUE_ID = #{pmCouponIssueId}
					<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(odClaimDetlIds)">
						AND OCDD.OD_CLAIM_DETL_ID IN
						<foreach collection="odClaimDetlIds" item="odClaimDetlId" separator="," open="(" close=")">
							#{odClaimDetlId}
						</foreach>
					</if>
      			)
       			,0), true, false) AS IS_REISSUE_COUPON
       FROM (
	       SELECT
	           SUM(OOD.ORDER_CNT) AS ORDER_CNT
	       FROM
	           OD_ORDER_DETL_DISCOUNT OODD
	           JOIN OD_ORDER_DETL OOD ON OODD.OD_ORDER_DETL_ID = OOD.OD_ORDER_DETL_ID
	       WHERE
	           OODD.OD_ORDER_ID = #{odOrderId}
	           AND OODD.PM_COUPON_ISSUE_ID = #{pmCouponIssueId}
       ) O
    </select>
	<!--─────────────────────────────────────────────────────────────────────
     * description         : 주문 상세 클레임 상품정보 조회 > 첨부파일보기 조회
     * @
     * @ 수정일            수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2021.02.16 	   최윤지          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <select id="getOrderClaimAttc" resultType="kr.co.pulmuone.v1.order.claim.dto.vo.ClaimAttcVo">
	/* orderDetail.getOrderClaimAttc */
	SELECT
		   OD_CLAIM_ATTC_ID
		  ,OD_CLAIM_ID
		  ,ORIGIN_NM
		  ,UPLOAD_NM
		  ,UPLOAD_PATH
	  FROM
	       OD_CLAIM_ATTC
	 WHERE OD_CLAIM_ID = #{odClaimId}
	</select>

	<!--─────────────────────────────────────────────────────────────────────
     * description         : 주문 상세 클레임 상품정보 조회 > 증정품 내역
     * @
     * @ 수정일                        수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2021.03.19        천혜현          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <select id="getOrderGiftList" resultType="kr.co.pulmuone.v1.order.order.dto.vo.OrderGiftVo">
	    /* orderDetail.getOrderGiftList */
	    SELECT
		    OOD.IL_GOODS_ID
		    ,OOD.GOODS_NM
		    ,EE.TITLE
		    ,CASE EEG.GIFT_TP WHEN 'GIFT_TP.GOODS' THEN '상품별'
		                      WHEN 'GIFT_TP.CART' THEN CONCAT('장바구니별 (',FORMAT(EEG.OVER_PRICE,0) ,'원)')
		                      ELSE ''
		                      END AS EXHIBIT_INFO
		FROM
		    OD_ORDER_DETL OOD
		    LEFT JOIN EV_EXHIBIT EE ON OOD.EV_EXHIBIT_ID = EE.EV_EXHIBIT_ID AND EE.EXHIBIT_TP = 'EXHIBIT_TP.GIFT'
		    LEFT JOIN EV_EXHIBIT_GIFT EEG ON EE.EV_EXHIBIT_ID = EEG.EV_EXHIBIT_ID
		WHERE
		    OOD.OD_ORDER_ID = #{odOrderId}
		    AND OOD.GOODS_TP_CD IN ('GOODS_TYPE.GIFT', 'GOODS_TYPE.GIFT_FOOD_MARKETING')
		    AND OOD.OD_ORDER_DETL_DEPTH_ID = 1
		ORDER BY OD_ORDER_DETL_ID DESC
    </select>

	<!--─────────────────────────────────────────────────────────────────────
	 * description         : 주문상세 PK로 일일배송 스케쥴정보 조회
	 * @
	 * @ 수정일                        수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.04.12        천혜현          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<select id="getOrderDetlDailySchByOdOrderDetlId" resultType="kr.co.pulmuone.v1.order.order.dto.vo.OrderDetlDailyVo">
		/* orderDetail.getOrderDetlDailySchByOdOrderDetlId */
		SELECT
			OD_ORDER_DETL_DAILY_ID
			 ,OD_ORDER_ID
			 ,OD_ORDER_DETL_ID
			 ,OD_ORDER_DETL_SEQ
			 ,IL_GOODS_ID
			 ,GOODS_CYCLE_TP
			 ,GOODS_CYCLE_TERM_TP
			 ,MON_CNT
			 ,TUE_CNT
			 ,WED_CNT
			 ,THU_CNT
			 ,FRI_CNT
			 ,SET_CNT
			 ,ORDER_CNT
			 ,ALLERGY_YN
			 ,DAILY_BULK_YN
			 ,STORE_DELIVERY_TP
			 ,UR_STORE_ID
			 ,SCHEDULE_YN
			 ,DAILY_PACK_YN
		FROM
			OD_ORDER_DETL_DAILY
		WHERE
			OD_ORDER_DETL_ID = #{odOrderDetlId}
	</select>

	<!--───────────────────────────────────────────────────────────────────────
	 * description         : 주문상세 > 배송정보 > 녹즙 스케쥴 배송정보 조회 (OD_SHIPPING_ZONE)
	 * @
	 * @ 수정일            수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.04.16   	  최윤지          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<select id="getOrderDetailDailySchShippingZone" resultMap="getOrderDetailShippingZoneListMap">
		/* orderDetail.getOrderDetailDailySchShippingZone */
		SELECT
			OSZ.OD_SHIPPING_ZONE_ID
			, OOD.OD_ORDER_DETL_ID
			, OOD.OD_ORDER_ID
			, OOD.IL_GOODS_ID
			, OOD.ORDER_STATUS_CD AS ORDER_STATUS_CODE
			, FN_COMN_CODE_DIC(OOD.ORDER_STATUS_DELI_TP) AS ORDER_STATUS_DELI_TP
			, OSZ.DELIVERY_TYPE AS DELIVERY_TYPE_CODE
			, FN_DECRYPT(OSZ.RECV_NM) RECV_NM
			, FN_DECRYPT(OSZ.RECV_NM) ORG_RECV_NM
			, FN_DECRYPT(OSZ.RECV_HP) RECV_HP
			, FN_DECRYPT(OSZ.RECV_HP) ORG_RECV_HP
			, LEFT(FN_DECRYPT(OSZ.RECV_HP), 3) PHONE_PREFIX
			, SUBSTRING(FN_DECRYPT(OSZ.RECV_HP), 4, 4) RECV_HP1
			, SUBSTRING(FN_DECRYPT(OSZ.RECV_HP), 8, 4) RECV_HP2
			, FN_DECRYPT(OSZ.RECV_ZIP_CD) RECV_ZIP_CD
			, FN_DECRYPT(OSZ.RECV_ADDR1) RECV_ADDR1
			, FN_DECRYPT(OSZ.RECV_ADDR1) ORG_RECV_ADDR1
			, FN_DECRYPT(OSZ.RECV_ADDR2) RECV_ADDR2
			, FN_DECRYPT(OSZ.RECV_ADDR2) ORG_RECV_ADDR2
			, OSZ.RECV_BLD_NO
			, OSZ.DELIVERY_MSG_CD
			, OSZ.DELIVERY_MSG
			, OSZ.DOOR_MSG_CD
			, FN_COMN_CODE_DIC(OSZ.DOOR_MSG_CD) AS DOOR_MSG_CD_NAME
			, FN_DECRYPT(OSZ.DOOR_MSG) AS DOOR_MSG
			, FN_DECRYPT(OSZ.DOOR_ETC) AS DOOR_ETC
			, DATE_FORMAT(OODDS.DELIVERY_DT , '%Y-%m-%d') DELIVERY_DT
			, DATE_FORMAT(OSZ.CREATE_DT , '%Y-%m-%d') CREATE_DT
			, OO.UR_USER_ID
			, OO.GUEST_CI
			, OOD.GOODS_DAILY_TP AS GOODS_DAILY_TYPE
			, USDA.DELIVERY_AREA_NM
			, USDA.STORE_DELIVERY_INTERVAL_TP
			, IFNULL((SELECT COUNT(*) FROM(SELECT * FROM OD_ORDER_DETL_DAILY_SCH WHERE OD_ORDER_DETL_DAILY_ID IN (SELECT OD_ORDER_DETL_DAILY_ID FROM OD_ORDER_DETL_DAILY WHERE OD_ORDER_DETL_ID = OOD.OD_ORDER_DETL_ID) GROUP BY OD_SHIPPING_ZONE_ID) TBL), 0) AS HIST_CNT
			, OOD.PROMOTION_TP
			, OOD.OD_ORDER_DETL_PARENT_ID
			, UW.WAREHOUSE_NM
			, OOD.UR_WAREHOUSE_ID
			, OSP.OD_SHIPPING_PRICE_ID
			, OSP.SHIPPING_PRICE
			, OSP.SHIPPING_DISCOUNT_PRICE
			, GROUP_CONCAT(
					DISTINCT CONCAT(
						IFNULL(PSC.SHIPPING_COMP_NM, "-"), ",",
						IFNULL(OTN.TRACKING_NO, "-"), ",",
						IFNULL(OTN.PS_SHIPPING_COMP_ID, 0), ",",
						IFNULL(PSC.TRACKING_URL,"-"), ",",
						IF(PSC.HTTP_REQUEST_TP = 'P', 'POST', 'GET'), ",",
						IFNULL(PSC.INVOICE_PARAM,"-"), ",",
						CASE WHEN IFNULL(PC.PS_NM, '') != '' THEN
							CASE WHEN PSC.LOGISTICS_CD = 'LOTTE' THEN
								CASE WHEN OOD.UR_WAREHOUSE_GRP_CD = 'WAREHOUSE_GROUP.OWN' AND PSC.LOGISTICS_CD = 'LOTTE' THEN 'Y'
									ELSE 'N'
									END
							ELSE 'Y' END
						ELSE 'N' END
									) SEPARATOR '∀'
						)  AS SHIPPING_INFO
			, OOD.GOODS_NM AS GOODS_NAME_INFO
			, '' AS ORDER_STATUS_INFO
			, UR.TEL AS DELIVERY_AREA_TEL
			, UR.NM AS UR_STORE_NM
			, OOD.IL_GOODS_SHIPPING_TEMPLATE_ID AS  IL_SHIPPING_TMPL_ID
		FROM
			OD_ORDER_DETL_DAILY OODD
			JOIN OD_ORDER_DETL_DAILY_SCH OODDS ON OODD.OD_ORDER_DETL_DAILY_ID = OODDS.OD_ORDER_DETL_DAILY_ID
			JOIN OD_SHIPPING_ZONE OSZ ON OSZ.OD_SHIPPING_ZONE_ID = OODDS.OD_SHIPPING_ZONE_ID
			JOIN OD_ORDER_DETL OOD ON OOD.OD_ORDER_DETL_ID = OODD.OD_ORDER_DETL_ID
			JOIN OD_ORDER OO ON OO.OD_ORDER_ID = OOD.OD_ORDER_ID
			LEFT OUTER JOIN UR_STORE_DELIVERY_AREA USDA ON OODD.UR_STORE_ID = USDA.UR_STORE_ID
			LEFT OUTER JOIN UR_STORE UR ON USDA.UR_STORE_ID = UR.UR_STORE_ID
			LEFT OUTER JOIN UR_WAREHOUSE UW ON OOD.UR_WAREHOUSE_ID = UW.UR_WAREHOUSE_ID
			LEFT OUTER JOIN OD_TRACKING_NUMBER OTN ON OOD.OD_ORDER_DETL_ID  = OTN.OD_ORDER_DETL_ID
			LEFT OUTER JOIN PS_SHIPPING_COMP PSC ON PSC.PS_SHIPPING_COMP_ID = OTN.PS_SHIPPING_COMP_ID
			LEFT OUTER JOIN OD_SHIPPING_PRICE OSP ON OOD.OD_SHIPPING_PRICE_ID = OSP.OD_SHIPPING_PRICE_ID
			LEFT OUTER JOIN PS_CONFIG PC ON OTN.PS_SHIPPING_COMP_ID = PC.PS_KEY AND PS_GRP_TP = 'DELIVERY_TRACKING_SEARCH'
		WHERE
			OODDS.OD_SHIPPING_ZONE_ID = #{odShippingZoneId}
			AND OOD.GOODS_DAILY_TP = 'GOODS_DAILY_TP.GREENJUICE'
		GROUP BY OODDS.OD_SHIPPING_ZONE_ID
		ORDER BY OODDS.DELIVERY_DT
	</select>

	<!--───────────────────────────────────────────────────────────────────────
	 * description         : 주문상세 > 배송정보 > 주문 상세 변경내역 조회 (수취 정보)
	 * @
	 * @ 수정일            수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.04.21     천혜현          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<select id="getOrderShippingZoneByOdShippingZoneId" resultMap="getOrderDetailShippingZoneListMap">
		/* orderDetail.getOrderShippingZoneByOdShippingZoneId */
		SELECT
			OSZ.OD_SHIPPING_ZONE_ID
			, OOD.OD_ORDER_DETL_ID
			, OOD.OD_ORDER_ID
			, OOD.IL_GOODS_ID
			, OOD.ORDER_STATUS_CD AS ORDER_STATUS_CODE
			, FN_COMN_CODE_DIC(OOD.ORDER_STATUS_DELI_TP) AS ORDER_STATUS_DELI_TP
			, OSZ.DELIVERY_TYPE AS DELIVERY_TYPE_CODE
			, FN_DECRYPT(OSZ.RECV_NM) RECV_NM
			, FN_DECRYPT(OSZ.RECV_NM) ORG_RECV_NM
			, FN_DECRYPT(OSZ.RECV_HP) RECV_HP
			, FN_DECRYPT(OSZ.RECV_HP) ORG_RECV_HP
			, LEFT(FN_DECRYPT(OSZ.RECV_HP), 3) PHONE_PREFIX
			, SUBSTRING(FN_DECRYPT(OSZ.RECV_HP), 4, 4) RECV_HP1
			, SUBSTRING(FN_DECRYPT(OSZ.RECV_HP), 8, 4) RECV_HP2
			, FN_DECRYPT(OSZ.RECV_ZIP_CD) RECV_ZIP_CD
			, FN_DECRYPT(OSZ.RECV_ADDR1) RECV_ADDR1
			, FN_DECRYPT(OSZ.RECV_ADDR1) ORG_RECV_ADDR1
			, FN_DECRYPT(OSZ.RECV_ADDR2) RECV_ADDR2
			, FN_DECRYPT(OSZ.RECV_ADDR2) ORG_RECV_ADDR2
			, OSZ.RECV_BLD_NO
			, OSZ.DELIVERY_MSG_CD
			, OSZ.DELIVERY_MSG
			, OSZ.DOOR_MSG_CD
			, FN_COMN_CODE_DIC(OSZ.DOOR_MSG_CD) AS DOOR_MSG_CD_NAME
			, FN_DECRYPT(OSZ.DOOR_MSG) AS DOOR_MSG
			, FN_DECRYPT(OSZ.DOOR_ETC) AS DOOR_ETC
			, OOD.DELIVERY_DT
			, OSZ.CREATE_DT
			, OO.UR_USER_ID
			, OO.GUEST_CI
			, OOD.GOODS_DAILY_TP AS GOODS_DAILY_TYPE
			, USDA.DELIVERY_AREA_NM
			, USDA.STORE_DELIVERY_INTERVAL_TP
			, (SELECT COUNT(1) FROM OD_SHIPPING_ZONE_HIST WHERE OD_ORDER_ID = OSZ.OD_ORDER_ID AND OD_SHIPPING_ZONE_ID = OSZ.OD_SHIPPING_ZONE_ID) AS HIST_CNT
			, IF(OOD.GOODS_DAILY_TP = 'GOODS_DAILY_TP.GREENJUICE', 'Y', 'N') AS GOODS_DAILY_TP_GRRENJUICE_YN
			, OOD.PROMOTION_TP
		FROM OD_SHIPPING_ZONE OSZ
		JOIN OD_ORDER_DETL OOD ON OSZ.OD_ORDER_ID = OOD.OD_ORDER_ID
		JOIN OD_ORDER OO ON OSZ.OD_ORDER_ID = OO.OD_ORDER_ID
		LEFT OUTER JOIN OD_ORDER_DETL_DAILY OODD ON OSZ.OD_ORDER_ID = OODD.OD_ORDER_ID
		LEFT OUTER JOIN UR_STORE_DELIVERY_AREA USDA ON OODD.UR_STORE_ID = USDA.UR_STORE_ID
		/*     LEFT OUTER JOIN UR_DELIVERY_AREA UDA ON UDA.UR_DELIVERY_AREA_ID = USDA.UR_DELIVERY_AREA_ID
		LEFT OUTER JOIN UR_STORE US ON US.UR_STORE_ID = USDA.UR_STORE_ID */
		WHERE
			OSZ.OD_SHIPPING_ZONE_ID = #{odShippingZoneId}
		GROUP BY OSZ.OD_SHIPPING_ZONE_ID
		ORDER BY OSZ.OD_SHIPPING_ZONE_ID DESC
	</select>

	<!--─────────────────────────────────────────────────────────────────────
	 * description         : 주문번호 PK로 매장(배송/픽업) 정보 조회
	 * @
	 * @ 수정일                        수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.06.10        			최윤지         최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<select id="getOrderShopStoreInfo" resultType="kr.co.pulmuone.v1.order.order.dto.vo.OrderShopStoreVo">
		/* orderDetail.getOrderShopStoreInfo */
		SELECT
			   US.NM AS UR_STORE_NM
			 , FN_COMN_CODE_DIC(OSZ.DELIVERY_TYPE) AS DELIVERY_TYPE
			 , OO.STORE_SCHEDULE_NO
			 , DATE_FORMAT(OO.STORE_START_TIME, '%H:%i') AS STORE_START_TIME
			 , DATE_FORMAT(OO.STORE_END_TIME, '%H:%i') AS STORE_END_TIME
			 , DATE_FORMAT(OOD.DELIVERY_DT, '%Y-%m-%d') AS DELIVERY_DT
		FROM OD_ORDER OO
		LEFT OUTER JOIN UR_STORE US ON OO.UR_STORE_ID = US.UR_STORE_ID
		INNER JOIN OD_SHIPPING_ZONE OSZ ON OSZ.OD_ORDER_ID = OO.OD_ORDER_ID
		INNER JOIN OD_ORDER_DETL OOD ON OO.OD_ORDER_ID = OOD.OD_ORDER_ID
		WHERE OSZ.DELIVERY_TYPE IN ('DELIVERY_TYPE.SHOP_DELIVERY', 'DELIVERY_TYPE.SHOP_PICKUP')
		AND OO.OD_ORDER_ID = #{odOrderId}
		GROUP BY OO.OD_ORDER_ID
	</select>


	<!--───────────────────────────────────────────────────────────────────────
	 * description         : 주문상세 > 하이톡 스위치 여부
	────────────────────────────────────────────────────────────────────────-->
	<select id="getHitokSwitchFromPsConfig" resultType="int">
		SELECT COUNT(1) AS HITOK_SWITCH_CNT
		  FROM PS_CONFIG
		 WHERE PS_GRP_TP = 'HITOK_SWITCH'
		   AND PS_KEY = 'FDPHI_SWITCH_ON'
		   AND USE_YN = 'Y'
		   AND NOW() BETWEEN STR_TO_DATE(SPLIT_STR(PS_VAL, '|', 1), '%Y%m%d%H%i%s') AND STR_TO_DATE(SPLIT_STR(PS_VAL, '|', 2), '%Y%m%d%H%i%s')
	</select>

	<!--───────────────────────────────────────────────────────────────────────
	 * description         : 임직원 지원금 사용여부
	────────────────────────────────────────────────────────────────────────-->
	<select id="getOrderEmployeeDiscountCnt" resultType="int">
		SELECT
			COUNT(*) AS CNT
		FROM
			OD_ORDER T1
			INNER JOIN OD_ORDER_DETL T2 ON T1.OD_ORDER_ID = T2.OD_ORDER_ID
			INNER JOIN OD_ORDER_DETL_DISCOUNT T3 ON T2.OD_ORDER_DETL_ID = T3.OD_ORDER_DETL_ID
		WHERE
				T1.OD_ORDER_ID = #{odOrderId}
			AND T3.DISCOUNT_TP = 'GOODS_DISCOUNT_TP.EMPLOYEE'
	</select>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 주문상세 처리이력메세지 정보 주문상세ID 리스트 조회
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.07.07		최윤지          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<select id="getHistMsgOdOrderDetlId" resultType="kr.co.pulmuone.v1.order.order.dto.vo.OrderDetlVo">
		/* orderDetail.getHistMsgOdOrderDetlId */
		SELECT OOD.OD_ORDER_DETL_ID		/* 주문상세 PK */
			  ,OOD.DELIVERY_DT
			  ,OOD.ORDER_IF_DT
			  ,FN_COMN_CODE_DIC(OOD.GOODS_DELIVERY_TYPE) AS GOODS_DELIVERY_TYPE
			  ,FN_COMN_CODE_DIC(OOD.ORDER_STATUS_DELI_TP) AS ORDER_STATUS_DELI_TP
		  FROM OD_ORDER_DETL OOD		/* 주문 상세 */
		 WHERE OOD.OD_ORDER_ID = (SELECT OD_ORDER_ID			/* 주문 PK */
		                            FROM OD_ORDER_DETL
		                           WHERE OD_ORDER_DETL_ID = #{odOrderDetlId})
		   AND OOD.UR_WAREHOUSE_ID = (SELECT UR_WAREHOUSE_ID	/* 출고처 PK */
		                                FROM OD_ORDER_DETL
		                               WHERE OD_ORDER_DETL_ID = #{odOrderDetlId})
		   AND OOD.OD_SHIPPING_PRICE_ID = (SELECT OD_SHIPPING_PRICE_ID	/* 배송비 정책 PK */
		                                              FROM OD_ORDER_DETL
		                                             WHERE OD_ORDER_DETL_ID = #{odOrderDetlId})
		   AND (OOD.ORDER_STATUS_CD = 'IC'
		   <if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(type, "IF_BATCH")'>
			   OR (OOD.ORDER_STATUS_CD = 'DR'
			        AND EXISTS (SELECT 'X'
			   					  FROM UR_WAREHOUSE UW
			                     WHERE OOD.UR_WAREHOUSE_ID = UW.UR_WAREHOUSE_ID
			                       AND UW.ORDER_CHANGE_TP IN ('ORDER_CHANGE_TP.NOT_USE','ORDER_CHANGE_TP.ORDER_CHANGE'))
			   	  )
		   </if>
			   )
		   AND OOD.OD_ORDER_DETL_ID = #{odOrderDetlId}
		   LIMIT 1
	</select>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 주문상세 선물정보 조회
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.08.17		최윤지          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<resultMap id="getOrderPresentResultMap" type="kr.co.pulmuone.v1.order.order.dto.vo.OrderDetailPresentVo">
		<result column="PRESENT_RECEIVE_NM"     property="presentReceiveNm"/>
		<result column="PRESENT_RECEIVE_HP"     property="presentReceiveHp"/>
        <result column="PRESENT_CARD_MSG"       property="presentCardMsg"/>
        <result column="PRESENT_MSG_SEND_CNT"   property="presentMsgSendCnt"/>
        <result column="PRESENT_ORDER_STATUS"   property="presentOrderStatus"/>
	</resultMap>
	<select id="getOrderPresentInfo" parameterType="string" resultMap="getOrderPresentResultMap">
		/* orderDetail.getOrderPresentInfo */
		SELECT
			  FN_DECRYPT(PRESENT_RECEIVE_NM) AS PRESENT_RECEIVE_NM
			, FN_DECRYPT(PRESENT_RECEIVE_HP) AS PRESENT_RECEIVE_HP
			, PRESENT_CARD_MSG
			, PRESENT_MSG_SEND_CNT
			, PRESENT_ORDER_STATUS
		FROM OD_ORDER_PRESENT
		WHERE OD_ORDER_ID = #{odOrderId}
		LIMIT 1
	</select>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 주문상세 선물정보 수정
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.08.17		최윤지          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<update id="putOrderPresentInfo">
		/* orderDetail.putOrderPresentInfo */
		UPDATE OD_ORDER_PRESENT
		SET
			  PRESENT_RECEIVE_NM = FN_ENCRYPT(#{presentReceiveNm})
			, PRESENT_RECEIVE_HP = FN_ENCRYPT(#{presentReceiveHp})
			, PRESENT_CARD_MSG = #{presentCardMsg}
		WHERE
		 OD_ORDER_ID= #{odOrderId}
	</update>
</mapper>