<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.pulmuone.v1.comm.mapper.user.brand.DisplayBrandMapper">

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 전시 브랜드 관리(목록 조회, 추가, 수정)
	 * @
	 * @ 수정일			 수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.12.03          안치열         최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->

    <sql id="whereBrandRetrieve">
            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(brandSearchType)">
                <choose>
                    <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(brandSearchType, 'BRAND_CODE')">
                    	<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEquals(brandSearchValue, '')">
                        	AND DP_BRAND_ID = TRIM(#{brandSearchValue})
                        </if>
                    </when>

                    <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(brandSearchType, 'BRAND_NAME')">
                        AND LOWER(DP_BRAND_NM) LIKE CONCAT('%', LOWER(TRIM(#{brandSearchValue})), '%')
                    </when>
                </choose>
            </if>
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(searchBrandPavilionYn)">
				AND BRAND_PAVILION_YN = #{searchBrandPavilionYn}
			</if>
            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(searchUseYn)">
                AND USE_YN = UPPER(#{searchUseYn})
            </if>
    </sql>


	<resultMap id="getDisplayBrandListResultMap" type="kr.co.pulmuone.v1.user.brand.dto.vo.DisplayBrandListResultVo">
		<result column="DP_BRAND_ID"   property="dpBrandId"    />
		<result column="LOGO_URL"      property="logoUrl"      />
		<result column="S_IMG"         property="sImg"         />
		<result column="DP_BRAND_NAME"    property="dpBrandName"    />
		<result column="USE_YN"        property="useYn"        />
		<result column="BRAND_PAVILION_YN"        property="brandPavilionYn"        />
		<result column="CREATE_DATE"   property="createDate"   />
	</resultMap>

	<select id="getDisplayBrandList" resultMap="getDisplayBrandListResultMap">
	    /* displayBrand.getDisplayBrandList */

        SELECT
               BRAND.DP_BRAND_ID
             , CASE WHEN BRAND.S_IMG IS NOT NULL THEN CONCAT(#{rootPath}, BRAND.S_IMG)  END  AS  S_IMG
             , BRAND.DP_BRAND_NM AS DP_BRAND_NAME
             , CASE BRAND.USE_YN WHEN 'Y' THEN '사용' WHEN 'N' THEN '사용안함' END  AS  USE_YN
             , CASE BRAND.BRAND_PAVILION_YN WHEN 'Y' THEN '사용' WHEN 'N' THEN '사용안함' END  AS  BRAND_PAVILION_YN
             , DATE_FORMAT(BRAND.CREATE_DATE, '%Y-%m-%d') AS  CREATE_DATE
          FROM (
                SELECT
                       BRAND.DP_BRAND_ID
                     , (SELECT  CONCAT(PATH, NM)
                          FROM DP_BRAND_ATTC  ATTACH
                         WHERE ATTACH.DP_BRAND_ID  = BRAND.DP_BRAND_ID
                           AND ATTACH.BRAND_LOGO_TYPE       = 'BRAND_LOGO_TYPE.PC_MAIN'
                        LIMIT 1
                       )  AS  S_IMG
                     , BRAND.DP_BRAND_NM
                     , BRAND.USE_YN
                     , BRAND.BRAND_PAVILION_YN
                     , BRAND.CREATE_DT  AS  CREATE_DATE
                  FROM DP_BRAND  BRAND
                 WHERE 1 = 1
                <include refid="whereBrandRetrieve" />
		        ORDER BY BRAND.CREATE_DT DESC,  BRAND.DP_BRAND_ID  DESC
               ) BRAND
	</select>


	<resultMap id="searchDisplayBrandListResultMap" type="kr.co.pulmuone.v1.user.brand.dto.vo.DisplayBrandListResultVo">
		<result column="DP_BRAND_ID"   property="dpBrandId"    />
		<result column="DP_BRAND_NAME"    property="dpBrandName"    />
	</resultMap>


	<select id="searchDisplayBrandList" resultMap="searchDisplayBrandListResultMap">
	    /* displayBrand.searchDisplayBrandList */


		       SELECT
		              BRAND.DP_BRAND_ID
		            , BRAND.DP_BRAND_NM   AS  DP_BRAND_NAME
		         FROM DP_BRAND  BRAND
		        WHERE 1 = 1
				AND USE_YN = 'Y'
                <include refid="whereBrandRetrieve" />

		        ORDER BY BRAND.CREATE_DT DESC,  BRAND.DP_BRAND_ID  DESC


	</select>


    <!-- 브랜드 1건 조회 -->
	<resultMap id="getDisplayBrandResultMap" type="kr.co.pulmuone.v1.user.brand.dto.vo.DisplayBrandResultVo">
		<result column="DP_BRAND_ID"    property="dpBrandId"   />
		<result column="DP_BRAND_NAME"     property="dpBrandName"   />
		<result column="USE_YN"         property="useYn"       />
		<result column="BRAND_PAVILION_YN"     property="brandPavilionYn"   />
		<result column="SUB_PATH"       property="subPath"     />
		<result column="ORIGIN_NAME_PC_MAIN"        property="originNamePcMain"     />
		<result column="ORIGIN_NAME_PC_MAIN_OVER"        property="originNamePcMainOver"     />
		<result column="ORIGIN_NAME_MOBILE_MAIN"    property="originNameMobileMain" />
		<result column="ORIGIN_NAME_MOBILE_MAIN_OVER"    property="originNameMobileMainOver" />
		<result column="ORIGIN_NAME_TITLE_PC"    property="originNameTitleBannerPc" />
		<result column="ORIGIN_NAME_TITLE_MOBILE"    property="originNameTitleBannerMobile" />
		<result column="PHYSICAL_FILE_NAME_PC_MAIN"        property="physicalFileNamePcMain"     />
		<result column="PHYSICAL_FILE_NAME_PC_MAIN_OVER"        property="physicalFileNamePcMainOver"     />
		<result column="PHYSICAL_FILE_NAME_MOBILE_MAIN"    property="physicalFileNameMobileMain" />
		<result column="PHYSICAL_FILE_NAME_MOBILE_MAIN_OVER"    property="physicalFileNameMobileMainOver" />
		<result column="PHYSICAL_FILE_NAME_TITLE_PC"        property="physicalFileNameTitleBannerPc"     />
		<result column="PHYSICAL_FILE_NAME_TITLE_MOBILE"        property="physicalFileNameTitleBannerMobile"     />
		<result column="SEQ_PC_MAIN"                property="seqPcMain"     />
		<result column="SEQ_PC_MAIN_OVER"                property="seqPcMainOver"     />
		<result column="SEQ_MOBILE_MAIN"            property="seqMobileMain" />
		<result column="SEQ_MOBILE_MAIN_OVER"            property="seqMobileMainOver" />
		<result column="SEQ_TITLE_PC"            property="seqTitleBannerPc" />
		<result column="SEQ_TITLE_MOBILE"            property="seqTitleBannerMobile" />
		<result column="logo_url_PC_MAIN"       property="logoUrlPcMainLogo"     />
		<result column="logo_url_PC_MAIN_OVER"       property="logoUrlPcMainOverLogo"     />
		<result column="logo_url_MOBILE_MAIN"   property="logoUrlMobileMainLogo" />
		<result column="logo_url_MOBILE_MAIN_OVER"   property="logoUrlMobileMainOverLogo" />
		<result column="logo_url_TITLE_PC"   property="logoUrlTitleBannerPc" />
		<result column="logo_url_TITLE_MOBILE"   property="logoUrlTitleBannerMobile" />
	</resultMap>

	<select id="getDisplayBrand" resultMap="getDisplayBrandResultMap">
	    /* displayBrand.getDisplayBrand */

        SELECT BRAND.DP_BRAND_ID
             , MIN(BRAND.DP_BRAND_NM)     AS  DP_BRAND_NAME
             , MIN(BRAND.USE_YN)          AS  USE_YN
             , MIN(BRAND.BRAND_PAVILION_YN) AS BRAND_PAVILION_YN
             , MIN(BRAND.PATH)            AS  SUB_PATH
             , MIN(CASE BRAND.BRAND_LOGO_TYPE WHEN 'BRAND_LOGO_TYPE.PC_MAIN'          THEN BRAND.ORIGIN_NM END)  AS  ORIGIN_NAME_PC_MAIN
             , MIN(CASE BRAND.BRAND_LOGO_TYPE WHEN 'BRAND_LOGO_TYPE.PC_MAIN_OVER'     THEN BRAND.ORIGIN_NM END)  AS  ORIGIN_NAME_PC_MAIN_OVER
             , MIN(CASE BRAND.BRAND_LOGO_TYPE WHEN 'BRAND_LOGO_TYPE.MOBILE_MAIN'      THEN BRAND.ORIGIN_NM END)  AS  ORIGIN_NAME_MOBILE_MAIN
             , MIN(CASE BRAND.BRAND_LOGO_TYPE WHEN 'BRAND_LOGO_TYPE.MOBILE_MAIN_OVER' THEN BRAND.ORIGIN_NM END)  AS  ORIGIN_NAME_MOBILE_MAIN_OVER
             , MIN(CASE BRAND.BRAND_LOGO_TYPE WHEN 'BRAND_LOGO_TYPE.TITLE_BANNER_PC'      THEN BRAND.ORIGIN_NM END)  AS  ORIGIN_NAME_TITLE_PC
             , MIN(CASE BRAND.BRAND_LOGO_TYPE WHEN 'BRAND_LOGO_TYPE.TITLE_BANNER_MOBILE'      THEN BRAND.ORIGIN_NM END)  AS  ORIGIN_NAME_TITLE_MOBILE
             , MIN(CASE BRAND.BRAND_LOGO_TYPE WHEN 'BRAND_LOGO_TYPE.PC_MAIN'          THEN BRAND.NM END)  AS  PHYSICAL_FILE_NAME_PC_MAIN
             , MIN(CASE BRAND.BRAND_LOGO_TYPE WHEN 'BRAND_LOGO_TYPE.PC_MAIN_OVER'     THEN BRAND.NM END)  AS  PHYSICAL_FILE_NAME_PC_MAIN_OVER
             , MIN(CASE BRAND.BRAND_LOGO_TYPE WHEN 'BRAND_LOGO_TYPE.MOBILE_MAIN'      THEN BRAND.NM END)  AS  PHYSICAL_FILE_NAME_MOBILE_MAIN
             , MIN(CASE BRAND.BRAND_LOGO_TYPE WHEN 'BRAND_LOGO_TYPE.MOBILE_MAIN_OVER' THEN BRAND.NM END)  AS  PHYSICAL_FILE_NAME_MOBILE_MAIN_OVER
             , MIN(CASE BRAND.BRAND_LOGO_TYPE WHEN 'BRAND_LOGO_TYPE.TITLE_BANNER_PC'      THEN BRAND.NM END)  AS  PHYSICAL_FILE_NAME_TITLE_PC
             , MIN(CASE BRAND.BRAND_LOGO_TYPE WHEN 'BRAND_LOGO_TYPE.TITLE_BANNER_MOBILE'      THEN BRAND.NM END)  AS  PHYSICAL_FILE_NAME_TITLE_MOBILE
             , MIN(CASE BRAND.BRAND_LOGO_TYPE WHEN 'BRAND_LOGO_TYPE.PC_MAIN'          THEN BRAND.DP_BRAND_ATTC_ID END)  AS  SEQ_PC_MAIN
             , MIN(CASE BRAND.BRAND_LOGO_TYPE WHEN 'BRAND_LOGO_TYPE.PC_MAIN_OVER'     THEN BRAND.DP_BRAND_ATTC_ID END)  AS  SEQ_PC_MAIN_OVER
             , MIN(CASE BRAND.BRAND_LOGO_TYPE WHEN 'BRAND_LOGO_TYPE.MOBILE_MAIN'      THEN BRAND.DP_BRAND_ATTC_ID END)  AS  SEQ_MOBILE_MAIN
             , MIN(CASE BRAND.BRAND_LOGO_TYPE WHEN 'BRAND_LOGO_TYPE.MOBILE_MAIN_OVER' THEN BRAND.DP_BRAND_ATTC_ID END)  AS  SEQ_MOBILE_MAIN_OVER
             , MIN(CASE BRAND.BRAND_LOGO_TYPE WHEN 'BRAND_LOGO_TYPE.TITLE_BANNER_PC'      THEN BRAND.DP_BRAND_ATTC_ID END)  AS  SEQ_TITLE_PC
             , MIN(CASE BRAND.BRAND_LOGO_TYPE WHEN 'BRAND_LOGO_TYPE.TITLE_BANNER_MOBILE'      THEN BRAND.DP_BRAND_ATTC_ID END)  AS  SEQ_TITLE_MOBILE
             , MIN(CASE BRAND.BRAND_LOGO_TYPE WHEN 'BRAND_LOGO_TYPE.PC_MAIN'          THEN BRAND.LOGO_URL END)  AS  LOGO_URL_PC_MAIN
             , MIN(CASE BRAND.BRAND_LOGO_TYPE WHEN 'BRAND_LOGO_TYPE.PC_MAIN_OVER'     THEN BRAND.LOGO_URL END)  AS  LOGO_URL_PC_MAIN_OVER
             , MIN(CASE BRAND.BRAND_LOGO_TYPE WHEN 'BRAND_LOGO_TYPE.MOBILE_MAIN'      THEN BRAND.LOGO_URL END)  AS  LOGO_URL_MOBILE_MAIN
             , MIN(CASE BRAND.BRAND_LOGO_TYPE WHEN 'BRAND_LOGO_TYPE.MOBILE_MAIN_OVER' THEN BRAND.LOGO_URL END)  AS  LOGO_URL_MOBILE_MAIN_OVER
             , MIN(CASE BRAND.BRAND_LOGO_TYPE WHEN 'BRAND_LOGO_TYPE.TITLE_BANNER_PC'      THEN BRAND.LOGO_URL END)  AS  LOGO_URL_TITLE_PC
             , MIN(CASE BRAND.BRAND_LOGO_TYPE WHEN 'BRAND_LOGO_TYPE.TITLE_BANNER_MOBILE'      THEN BRAND.LOGO_URL END)  AS  LOGO_URL_TITLE_MOBILE
          FROM (
                SELECT BRAND.DP_BRAND_ID
                     , BRAND.DP_BRAND_NM
                     , BRAND.USE_YN
                     , BRAND.BRAND_PAVILION_YN
                     , ATTACH.DP_BRAND_ATTC_ID
                     , ATTACH.BRAND_LOGO_TYPE
                     , ATTACH.PATH
                     , ATTACH.NM
                     , CASE WHEN CONCAT(ATTACH.PATH, ATTACH.NM) IS NOT NULL THEN CONCAT(#{rootPath}, ATTACH.PATH, ATTACH.NM)  END  AS  LOGO_URL
                     , ATTACH.ORIGIN_NM
                  FROM DP_BRAND  BRAND
                  LEFT OUTER JOIN  DP_BRAND_ATTC  ATTACH
                    ON BRAND.DP_BRAND_ID = ATTACH.DP_BRAND_ID
                 WHERE BRAND.DP_BRAND_ID = TRIM(#{dpBrandId})
               )  BRAND
        GROUP BY BRAND.DP_BRAND_ID
	</select>

	<resultMap id="getDpIdListResultMap" type="kr.co.pulmuone.v1.user.brand.dto.vo.DisplayBrandResultVo">
		<result column="DP_BRAND_ID"   property="dpBrandId"    />
	</resultMap>
	<select id="getDpIdList" resultMap="getDpIdListResultMap">
	    /* BrandMapper.getDpIdList */

				SELECT A.DP_BRAND_ID
				FROM(
					SELECT DISTINCT J.DP_BRAND_ID
	                FROM IL_GOODS G
	                JOIN IL_ITEM I ON I.IL_ITEM_CD = G.IL_ITEM_CD AND I.DP_BRAND_ID IS NOT NULL
	                LEFT JOIN  DP_BRAND J ON I.DP_BRAND_ID = J.DP_BRAND_ID
                ) AS A
                WHERE A.DP_BRAND_ID IS NOT NULL

	</select>


	<!-- <select id="duplicateBrandCount" resultType="int">
        /* displayBrand.duplicateBrandCount */
        SELECT COUNT(1)
          FROM DP_BRAND
         WHERE DP_BRAND_ID = TRIM(#{dpBrandId})
	</select> -->


    <insert id="addDisplayBrandAttachfileMapping">
        /* displayBrand.addDisplayBrandAttachfileMapping */
        INSERT INTO DP_BRAND_ATTC
               (
                  DP_BRAND_ID
                , BRAND_LOGO_TYPE
                , PATH
                , NM
                , ORIGIN_NM
                , CREATE_DT
                , CREATE_ID
               )
        values (
                  TRIM(#{dpBrandId})
                , UPPER(trim(#{imageType}))
                , TRIM(#{subPath})
                , TRIM(#{physicalName})
                , TRIM(#{originName})
                , NOW()
                , #{userVo.userId}
               )
	</insert>


    <insert id="addDisplayBrand">
        /* displayBrand.addDisplayBrand */
        INSERT INTO DP_BRAND
               (
                  DP_BRAND_NM
                , USE_YN
                , BRAND_PAVILION_YN
                , CREATE_DT
                , CREATE_ID
               )
        values (
                  TRIM(#{dpBrandName})
                , UPPER(TRIM(#{useYn}))
                , UPPER(TRIM(#{brandPavilionYn}))
                , NOW()
                , #{userVo.userId}
               )

        <selectKey resultType="String" keyProperty="dpBrandId" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
	</insert>


    <update id="putDisplayBrand">
        /* displayBrand.putDisplayBrand */
        UPDATE DP_BRAND
           SET DP_BRAND_NM       = trim(#{dpBrandName})
             , USE_YN         = upper(trim(#{useYn}))
             , BRAND_PAVILION_YN         = upper(trim(#{brandPavilionYn}))
             , MODIFY_ID      = #{userVo.userId}
             , MODIFY_DT      = now()
         where DP_BRAND_ID = trim(#{dpBrandId})
    </update>


 <!--    <update id="putDisplayBrandAttachFileInfo">
        /* displayBrand.putDisplayBrandAttachFileInfo */
        UPDATE DP_BRAND_ATTC
           SET DP_BRAND_NM    = TRIM(#{brandName})
             , USE_YN         = UPPER(TRIM(#{useYn}))
             , MODIFY_ID      = #{userVo.userId}
             , MODIFY_DT      = NOW()
         WHERE SEQ = #{seq}
    </update>
 -->

    <delete id="delDisplayBrandLogoMappingInfo">
        /* displayBrand.delDisplayBrandLogoMappingInfo */
        DELETE FROM DP_BRAND_ATTC
         WHERE DP_BRAND_ID = #{dpBrandId}
         AND BRAND_LOGO_TYPE = #{imageType}
    </delete>


</mapper>
