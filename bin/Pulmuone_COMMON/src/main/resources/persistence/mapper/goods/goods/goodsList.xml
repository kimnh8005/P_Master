<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.pulmuone.v1.comm.mapper.goods.goods.GoodsListMapper">

    <!-- 상품목록 resultMap -->
    <resultMap id="getGoodsListResultMap" type="kr.co.pulmuone.v1.goods.goods.dto.vo.GoodsVo">
        <result column="GOODS_ID" property="goodsId" />
        <result column="ITEM_CODE" property="itemCode" />
        <result column="ITEM_BARCODE" property="itemBarcode" />
        <result column="ERP_ITEM_BARCODE" property="erpItemBarcode" />
        <result column="ERP_IF_YN" property="erpIfYn" />
        <result column="ERP_IF_YN_NAME" property="erpIfYnName" />
        <result column="ITEM_TP" property="itemTp" />
        <result column="ITEM_TP_NM" property="itemTpNm" />
        <result column="ERP_O2O_EXPOSURE_TP" property="erpO2oExposureTp" />
        <result column="ERP_PRODUCT_TP" property="erpProductTp" />
        <result column="PROMOTION_NAME" property="promotionName" />
        <result column="GOODS_NAME" property="goodsName" />
        <result column="GOODS_CREATE_DATE" property="goodsCreateDate" />
        <result column="GOODS_MODIFY_DATE" property="goodsModifyDate" />
        <result column="GOODS_SYSTEM_MODIFY_DATE" property="goodsSystemModifyDate" />
        <result column="PROMOTION_START_DATE" property="promotionStartDate" />
        <result column="PROMOTION_END_DATE" property="promotionEndDate" />
        <result column="GOODS_TYPE_CODE" property="goodsTypeCode" />
        <result column="GOODS_TYPE_NAME" property="goodsTypeName" />
        <result column="PURCHASE_MEMBER_YN" property="purchaseMemberYn" />
        <result column="PURCHASE_EMPLOYEE_YN" property="purchaseEmployeeYn" />
        <result column="PURCHASE_NONMEMBER_YN" property="purchaseNonmemberYn" />
        <result column="DISPLAY_WEB_PC_YN" property="displayWebPcYn" />
        <result column="DISPLAY_WEB_MOBILE_YN" property="displayWebMobileYn" />
        <result column="DISPLAY_APP_YN" property="displayAppYn" />
        <result column="SALE_TYPE_CODE" property="saleTypeCode" />
        <result column="SALE_TYPE_NAME" property="saleTypeName" />
        <result column="SALE_STATUS_CODE" property="saleStatusCode" />
        <result column="SALE_STATUS_NAME" property="saleStatusName" />
        <result column="DISPLAY_YN" property="displayYn" />
        <result column="DISPLAY_YN_NM" property="displayYnNm" />
        <result column="SALE_START_DATE" property="saleStartDate" />
        <result column="SALE_END_DATE" property="saleEndDate" />
        <result column="CATEGORY_STANDARD_ID" property="categoryStandardId" />
        <result column="CATEGORY_STANDARD_DEPTH_NAME" property="categoryStandardDepthName" />
        <result column="CATEGORY_ID" property="categoryId" />
        <result column="CATEGORY_DEPTH_NAME" property="categoryDepthName" />
        <result column="WAREHOUSE_ID" property="warehouseId" />
        <result column="WAREHOUSE_NAME" property="warehouseName" />
        <result column="SUPPLIER_ID" property="supplierId" />
        <result column="SUPPLIER_COMPANY_ID" property="supplierCompanyId" />
        <result column="SUPPLIER_NAME" property="supplierName" />
        <result column="BRAND_ID" property="brandId" />
        <result column="BRAND_NAME" property="brandName" />
        <result column="ERP_BRAND_NAME" property="erpBrandName" />
        <result column="STORAGE_METHOD_TYPE_CODE" property="storageMethodTypeCode" />
        <result column="STORAGE_METHOD_TYPE_NAME" property="storageMethodTypeName" />
        <result column="ERP_STOCK_IF_YN" property="erpStockIfYn" />
        <result column="ADDITIONAL_GOODS_YN" property="additionalGoodsYn" />
        <result column="COUPON_USE_YN" property="couponUseYn" />
        <result column="MD_RECOMMEND_YN" property="mdRecommendYn" />
        <result column="GOODS_PRICE_ID" property="goodsPriceId" />
        <result column="ITEM_PRICE_ID" property="itemPriceId" />
        <result column="GOODS_DISCOUNT_ID" property="goodsDiscountId" />
        <result column="STANDARD_PRICE" property="standardPrice" />
        <result column="RECOMMENDED_PRICE" property="recommendedPrice" />
        <result column="SALE_PRICE" property="salePrice" />
        <result column="DISCOUNT_TYPE_CODE" property="discountTypeCode" />
        <result column="DISCOUNT_TYPE_NAME" property="discountTypeName" />
        <result column="PRICE_START_DATE" property="priceStartDate" />
        <result column="PRICE_END_DATE" property="priceEndDate" />
        <result column="NORMAL_STOCK_COUNT" property="normalStockCount" />
        <result column="IMMINENT_STOCK_COUNT" property="imminentStockCount" />
        <result column="DISPOSAL_STOCK_COUNT" property="disposalStockCount" />
        <result column="GOODS_IMAGE_PATH" property="goodsImagePath" />
        <result column="DP_BRAND_NAME" property="dpBrandName" />

        <result column="UR_SUPPLIER_WAREHOUSE_ID" property="urSupplierWarehouseId" />
        <result column="IL_ITEM_WAREHOUSE_ID" property="ilItemWarehouseId" />
        <result column="PRE_ORDER_YN" property="preOrderYn" />
        <result column="IL_ITEM_STOCK_ID" property="ilItemStockId" />
        <result column="ERP_CTGRY_LV1_ID" property="erpCtgryLv1Id" />
        <result column="STOCK_CLOSING_COUNT" property="stockClosingCount" />
        <result column="STOCK_CONFIRMED_COUNT" property="stockConfirmedCount" />
        <result column="STOCK_SCHEDULED_COUNT" property="stockScheduledCount" />
        <result column="STOCK_OFFLINE_COUNT" property="stockOfflineCount" />

        <result column="WMS_COUNT" property="wmsCount" />
        <result column="EXTINCTION_YN"	property="extinctionYn"/>
        <result column="STOCK_ORDER_YN"	property="stockOrderYn"/>
        <result column="PRE_ORDER_NM"	property="preOrderNm"/>
        <result column="GOODS_OUTMALL_SALE_STAT"	property="goodsOutMallSaleStat"/>
		<result column="GOODS_OUTMALL_SALE_STAT_NAME"	property="goodsOutMallSaleStatName"/>
		<result column="NOT_IF_STOCK_CNT"	property="notIfStockCnt"/>
		<result column="ITEM_NM"	property="itemNm"/>
		<result column="UNLIMIT_STOCK_YN"	property="unlimitStockYn"/>
        <result column="SEARCH_KYWRD" property="searchKywrd"/>
        <result column="ERP_CATEGORY" property="erpCategory"/>
        <result column="ERP_CATEGORY_1" property="erpCategory1"/>
        <result column="ERP_CATEGORY_2" property="erpCategory2"/>
        <result column="ERP_CATEGORY_3" property="erpCategory3"/>
        <result column="ERP_CATEGORY_4" property="erpCategory4"/>
        <result column="ERP_ITEM_GRP" property="erpItemGrp"/>
        <result column="ERP_STORAGE_METHOD" property="erpStorageMethod"/>
        <result column="ERP_ORIGIN_NM" property="erpOriginNm" />
        <result column="BOS_ORIGIN_NM" property="bosOriginNm" />
        <result column="DISTRIBUTION_PERIOD" property="distributionPeriod"/>
        <result column="BOX_VOLUME" property="boxVolume" />
        <result column="PCS_PER_BOX" property="pcsPerBox" />
        <result column="UOM" property="uom" />
        <result column="SIZE_PER_PACKAGE" property="sizePerPackage" />
        <result column="SIZE_UNIT" property="sizeUnit" />
        <result column="QTY_PER_PACKAGE" property="qtyPerPackage" />
        <result column="PACKAGE_UNIT" property="packageUnit" />
        <result column="PDM_GROUP_CD" property="pdmGroupCd" />
        <result column="PURCHASE_TARGET" property="purchaseTarget" />
        <result column="DISPLAY_TARGET" property="displayTarget" />
        <result column="TAX_NM" property="taxNm" />
        <result column="RENTAL_FEE_PER_MONTH" property="rentalFeePerMonth" />
        <result column="RENTAL_DUE_MONTH" property="rentalDueMonth" />
        <result column="RENTAL_DEPOSIT" property="rentalDeposit" />
        <result column="RENTAL_INSTALL_FEE" property="rentalInstallFee" />
        <result column="RENTAL_REGIST_FEE" property="rentalRegistFee" />
        <result column="GOODS_DAILY_ALLERGY_YN" property="goodsDailyAllergyYn" />
        <result column="GOODS_DAILY_BULK_YN" property="goodsDailyBulkYn" />
        <result column="SPEC_MASTER_NM" property="specMasterNm" />
        <result column="NUTRITION_DISP_YN" property="nutritionDispYn" />
        <result column="RETURN_PERIOD_NM" property="returnPeriodNm" />
        <result column="UNDELIVERABLE_AREA_TP_NM" property="undeliverableAreaTpNm" />
        <result column="VIDEO_URL" property="videoUrl" />
        <result column="WAREHOUSE_ADDRESS" property="warehouseAddress"/>
        <result column="ERP_PO_TYPE" property="erpPoType"/>
        <result column="PO_TP_NM" property="poTpNm"/>
        <result column="SHIPPING_TEMPLATE_NAME" property="shippingTemplateName"/>
        <result column="SALE_SHOP_YN_NM" property="saleShopYnNm"/>
        <result column="GOODS_DAILY_CYCLE" property="goodsDailyCycle"/>
        <result column="ERP_ITEM_NM" property="erpItemIm"/>
        <result column="DISCOUNT_RATIO" property="discountRatio"/>
        <result column="DISCOUNT_AMT" property="discountAmt"/>
        <result column="EMPL_PRICE_START_DATE" property="emplPriceStartDate"/>
        <result column="EMPL_PRICE_END_DATE" property="emplPriceEndDate"/>
        <result column="EMPL_DISCOUNT_TYPE_NAME" property="emplDiscountTypeName"/>
        <result column="EMPL_DISCOUNT_RATIO" property="emplDiscountRatio"/>
        <result column="EMPL_DISCOUNT_SALE_PRICE" property="emplDiscountSalePrice"/>
        <result column="MALL_IN_MALL_CATEGORY_NM" property="mallInMallCategoryNm"/>
        <result column="GOODS_REGIST_APPR_REQ_USER_ID" property="goodsRegistApprReqUserId"/>
        <result column="GOODS_REGIST_APPR_STAT" property="goodsRegistApprStat"/>
        <result column="GOODS_REGIST_APPR_STAT_NM" property="goodsRegistApprStatNm"/>
        <result column="GOODS_CLIENT_APPR_REQ_USER_ID" property="goodsClientApprReqUserId"/>
        <result column="GOODS_CLIENT_APPR_STAT" property="goodsClientApprStat"/>
        <result column="GOODS_CLIENT_APPR_STAT_NM" property="goodsClientApprStatNm"/>
        <result column="ITEM_CLIENT_APPR_REQ_USER_ID" property="itemClientApprReqUserId"/>
        <result column="ITEM_CLIENT_APPR_STAT" property="itemClientApprStat"/>
        <result column="ITEM_CLIENT_APPR_STAT_NM" property="itemClientApprStatNm"/>
        <result column="APPR_STAT_NM" property="approvalStatusName"/>
        <result column="PRESENT_YN" property="presentYn"/>

        <result column="CUTOFF_TIME" property="cutoffTime"/>
        <result column="SHIPPING_PATTERN_TITLE" property="shippingPatternTitle"/>
    </resultMap>

    <!--───────────────────────────────────────────────────────────────────────
     * description      : 상품목록 조회
     * @
     * @ 수정일         수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2020.10.06     손진구          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <select id="getGoodsList" resultMap="getGoodsListResultMap">
        /* goodsList.getGoodsList */
        SELECT X1.GOODS_ID /* 상품 ID */
             , X1.ITEM_CODE /* 품목코드 */
             , X1.ITEM_BARCODE /* 품목바코드 */
             , X1.ERP_IF_YN
             , IF(X1.ERP_IF_YN = 'Y', '연동', '미연동') AS ERP_IF_YN_NAME /* ERP 연동여부명 */
             , X1.ITEM_TP
             , CASE
             	WHEN X1.GOODS_TYPE_CODE = 'GOODS_TYPE.PACKAGE' AND X1.PACKAGE_UNIT_DISP_YN = 'Y' THEN CONCAT(X1.GOODS_NAME, ' (', X1.PACKAGE_UNIT_DESC, ')')
             	WHEN X1.GOODS_TYPE_CODE = 'GOODS_TYPE.PACKAGE' AND X1.PACKAGE_UNIT_DISP_YN = 'N' THEN X1.GOODS_NAME
             	WHEN X1.QTY_PER_PACKAGE = '' THEN CONCAT(X1.GOODS_NAME, ' (', X1.SIZE_PER_PACKAGE, X1.SIZE_UNIT, ')')
             	ELSE CONCAT(X1.GOODS_NAME, ' (', X1.SIZE_PER_PACKAGE, X1.SIZE_UNIT, 'X', X1.QTY_PER_PACKAGE, X1.PACKAGE_UNIT, ')')
             END AS GOODS_NAME /* 상품명 */
             , DATE_FORMAT(X1.CREATE_DT, '%Y-%m-%d %H:%i:%s') AS GOODS_CREATE_DATE /* 상품등록일 */
             , DATE_FORMAT(X1.MODIFY_DT, '%Y-%m-%d %H:%i:%s') AS GOODS_MODIFY_DATE /* 상품수정일 */
             , CASE WHEN (NOW() BETWEEN X1.PROMOTION_NM_START_DT AND X1.PROMOTION_NM_END_DT)
                    THEN X1.PROMOTION_NM
               ELSE ''
                END PROMOTION_NAME /* 프로모션명 */
             , DATE_FORMAT(X1.PROMOTION_NM_START_DT, '%Y-%m-%d %H:%i:%s') AS PROMOTION_START_DATE /* 프로모션 시작일 */
             , DATE_FORMAT(X1.PROMOTION_NM_END_DT, '%Y-%m-%d %H:%i:%s') AS PROMOTION_END_DATE /* 프로모션 종료일 */
             , X1.GOODS_TYPE_CODE /* 상품유형코드 */
             , FN_COMN_CODE_DIC(X1.GOODS_TYPE_CODE) AS GOODS_TYPE_NAME /* 상품유형명 */
             , X1.PURCHASE_MEMBER_YN /* 회원 구매여부 */
             , X1.PURCHASE_EMPLOYEE_YN /* 임직원 구매여부 */
             , X1.PURCHASE_NONMEMBER_YN /* 비회원 구매여부 */
             , X1.DISPLAY_WEB_PC_YN /* WEB PC 전시여부 */
             , X1.DISPLAY_WEB_MOBILE_YN /* WEB MOBILE 전시여부 */
             , X1.DISPLAY_APP_YN /* APP 전시여부 */
             , X1.SALE_TYPE_CODE /* 판매유형코드 */
             , FN_COMN_CODE_DIC(X1.SALE_TYPE_CODE) AS SALE_TYPE_NAME /* 판매유형명 */
             , X1.SALE_STATUS_CODE /* 판매상태코드 */
             , FN_COMN_CODE_DIC(X1.SALE_STATUS_CODE) AS SALE_STATUS_NAME /* 판매상태명 */
             , X1.DISPLAY_YN /* 전시유무 */
             , DATE_FORMAT(X1.SALE_START_DT, '%Y-%m-%d %H:%i:%s') AS SALE_START_DATE /* 판매시작일 */
             , DATE_FORMAT(X1.SALE_END_DT, '%Y-%m-%d %H:%i:%s') AS SALE_END_DATE /* 판매종료일 */
             , X1.CATEGORY_STANDARD_ID /* 표준카테고리 ID */
             , FN_CTGRY_STD_FULL_NAME(X1.CATEGORY_STANDARD_ID) AS CATEGORY_STANDARD_DEPTH_NAME /* 표준카테고리명 */
             , X1.CATEGORY_ID /* 전시카테고리 ID */
             , (CASE WHEN X1.CATEGORY_ID IS NULL
                     THEN ''
                ELSE FN_CTGRY_FULL_NAME(X1.CATEGORY_ID)
                 END) AS CATEGORY_DEPTH_NAME /* 전시카테고리명 */
             , X1.WAREHOUSE_ID /* 출고처 ID */
             , X1.WAREHOUSE_NAME /* 출고처명 */
             , X1.SUPPLIER_ID /* 공급처 ID */
             , X1.SUPPLIER_COMPANY_ID /* 공급처 회사 ID */
             , X1.SUPPLIER_NAME /* 공급처명 */
             , X1.BRAND_ID /* 브랜드 ID */
             , X1.BRAND_NAME /* 브랜드명 */
             , X1.DP_BRAND_ID 		/* 전시 브랜드 ID */
             , X1.DP_BRAND_NAME 	/* 전시 브랜드명 */
             , X1.GOODS_OUTMALL_SALE_STAT
             , FN_COMN_CODE_DIC(X1.GOODS_OUTMALL_SALE_STAT) AS GOODS_OUTMALL_SALE_STAT_NAME
             , X1.STORAGE_METHOD_TYPE_CODE /* 보관방법코드 */
             , FN_COMN_CODE_DIC(X1.STORAGE_METHOD_TYPE_CODE) AS STORAGE_METHOD_TYPE_NAME /* 보관방법명 */
             , X1.ERP_STOCK_IF_YN /* 재고연동유무 */
             , X1.ADDITIONAL_GOODS_YN /* 추가상품 유무 */
             , X1.COUPON_USE_YN /* 쿠폰사용유무 */
             , X1.MD_RECOMMEND_YN /* MD추천유무 */
             , X1.GOODS_PRICE_ID /* 상품가격 ID */
             , GP.IL_ITEM_PRICE_ID AS ITEM_PRICE_ID /* 품목가격 ID */
             , GP.IL_GOODS_DISCOUNT_ID AS GOODS_DISCOUNT_ID /* 상품할인 ID */
             , GP.STANDARD_PRICE /* 원가 */
             , GP.RECOMMENDED_PRICE /* 정상가 */
             , GP.SALE_PRICE /* 판매가 */
             , GP.DISCOUNT_TP AS DISCOUNT_TYPE_CODE /* 할인유형코드 */
             , FN_COMN_CODE_DIC(GP.DISCOUNT_TP) AS DISCOUNT_TYPE_NAME /* 할인유형명 */
             , DATE_FORMAT(GP.PRICE_START_DT, '%Y-%m-%d %H:%i:%s') AS PRICE_START_DATE /* 가격 시작일 */
             , DATE_FORMAT(GP.PRICE_END_DT, '%Y-%m-%d %H:%i:%s') AS PRICE_END_DATE /* 가격 종료일 */
             , 0 AS NORMAL_STOCK_COUNT /* 정상재고갯수 */    /* TODO : 재고 미구현으로 인하여 하드코딩 */
             , 0 AS IMMINENT_STOCK_COUNT /* 임박재고갯수 */  /* TODO : 재고 미구현으로 인하여 하드코딩 */
             , 0 AS DISPOSAL_STOCK_COUNT /* 폐기임박갯수 */  /* TODO : 재고 미구현으로 인하여 하드코딩 */
             , X1.GOODS_PACKAGE_IMG_TP
			 , CASE WHEN X1.GOODS_TYPE_CODE = 'GOODS_TYPE.PACKAGE'
             			THEN
             				CASE
             					WHEN X1.GOODS_PACKAGE_IMG_TP = 'GOODS_PACKAGE_IMG_TP.PACKAGE_GOODS' OR  X1.GOODS_PACKAGE_IMG_TP = 'GOODS_PACKAGE_IMG_TP.MIXED'
             						THEN (SELECT II.C_IMG
		                  					FROM IL_GOODS_IMG II
		                 				WHERE II.IL_GOODS_ID = X1.GOODS_ID
		                   				AND II.BASIC_YN = 'Y'
		                 				LIMIT 1)
             					WHEN X1.GOODS_PACKAGE_IMG_TP = 'GOODS_PACKAGE_IMG_TP.NORMAL_GOODS'
             						THEN
             							(SELECT II.C_IMG
		                  					FROM IL_ITEM_IMG II
		                 				WHERE II.IL_ITEM_CD = (SELECT IL_ITEM_CD FROM IL_GOODS WHERE IL_GOODS_ID = (SELECT IL_GOODS_ID FROM IL_GOODS_PACKAGE_GOODS_MAPPING WHERE BASE_GOODS_YN = 'Y' AND IL_GOODS_ID = X1.GOODS_ID))
		                   				AND II.BASIC_YN = 'Y'
		                 				LIMIT 1)
             				END
             		ELSE
             			(SELECT II.C_IMG
		                  FROM IL_ITEM_IMG II
		                 WHERE II.IL_ITEM_CD = X1.ITEM_CODE
		                   AND II.BASIC_YN = 'Y'
		                 LIMIT 1)
		            END GOODS_IMAGE_PATH /* 상품이미지경로 */
             , X1.UR_SUPPLIER_WAREHOUSE_ID
             , X1.IL_ITEM_WAREHOUSE_ID
             , X1.PRE_ORDER_YN
             , X1.ERP_CTGRY_LV1_ID
             , X1.NOT_IF_STOCK_CNT
             , X1.STOCK_ORDER_YN
             , X1.STOCK_CLOSING_COUNT
             , X1.STOCK_CONFIRMED_COUNT
             , X1.STOCK_SCHEDULED_COUNT
             , X1.STOCK_OFFLINE_COUNT
             , CASE WHEN X1.GOODS_TYPE_CODE = 'GOODS_TYPE.PACKAGE' THEN IFNULL(X1.PACKAGE_EXTINCTION_YN, 'N')
               ELSE X1.EXTINCTION_YN END AS EXTINCTION_YN
             , X1.PRE_ORDER_NM
             , X1.IL_ITEM_STOCK_ID
             , X1.ITEM_NM
             , X1.UNLIMIT_STOCK_YN
			, X1.GOODS_REGIST_APPR_REQ_USER_ID							/* 상품 등록 승인 요청자 ID */
			, X1.GOODS_REGIST_APPR_STAT									/* 상품 등록 승인 상태 코드 */
			, X1.GOODS_REGIST_APPR_STAT_NM								/* 상품 등록 승인 상태명 */
			, X1.GOODS_CLIENT_APPR_REQ_USER_ID							/* 상품 거래처 수정 승인 요청자 ID */
			, X1.GOODS_CLIENT_APPR_STAT									/* 상품 거래처 수정 승인 상태 코드 */
			, X1.GOODS_CLIENT_APPR_STAT_NM								/* 상품 거래처 수정 승인 상태명 */
			, X1.ITEM_CLIENT_APPR_REQ_USER_ID							/* 품목 거래처 수정 승인 요청자 ID */
			, X1.ITEM_CLIENT_APPR_STAT									/* 품목 거래처 수정 승인 상태 코드 */
			, X1.ITEM_CLIENT_APPR_STAT_NM								/* 품목 거래처 수정 승인 상태명 */
             , X1.PRESENT_YN AS PRESENT_YN
          FROM (
                SELECT G.IL_GOODS_ID AS GOODS_ID
                     , I.IL_ITEM_CD AS ITEM_CODE
                     , I.ERP_IF_YN
                     , I.ITEM_TP
                     , IFNULL(I.ITEM_BARCODE, '') AS ITEM_BARCODE
                     , G.GOODS_NM AS GOODS_NAME
                     , G.CREATE_DT
                     , G.MODIFY_DT
                     , G.PROMOTION_NM
                     , G.PROMOTION_NM_START_DT
                     , G.PROMOTION_NM_END_DT
                     , G.GOODS_TP AS GOODS_TYPE_CODE
                     , G.PURCHASE_MEMBER_YN
                     , G.PURCHASE_EMPLOYEE_YN
                     , G.PURCHASE_NONMEMBER_YN
                     , G.DISP_WEB_PC_YN AS DISPLAY_WEB_PC_YN
                     , G.DISP_WEB_MOBILE_YN AS DISPLAY_WEB_MOBILE_YN
                     , G.DISP_APP_YN AS DISPLAY_APP_YN
                     , G.SALE_TP AS SALE_TYPE_CODE
                     , G.GOODS_OUTMALL_SALE_STAT
                     , G.SALE_STATUS AS SALE_STATUS_CODE
                     , G.DISP_YN AS DISPLAY_YN
                     , G.SALE_START_DT
                     , G.SALE_END_DT
                     , G.GOODS_PACKAGE_IMG_TP
                     , I.IL_CTGRY_STD_ID AS CATEGORY_STANDARD_ID
                     , (SELECT T1.IL_CTGRY_ID
                          FROM IL_CTGRY_PRNTS_INFO T1
                          JOIN IL_GOODS_CTGRY T2
                            ON T2.IL_CTGRY_ID = T1.IL_CTGRY_ID
                          JOIN IL_CTGRY T3
                            ON T3.IL_CTGRY_ID = T1.IL_CTGRY_ID
                         WHERE T3.USE_YN = 'Y'
                           AND T3.DEL_YN = 'N'
                           AND T2.IL_GOODS_ID = G.IL_GOODS_ID
                        <choose>
                            <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(findKeyword)'> <!-- 복수검색 -->
                                AND T3.MALL_DIV = 'MALL_DIV.PULMUONE'
                                AND T2.BASIC_YN = 'Y'
                            </when>
                            <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(categoryType)'>
                            	<choose>
                            		<when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(categoryType, "CATEGORY_STANDARD")'> <!-- 표준카테고리 -->
		                                AND T3.MALL_DIV = 'MALL_DIV.PULMUONE'
		                                AND T2.BASIC_YN = 'Y'
		                            </when>
		                            <otherwise> <!-- 전시카테고리, 몰인몰(올가), 몰인몰(베이비밀), 몰인몰(잇슬림) -->
		                                AND T3.MALL_DIV = (CASE WHEN 'CATEGORY_PULMUONE' = #{categoryType}
		                                                        THEN 'MALL_DIV.PULMUONE'
		                                                        WHEN 'CATEGORY_ORGA' = #{categoryType}
		                                                        THEN 'MALL_DIV.ORGA'
		                                                        WHEN 'CATEGORY_BABYMEAL' = #{categoryType}
		                                                        THEN 'MALL_DIV.BABYMEAL'
		                                                        WHEN 'CATEGORY_EATSLIM' = #{categoryType}
		                                                        THEN 'MALL_DIV.EATSLIM'
		                                                   ELSE 'MALL_DIV.PULMUONE'
		                                                    END)
		                                <choose>
		                                    <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(categoryDepth4)">
		                                        AND T1.CTGRY_ID_DEPTH1 = #{categoryDepth1}
		                                        AND T1.CTGRY_ID_DEPTH2 = #{categoryDepth2}
		                                        AND T1.CTGRY_ID_DEPTH3 = #{categoryDepth3}
		                                        AND T1.CTGRY_ID_DEPTH4 = #{categoryDepth4} /* 전시카테고리 세분류 */
		                                    </when>
		                                    <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(categoryDepth3)">
		                                        AND T1.CTGRY_ID_DEPTH1 = #{categoryDepth1}
		                                        AND T1.CTGRY_ID_DEPTH2 = #{categoryDepth2}
		                                        AND T1.CTGRY_ID_DEPTH3 = #{categoryDepth3} /* 전시카테고리 소분류 */
		                                    </when>
		                                    <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(categoryDepth2)">
		                                        AND T1.CTGRY_ID_DEPTH1 = #{categoryDepth1}
		                                        AND T1.CTGRY_ID_DEPTH2 = #{categoryDepth2} /* 전시카테고리 중분류 */
		                                    </when>
		                                    <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(categoryDepth1)">
		                                        AND T1.CTGRY_ID_DEPTH1 = #{categoryDepth1} /* 전시카테고리 대분류 */
		                                    </when>
		                                    <otherwise>
		                                        AND T2.BASIC_YN = 'Y'
		                                    </otherwise>
		                                </choose>
		                            </otherwise>
                            	</choose>
                            </when>
                        </choose>
                         LIMIT 1) AS CATEGORY_ID
                     , G.UR_WAREHOUSE_ID AS WAREHOUSE_ID
                     , W.WAREHOUSE_NM AS WAREHOUSE_NAME
                     , I.UR_SUPPLIER_ID AS SUPPLIER_ID
                     , S.UR_COMPANY_ID AS SUPPLIER_COMPANY_ID
                     , C.COMP_NM AS SUPPLIER_NAME
                     , I.UR_BRAND_ID AS BRAND_ID
                     , I.DP_BRAND_ID AS DP_BRAND_ID
                     , B.BRAND_NM AS BRAND_NAME
                     , J.DP_BRAND_NM AS DP_BRAND_NAME
                     , I.STORAGE_METHOD_TP AS STORAGE_METHOD_TYPE_CODE
                     , I.ERP_STOCK_IF_YN
                     , USW.UR_SUPPLIER_WAREHOUSE_ID
                     , IIW.IL_ITEM_WAREHOUSE_ID
                     , CASE
						WHEN G.GOODS_TP = 'GOODS_TYPE.DISPOSAL' THEN 'N' /* 폐기임박상품 - 한정재고 */
						ELSE IIW.PRE_ORDER_YN
					END AS PRE_ORDER_YN
                     , I.ERP_CTGRY_LV1_ID
                     , CASE WHEN (SELECT COUNT(1)
                                    FROM IL_GOODS_ADDITIONAL_GOODS_MAPPING
                                   WHERE IL_GOODS_ID = G.IL_GOODS_ID
                                   LIMIT 1) <![CDATA[ > ]]> 0
                            THEN 'Y'
                       ELSE 'N'
                        END ADDITIONAL_GOODS_YN
                     , G.COUPON_USE_YN
                     , G.MD_RECOMMEND_YN
                     , (SELECT IL_GOODS_PRICE_ID
                          FROM IL_GOODS_PRICE
                         WHERE IL_GOODS_ID = G.IL_GOODS_ID
                           AND NOW() BETWEEN PRICE_START_DT AND PRICE_END_DT
                         ORDER BY IL_GOODS_PRICE_ID DESC
                         LIMIT 1) AS GOODS_PRICE_ID
                     , I.EXTINCTION_YN
                     , ETT.EXTINCTION_YN AS PACKAGE_EXTINCTION_YN
                     , IIW.UNLIMIT_STOCK_YN
                     , IIW.NOT_IF_STOCK_CNT
                     , IIW.PRE_ORDER_TP
                     , W.STOCK_ORDER_YN
                     , CASE
						WHEN G.GOODS_TP = 'GOODS_TYPE.DISPOSAL' THEN '한정재고' /* 폐기임박상품 - 한정재고 */
						WHEN W.STOCK_ORDER_YN = 'N' THEN (
							CASE
								WHEN IIW.UNLIMIT_STOCK_YN = 'Y' THEN '재고미연동(무제한)'
								WHEN IIW.UNLIMIT_STOCK_YN = 'N' THEN '재고미연동(한정재고)'
								ELSE '재고미연동'
							END
						)
						WHEN W.STOCK_ORDER_YN = 'Y' THEN (
							CASE
								WHEN IIW.PRE_ORDER_YN = 'N' THEN '한정재고'
								WHEN IIW.PRE_ORDER_YN = 'Y' THEN (
									CASE
										WHEN IIW.PRE_ORDER_TP = 'PRE_ORDER_TP.NOT_ALLOWED' THEN '선주문(한정재고)'
										WHEN IIW.PRE_ORDER_TP IN ('PRE_ORDER_TP.LIMITED_ALLOWED', 'PRE_ORDER_TP.UNLIMITED_ALLOWED') THEN (
											CASE
												WHEN S.SUPPLIER_CD = 'PF' THEN '선주문(식품)'
												WHEN S.SUPPLIER_CD = 'OG' AND IPT.ERP_PO_TP = 'ERP_PO_TP.R1' AND I.ERP_CTGRY_LV1_ID = '과일' THEN '선주문(과일)'
												WHEN S.SUPPLIER_CD = 'OG' AND IPT.ERP_PO_TP = 'ERP_PO_TP.R1' AND I.ERP_CTGRY_LV1_ID IS NOT NULL AND I.ERP_CTGRY_LV1_ID NOT IN ('과일', '채소', '') THEN '선주문(가공)'
												ELSE '선주문(미정)'
											END
										)
										ELSE '선주문'
									END
								)
								ELSE '재고연동'
							END
						)
						ELSE ''
					END AS PRE_ORDER_NM
					, CASE
						WHEN W.STOCK_ORDER_YN = 'Y'
							THEN (
								IFNULL((
									SELECT IFNULL(MAX(IF(STOCK_TP = 'ERP_STOCK_TP.CLOSED', STOCK_QTY, 0)), 0)
										   + IFNULL(MAX(IF(STOCK_TP = 'ERP_STOCK_TP.CLOSED_ADJ', STOCK_QTY, 0)), 0)
										   AS CLOSED
									FROM
										IL_ITEM_ERP_STOCK A
									WHERE
										A.IL_ITEM_WAREHOUSE_ID = IIW.IL_ITEM_WAREHOUSE_ID
										AND A.STOCK_TP IN ('ERP_STOCK_TP.CLOSED', 'ERP_STOCK_TP.CLOSED_ADJ')
										AND A.BASE_DT = CURDATE()
									GROUP BY A.IL_ITEM_WAREHOUSE_ID
								), 0) /* 전일마감재고 */
							)
						WHEN W.STOCK_ORDER_YN = 'N' AND IIW.UNLIMIT_STOCK_YN = 'Y'
							THEN '무제한재고'
						WHEN W.STOCK_ORDER_YN = 'N' AND IIW.UNLIMIT_STOCK_YN = 'N'
							THEN IIW.NOT_IF_STOCK_CNT
						END AS STOCK_CLOSING_COUNT
					 , (
						SELECT IFNULL(SUM(IF(STOCK_TP = 'ERP_STOCK_TP.CONFIRMED', STOCK_QTY, 0)), 0)
						       + IFNULL(SUM(IF(STOCK_TP = 'ERP_STOCK_TP.CONFIRMED_ADJ', STOCK_QTY, 0)), 0)
							   as CLOSED
						FROM IL_ITEM_ERP_STOCK A
						WHERE IL_ITEM_WAREHOUSE_ID = IIW.IL_ITEM_WAREHOUSE_ID
						AND BASE_DT = CURDATE()
					  ) AS STOCK_CONFIRMED_COUNT
					 , (
						SELECT IFNULL(SUM(IF(STOCK_TP = 'ERP_STOCK_TP.SCHEDULED', STOCK_QTY, 0)), 0)
						       + IFNULL(SUM(IF(STOCK_TP = 'ERP_STOCK_TP.SCHEDULED_ADJ', STOCK_QTY, 0)), 0)
							   as CLOSED
						FROM IL_ITEM_ERP_STOCK A
						WHERE IL_ITEM_WAREHOUSE_ID = IIW.IL_ITEM_WAREHOUSE_ID
						AND BASE_DT = CURDATE()
					  ) AS STOCK_SCHEDULED_COUNT
					 , (
						SELECT
							IFNULL(SUM(IF(STOCK_TP = 'ERP_STOCK_TP.OFFLINE', STOCK_QTY, 0)), 0) as CLOSED
						FROM IL_ITEM_ERP_STOCK A
						WHERE IL_ITEM_WAREHOUSE_ID = IIW.IL_ITEM_WAREHOUSE_ID
						AND BASE_DT = CURDATE()
					  ) AS STOCK_OFFLINE_COUNT
					 ,(
					 	SELECT
							IL_ITEM_STOCK_ID
						FROM IL_ITEM_STOCK A
						WHERE IL_ITEM_WAREHOUSE_ID = IIW.IL_ITEM_WAREHOUSE_ID
						AND BASE_DT = CURDATE()
					 ) AS IL_ITEM_STOCK_ID
					 , I.ITEM_NM
					, CASE
						WHEN I.SIZE_PER_PACKAGE IS NULL THEN ''
						ELSE TRIM(I.SIZE_PER_PACKAGE)+0
					END AS SIZE_PER_PACKAGE /* 포장단위별 용량 */
					, CASE
						WHEN I.SIZE_UNIT_ETC IS NOT NULL AND TRIM(I.SIZE_UNIT_ETC) != '' THEN I.SIZE_UNIT_ETC
						ELSE IFNULL(FN_COMN_CODE_DIC(I.SIZE_UNIT), '')
					END AS SIZE_UNIT /* 용량(중량)단위 */
					, IFNULL(I.QTY_PER_PACKAGE, '') AS QTY_PER_PACKAGE /* 구성정보 용량 */
					, CASE
						WHEN I.PACKAGE_UNIT_ETC IS NOT NULL AND TRIM(I.PACKAGE_UNIT_ETC) != '' THEN I.PACKAGE_UNIT_ETC
						ELSE IFNULL(FN_COMN_CODE_DIC(I.PACKAGE_UNIT), '')
					END AS PACKAGE_UNIT /* 구성정보 단위 */
					, G.PACKAGE_UNIT_DISP_YN AS PACKAGE_UNIT_DISP_YN
					, G.PACKAGE_UNIT_DESC AS PACKAGE_UNIT_DESC
					, GRIGA.APPR_REQ_USER_ID AS GOODS_REGIST_APPR_REQ_USER_ID						/* 상품 등록 승인 요청자 ID */
					, GRIGA.APPR_STAT AS GOODS_REGIST_APPR_STAT										/* 상품 등록 승인 상태 코드 */
					, GRIGA.APPR_STAT_NAME AS GOODS_REGIST_APPR_STAT_NM								/* 상품 등록 승인 상태명 */
					, GCIGA.APPR_REQ_USER_ID AS GOODS_CLIENT_APPR_REQ_USER_ID						/* 상품 거래처 수정 승인 요청자 ID */
					, GCIGA.APPR_STAT AS GOODS_CLIENT_APPR_STAT										/* 상품 거래처 수정 승인 상태 코드 */
					, GCIGA.APPR_STAT_NAME AS GOODS_CLIENT_APPR_STAT_NM								/* 상품 거래처 수정 승인 상태명 */
					, ICIIA.APPR_REQ_USER_ID AS ITEM_CLIENT_APPR_REQ_USER_ID						/* 품목 거래처 수정 승인 요청자 ID */
					, ICIIA.APPR_STAT AS ITEM_CLIENT_APPR_STAT										/* 품목 거래처 수정 승인 상태 코드 */
					, ICIIA.APPR_STAT_NAME AS ITEM_CLIENT_APPR_STAT_NM								/* 품목 거래처 수정 승인 상태명 */
					, G.PRESENT_YN
                  FROM IL_GOODS G
                  JOIN IL_ITEM I
                    ON I.IL_ITEM_CD = G.IL_ITEM_CD
                  JOIN UR_WAREHOUSE W
                    ON W.UR_WAREHOUSE_ID = G.UR_WAREHOUSE_ID
                  JOIN UR_SUPPLIER S
                    ON S.UR_SUPPLIER_ID = I.UR_SUPPLIER_ID
                  JOIN UR_SUPPLIER_WAREHOUSE USW
					ON G.UR_WAREHOUSE_ID = USW.UR_WAREHOUSE_ID
					AND I.UR_SUPPLIER_ID = USW.UR_SUPPLIER_ID
				  JOIN IL_ITEM_WAREHOUSE IIW
					ON USW.UR_SUPPLIER_WAREHOUSE_ID = IIW.UR_SUPPLIER_WAREHOUSE_ID
					AND I.IL_ITEM_CD = IIW.IL_ITEM_CD
                  JOIN UR_COMPANY C
                    ON C.UR_COMPANY_ID = S.UR_COMPANY_ID
                  JOIN UR_BRAND B
                    ON B.UR_BRAND_ID = I.UR_BRAND_ID
                  LEFT JOIN  DP_BRAND     J
                    ON I.DP_BRAND_ID = J.DP_BRAND_ID
				  LEFT JOIN IL_PO_TP IPT ON
					IPT.IL_PO_TP_ID = IIW.IL_PO_TP_ID
				LEFT JOIN (
					SELECT
						IG.IL_GOODS_ID
					,	IG.GOODS_NM
					,	IG.SALE_STATUS
					,	IG.GOODS_TP
					,	II.EXTINCTION_YN
                    FROM
						IL_GOODS IG
					INNER JOIN IL_GOODS_PACKAGE_GOODS_MAPPING IGPGM ON IGPGM.IL_GOODS_ID = IG.IL_GOODS_ID
					INNER JOIN IL_GOODS TIG ON TIG.IL_GOODS_ID = IGPGM.TARGET_GOODS_ID
					INNER JOIN IL_ITEM II ON II.IL_ITEM_CD = TIG.IL_ITEM_CD
					WHERE
						II.EXTINCTION_YN = 'Y'
					GROUP BY IG.IL_GOODS_ID
				) ETT ON ETT.IL_GOODS_ID = G.IL_GOODS_ID
				LEFT JOIN (
					SELECT
						IGA.IL_GOODS_ID
						, IGA.APPR_REQ_USER_ID
						, IGA.APPR_STAT
						, DIC.NAME AS APPR_STAT_NAME
					FROM
						IL_GOODS_APPR IGA
						LEFT JOIN (
							SELECT
								SCC.ST_COMN_CODE_ID AS CODE
								, GDM.DIC_MST_NM AS NAME
							FROM
								ST_COMN_CODE SCC
								INNER JOIN GB_DIC_MST GDM
									ON SCC.GB_DIC_MST_ID = GDM.GB_DIC_MST_ID
							WHERE
								SCC.ST_COMN_CODE_MST_CD = 'APPR_STAT'
								AND SCC.USE_YN = UPPER('Y')
						) DIC
							ON IGA.APPR_STAT = DIC.CODE
					WHERE
						IGA.IL_GOODS_APPR_ID IN (
							SELECT
								MAX(IL_GOODS_APPR_ID) AS IL_GOODS_APPR_ID
							FROM
								IL_GOODS_APPR
							WHERE
								APPR_KIND_TP = 'APPR_KIND_TP.GOODS_REGIST'
							GROUP BY IL_GOODS_ID
						)
				) GRIGA
					ON GRIGA.IL_GOODS_ID = G.IL_GOODS_ID
				LEFT JOIN (
					SELECT
						IGA.IL_GOODS_ID
						, IGA.APPR_REQ_USER_ID
						, IGA.APPR_STAT
						, DIC.NAME AS APPR_STAT_NAME
					FROM
						IL_GOODS_APPR IGA
						LEFT JOIN (
							SELECT
								SCC.ST_COMN_CODE_ID AS CODE
								, GDM.DIC_MST_NM AS NAME
							FROM
								ST_COMN_CODE SCC
								INNER JOIN GB_DIC_MST GDM
									ON SCC.GB_DIC_MST_ID = GDM.GB_DIC_MST_ID
							WHERE
								SCC.ST_COMN_CODE_MST_CD = 'APPR_STAT'
								AND SCC.USE_YN = UPPER('Y')
						) DIC
							ON IGA.APPR_STAT = DIC.CODE
					WHERE
						IGA.IL_GOODS_APPR_ID IN (
							SELECT
								MAX(IL_GOODS_APPR_ID) AS IL_GOODS_APPR_ID
							FROM
								IL_GOODS_APPR
							WHERE
								APPR_KIND_TP = 'APPR_KIND_TP.GOODS_CLIENT'
							GROUP BY IL_GOODS_ID
						)
						AND IGA.APPR_STAT IN ('APPR_STAT.REQUEST', 'APPR_STAT.SUB_APPROVED')
				) GCIGA
					ON GCIGA.IL_GOODS_ID = G.IL_GOODS_ID
				LEFT JOIN (
					SELECT
						IIA.IL_ITEM_CD
						, IIA.APPR_REQ_USER_ID
						, IIA.APPR_STAT
						, DIC.NAME AS APPR_STAT_NAME
					FROM
						IL_ITEM_APPR IIA
						LEFT JOIN (
							SELECT
								SCC.ST_COMN_CODE_ID AS CODE
								, GDM.DIC_MST_NM AS NAME
							FROM
								ST_COMN_CODE SCC
								INNER JOIN GB_DIC_MST GDM
									ON SCC.GB_DIC_MST_ID = GDM.GB_DIC_MST_ID
							WHERE
								SCC.ST_COMN_CODE_MST_CD = 'APPR_STAT'
								AND SCC.USE_YN = UPPER('Y')
						) DIC
							ON IIA.APPR_STAT = DIC.CODE
					WHERE
						IIA.IL_ITEM_APPR_ID IN (
							SELECT
								MAX(IL_ITEM_APPR_ID) AS IL_ITEM_APPR_ID
							FROM
								IL_ITEM_APPR
							WHERE
								APPR_KIND_TP = 'APPR_KIND_TP.ITEM_CLIENT'
							GROUP BY IL_ITEM_CD
						)
						AND IIA.APPR_STAT IN ('APPR_STAT.REQUEST', 'APPR_STAT.SUB_APPROVED')
				) ICIIA
					ON ICIIA.IL_ITEM_CD = I.IL_ITEM_CD
                <where>
                	<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(selectConditionType)">
						<choose>
	                    	<when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(selectConditionType, "singleSection")'> <!-- 최근 수정일 -->
								<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(findKeyword)"> <!-- 복수검색 -->
		                            <choose>
		                                <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchCondition, "ALL")'> <!-- 전체 -->
		                                    AND (
		                                        G.IL_GOODS_ID IN
			                                        <foreach collection="findKeywordList" item="goodsId" index="index" separator="," open="(" close=")">
			                                            #{goodsId}
			                                        </foreach>
		                                     	OR I.IL_ITEM_CD IN
			                                        <foreach collection="findKeywordList" item="itemCode" index="index" separator="," open="(" close=")">
			                                            #{itemCode}
			                                        </foreach>
			                                     OR I.ERP_ITEM_BARCODE IN
			                                        <foreach collection="findKeywordList" item="erpItemBarcode" index="index" separator="," open="(" close=")">
			                                            #{erpItemBarcode}
			                                        </foreach>
			                                     OR I.ITEM_BARCODE IN
			                                        <foreach collection="findKeywordList" item="itemBarcode" index="index" separator="," open="(" close=")">
			                                            #{itemBarcode}
			                                        </foreach>
		                                    )
		                                </when>
		                                <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchCondition, "GOODS_CODE")'> <!-- 상품코드 -->
                   							G.IL_GOODS_ID IN
			                                    <foreach collection="findKeywordList" item="goodsId" index="index" separator="," open="(" close=")">
			                                        #{goodsId}
			                                    </foreach>
		                                </when>
		                                <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchCondition, "ITEM_CODE")'> <!-- 마스터 품목코드 -->
                   							I.IL_ITEM_CD IN
			                                    <foreach collection="findKeywordList" item="itemCode" index="index" separator="," open="(" close=")">
			                                        #{itemCode}
			                                    </foreach>
		                                </when>
		                                <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchCondition, "ITEM_BARCODE")'> <!-- 품목 바코드 -->
		                                    AND (
                   								I.ERP_ITEM_BARCODE IN
			                                        <foreach collection="findKeywordList" item="erpItemBarcode" index="index" separator="," open="(" close=")">
			                                            #{erpItemBarcode}
			                                        </foreach>
			                                     OR I.ITEM_BARCODE IN
			                                        <foreach collection="findKeywordList" item="itemBarcode" index="index" separator="," open="(" close=")">
			                                            #{itemBarcode}
			                                        </foreach>
		                                    )
		                                </when>
		                            </choose>
		                        </if>
	                    	</when>
	                        <otherwise>
								<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(findKeywordOnMulti)"> <!-- 복수검색 -->
                                    AND (
                                        G.IL_GOODS_ID IN
	                                        <foreach collection="findKeywordOnMultiList" item="goodsId" index="index" separator="," open="(" close=")">
	                                            #{goodsId}
	                                        </foreach>
	                                     OR I.IL_ITEM_CD IN
	                                        <foreach collection="findKeywordOnMultiList" item="itemCode" index="index" separator="," open="(" close=")">
	                                            #{itemCode}
	                                        </foreach>
	                                     OR I.ERP_ITEM_BARCODE IN
	                                        <foreach collection="findKeywordOnMultiList" item="erpItemBarcode" index="index" separator="," open="(" close=")">
	                                            #{erpItemBarcode}
	                                        </foreach>
	                                     OR I.ITEM_BARCODE IN
	                                        <foreach collection="findKeywordOnMultiList" item="itemBarcode" index="index" separator="," open="(" close=")">
	                                            #{itemBarcode}
	                                        </foreach>
                                    )
								</if>
	                            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(goodsName)"> <!-- 상품명 -->
	                                AND G.GOODS_NM LIKE CONCAT('%', #{goodsName}, '%')
	                            </if>
	                            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(supplierId)"> <!-- 공급업체 -->
									AND I.UR_SUPPLIER_ID = #{supplierId}
	                            </if>
	                            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(warehouseGroup)"> <!-- 출고처그룹코드 -->
									AND W.WAREHOUSE_GRP_CD = #{warehouseGroup}
								</if>
								<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(warehouseId)"> <!-- 출고처그룹기준 출고처 -->
									AND G.UR_WAREHOUSE_ID = #{warehouseId}
								</if>
								<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(brandId)"> <!--표준 브랜드 -->
	                                AND I.UR_BRAND_ID = #{brandId}
	                            </if>
	                            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(dpBrandId)"> <!--전시 브랜드 -->
	                                AND I.DP_BRAND_ID = #{dpBrandId}
	                            </if>



	                            <choose>
	                                <when test='categoryType.equalsIgnoreCase("CATEGORY_STANDARD")'> <!-- 표준카테고리 -->
	                                    <choose>
	                                        <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(categoryStandardDepth4)">
	                                            AND EXISTS (SELECT 1
	                                                          FROM IL_CTGRY_STD_PRNTS_INFO T1
	                                                          JOIN IL_CTGRY_STD T2
	                                                            ON T2.IL_CTGRY_STD_ID = T1.IL_CTGRY_STD_ID
	                                                         WHERE T1.CTGRY_STD_ID_DEPTH1 = #{categoryStandardDepth1}
	                                                           AND T1.CTGRY_STD_ID_DEPTH2 = #{categoryStandardDepth2}
	                                                           AND T1.CTGRY_STD_ID_DEPTH3 = #{categoryStandardDepth3}
	                                                           AND T1.CTGRY_STD_ID_DEPTH4 = #{categoryStandardDepth4}
	                                                           AND T2.USE_YN = 'Y'
	                                                           AND T2.DEL_YN = 'N'
	                                                           AND T1.IL_CTGRY_STD_ID = I.IL_CTGRY_STD_ID) /* 표준카테고리 세분류 */
	                                        </when>
	                                        <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(categoryStandardDepth3)">
	                                            AND EXISTS (SELECT 1
	                                                          FROM IL_CTGRY_STD_PRNTS_INFO T1
	                                                          JOIN IL_CTGRY_STD T2
	                                                            ON T2.IL_CTGRY_STD_ID = T1.IL_CTGRY_STD_ID
	                                                         WHERE T1.CTGRY_STD_ID_DEPTH1 = #{categoryStandardDepth1}
	                                                           AND T1.CTGRY_STD_ID_DEPTH2 = #{categoryStandardDepth2}
	                                                           AND T1.CTGRY_STD_ID_DEPTH3 = #{categoryStandardDepth3}
	                                                           AND T2.USE_YN = 'Y'
	                                                           AND T2.DEL_YN = 'N'
	                                                           AND T1.IL_CTGRY_STD_ID = I.IL_CTGRY_STD_ID) /* 표준카테고리 소분류 */
	                                        </when>
	                                        <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(categoryStandardDepth2)">
	                                            AND EXISTS (SELECT 1
	                                                          FROM IL_CTGRY_STD_PRNTS_INFO T1
	                                                          JOIN IL_CTGRY_STD T2
	                                                            ON T2.IL_CTGRY_STD_ID = T1.IL_CTGRY_STD_ID
	                                                         WHERE T1.CTGRY_STD_ID_DEPTH1 = #{categoryStandardDepth1}
	                                                           AND T1.CTGRY_STD_ID_DEPTH2 = #{categoryStandardDepth2}
	                                                           AND T2.USE_YN = 'Y'
	                                                           AND T2.DEL_YN = 'N'
	                                                           AND T1.IL_CTGRY_STD_ID = I.IL_CTGRY_STD_ID) /* 표준카테고리 중분류 */
	                                        </when>
	                                        <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(categoryStandardDepth1)">
	                                            AND EXISTS (SELECT 1
	                                                          FROM IL_CTGRY_STD_PRNTS_INFO T1
	                                                          JOIN IL_CTGRY_STD T2
	                                                            ON T2.IL_CTGRY_STD_ID = T1.IL_CTGRY_STD_ID
	                                                         WHERE T1.CTGRY_STD_ID_DEPTH1 = #{categoryStandardDepth1}
	                                                           AND T2.USE_YN = 'Y'
	                                                           AND T2.DEL_YN = 'N'
	                                                           AND T1.IL_CTGRY_STD_ID = I.IL_CTGRY_STD_ID) /* 표준카테고리 대분류 */
	                                        </when>
	                                    </choose>
	                                </when>
	                                <otherwise> <!-- 전시카테고리, 몰인몰(올가), 몰인몰(베이비밀), 몰인몰(잇슬림) -->
	                                    <choose>
	                                        <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(categoryDepth4)">
	                                            AND EXISTS (SELECT 1
	                                                          FROM IL_CTGRY_PRNTS_INFO T1
	                                                          JOIN IL_GOODS_CTGRY T2
	                                                            ON T2.IL_CTGRY_ID = T1.IL_CTGRY_ID
	                                                          JOIN IL_CTGRY T3
	                                                            ON T3.IL_CTGRY_ID = T1.IL_CTGRY_ID
	                                                         WHERE T1.CTGRY_ID_DEPTH1 = #{categoryDepth1}
	                                                           AND T1.CTGRY_ID_DEPTH2 = #{categoryDepth2}
	                                                           AND T1.CTGRY_ID_DEPTH3 = #{categoryDepth3}
	                                                           AND T1.CTGRY_ID_DEPTH4 = #{categoryDepth4}
	                                                           AND T3.USE_YN = 'Y'
	                                                           AND T3.DEL_YN = 'N'
	                                                           AND T3.MALL_DIV = (CASE WHEN 'CATEGORY_PULMUONE' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.PULMUONE'
	                                                                                   WHEN 'CATEGORY_ORGA' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.ORGA'
	                                                                                   WHEN 'CATEGORY_BABYMEAL' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.BABYMEAL'
	                                                                                   WHEN 'CATEGORY_EATSLIM' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.EATSLIM'
	                                                                              ELSE 'MALL_DIV.PULMUONE'
	                                                                               END)
	                                                           AND T2.IL_GOODS_ID = G.IL_GOODS_ID) /* 전시카테고리 세분류 */
	                                        </when>
	                                        <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(categoryDepth3)">
	                                            AND EXISTS (SELECT 1
	                                                          FROM IL_CTGRY_PRNTS_INFO T1
	                                                          JOIN IL_GOODS_CTGRY T2
	                                                            ON T2.IL_CTGRY_ID = T1.IL_CTGRY_ID
	                                                          JOIN IL_CTGRY T3
	                                                            ON T3.IL_CTGRY_ID = T1.IL_CTGRY_ID
	                                                         WHERE T1.CTGRY_ID_DEPTH1 = #{categoryDepth1}
	                                                           AND T1.CTGRY_ID_DEPTH2 = #{categoryDepth2}
	                                                           AND T1.CTGRY_ID_DEPTH3 = #{categoryDepth3}
	                                                           AND T3.USE_YN = 'Y'
	                                                           AND T3.DEL_YN = 'N'
	                                                           AND T3.MALL_DIV = (CASE WHEN 'CATEGORY_PULMUONE' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.PULMUONE'
	                                                                                   WHEN 'CATEGORY_ORGA' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.ORGA'
	                                                                                   WHEN 'CATEGORY_BABYMEAL' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.BABYMEAL'
	                                                                                   WHEN 'CATEGORY_EATSLIM' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.EATSLIM'
	                                                                              ELSE 'MALL_DIV.PULMUONE'
	                                                                               END)
	                                                           AND T2.IL_GOODS_ID = G.IL_GOODS_ID) /* 전시카테고리 소분류 */
	                                        </when>
	                                        <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(categoryDepth2)">
	                                            AND EXISTS (SELECT 1
	                                                          FROM IL_CTGRY_PRNTS_INFO T1
	                                                          JOIN IL_GOODS_CTGRY T2
	                                                            ON T2.IL_CTGRY_ID = T1.IL_CTGRY_ID
	                                                          JOIN IL_CTGRY T3
	                                                            ON T3.IL_CTGRY_ID = T1.IL_CTGRY_ID
	                                                         WHERE T1.CTGRY_ID_DEPTH1 = #{categoryDepth1}
	                                                           AND T1.CTGRY_ID_DEPTH2 = #{categoryDepth2}
	                                                           AND T3.USE_YN = 'Y'
	                                                           AND T3.DEL_YN = 'N'
	                                                           AND T3.MALL_DIV = (CASE WHEN 'CATEGORY_PULMUONE' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.PULMUONE'
	                                                                                   WHEN 'CATEGORY_ORGA' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.ORGA'
	                                                                                   WHEN 'CATEGORY_BABYMEAL' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.BABYMEAL'
	                                                                                   WHEN 'CATEGORY_EATSLIM' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.EATSLIM'
	                                                                              ELSE 'MALL_DIV.PULMUONE'
	                                                                               END)
	                                                           AND T2.IL_GOODS_ID = G.IL_GOODS_ID) /* 전시카테고리 중분류 */
	                                        </when>
	                                        <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(categoryDepth1)">
	                                            AND EXISTS (SELECT 1
	                                                          FROM IL_CTGRY_PRNTS_INFO T1
	                                                          JOIN IL_GOODS_CTGRY T2
	                                                            ON T2.IL_CTGRY_ID = T1.IL_CTGRY_ID
	                                                          JOIN IL_CTGRY T3
	                                                            ON T3.IL_CTGRY_ID = T1.IL_CTGRY_ID
	                                                         WHERE T1.CTGRY_ID_DEPTH1 = #{categoryDepth1}
	                                                           AND T3.USE_YN = 'Y'
	                                                           AND T3.DEL_YN = 'N'
	                                                           AND T3.MALL_DIV = (CASE WHEN 'CATEGORY_PULMUONE' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.PULMUONE'
	                                                                                   WHEN 'CATEGORY_ORGA' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.ORGA'
	                                                                                   WHEN 'CATEGORY_BABYMEAL' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.BABYMEAL'
	                                                                                   WHEN 'CATEGORY_EATSLIM' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.EATSLIM'
	                                                                              ELSE 'MALL_DIV.PULMUONE'
	                                                                               END)
	                                                           AND T2.IL_GOODS_ID = G.IL_GOODS_ID) /* 전시카테고리 대분류 */
	                                        </when>
	                                    </choose>
	                                </otherwise>
	                            </choose>
	                            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(dateSearchStart)"> <!-- 기간검색 -->
	                                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(dateSearchEnd)">
	                                    <choose>
	                                        <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(dateSearchType, "CREATE_DATE")'> <!-- 등록일 -->
	                                            AND G.CREATE_DT BETWEEN #{dateSearchStart} AND (#{dateSearchEnd} + INTERVAL 1 DAY - INTERVAL 1 SECOND)
	                                        </when>
	                                        <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(dateSearchType, "MODIFY_DATE")'> <!-- 최근 수정일 -->
	                                            AND G.MODIFY_DT BETWEEN #{dateSearchStart} AND (#{dateSearchEnd} + INTERVAL 1 DAY - INTERVAL 1 SECOND)
	                                        </when>
	                                        <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(dateSearchType, "SALE_DATE")'> <!-- 판매기간 -->
	                                            AND G.SALE_START_DT <![CDATA[ <= ]]> (#{dateSearchEnd} + INTERVAL 1 DAY - INTERVAL 1 SECOND)
	                                            AND SALE_END_DT <![CDATA[ >= ]]> #{dateSearchStart}
	                                        </when>
	                                    </choose>
	                                </if>
	                            </if>
	                            <if test="goodsTypeList.size() > 0"> <!-- 상품유형 -->
	                                AND G.GOODS_TP IN
	                                <foreach collection="goodsTypeList" item="goodsTypeCode" index="index" separator="," open="(" close=")">
	                                    #{goodsTypeCode}
	                                </foreach>
	                            </if>
	                            <if test="saleTypeList.size() > 0"> <!-- 판매유형 -->
	                                AND G.SALE_TP IN
	                                <foreach collection="saleTypeList" item="saleTypeCode" index="index" separator="," open="(" close=")">
	                                    #{saleTypeCode}
	                                </foreach>
	                            </if>
	                            <if test="saleStatusList.size() > 0"> <!-- 판매상태 -->
	                                AND G.SALE_STATUS IN
	                                <foreach collection="saleStatusList" item="saleStatusCode" index="index" separator="," open="(" close=")">
	                                    #{saleStatusCode}
	                                </foreach>
	                            </if>
	                            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(displayYn)"> <!-- 전시여부 -->
	                                AND G.DISP_YN = #{displayYn}
	                            </if>
	                            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(erpIfYn)"> <!-- ERP 연동여부 -->
	                                AND I.ERP_IF_YN = #{erpIfYn}
	                            </if>
	                            <if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(purchaseTargetAllYn, "N")'> <!-- 구매허용범위 전체조회 유무 -->
	                                AND G.PURCHASE_MEMBER_YN = (CASE WHEN #{purchaseMemberYn} = 'Y' THEN 'Y' ELSE 'N' END)
	                                AND G.PURCHASE_EMPLOYEE_YN = (CASE WHEN #{purchaseEmployeeYn} = 'Y' THEN 'Y' ELSE 'N' END)
	                                AND G.PURCHASE_NONMEMBER_YN = (CASE WHEN #{purchaseNonmemberYn} = 'Y' THEN 'Y' ELSE 'N' END)
	                            </if>
	                            <if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(salesAllowanceAllYn, "N")'> <!-- 판매허용범위 전체조회 유무 -->
	                                AND G.DISP_WEB_PC_YN = (CASE WHEN #{displayWebPcYn} = 'Y' THEN 'Y' ELSE 'N' END)
	                                AND G.DISP_WEB_MOBILE_YN = (CASE WHEN #{displayWebMobileYn} = 'Y' THEN 'Y' ELSE 'N' END)
	                                AND G.DISP_APP_YN = (CASE WHEN #{displayAppYn} = 'Y' THEN 'Y' ELSE 'N' END)
	                            </if>
	                            <if test="storageMethodTypeList.size() > 0"> <!-- 보관방법 -->
	                                AND I.STORAGE_METHOD_TP IN
	                                <foreach collection="storageMethodTypeList" item="storageMethodTypeCode" index="index" separator="," open="(" close=")">
	                                    #{storageMethodTypeCode}
	                                </foreach>
	                            </if>
	                            <if test="goodsOutMallSaleStatList.size() > 0"> <!-- 외부몰 판매상태 -->
	                                AND G.GOODS_OUTMALL_SALE_STAT IN
	                                <foreach collection="goodsOutMallSaleStatList" item="goodsOutMallSaleStatCode" index="index" separator="," open="(" close=")">
	                                    #{goodsOutMallSaleStatCode}
	                                </foreach>
	                            </if>
	                            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(couponUseYn)"> <!-- 쿠폰허용여부 -->
	                                AND G.COUPON_USE_YN = #{couponUseYn}
	                            </if>
	                            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(stockIfYn)"> <!-- 재고연동 유무 -->
	                                AND W.STOCK_ORDER_YN = #{stockIfYn}
	                            </if>
	                            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(mdRecommendYn)"> <!-- MD 추천유무 -->
	                                AND G.MD_RECOMMEND_YN = #{mdRecommendYn}
	                            </if>
	                            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(erpProductType)"> <!-- 매장전용상품유형 -->
	                                AND I.ERP_PRODUCT_TP = #{erpProductType}
	                            </if>
	                            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(saleDateType)"> <!-- 판매기간 구분 -->
									AND G.SALE_STATUS = 'SALE_STATUS.ON_SALE'
									<if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(saleDateType, "WAIT")'> <!-- 판매중 대기목록 -->
										AND SALE_START_DT <![CDATA[ > ]]> NOW()
									</if>
									<if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(saleDateType, "END")'> <!-- 판매기간만료 -->
										AND SALE_END_DT <![CDATA[ < ]]> NOW()
									</if>
	                            </if>
	                            <if test="goodsDeliveryTypeList.size() > 0"> <!-- 배송유형 -->
	                                AND (
	                                <foreach collection="goodsDeliveryTypeList" item="goodsDeliveryTypeCode" index="index" separator="OR">
	                                    <choose>
	                                        <!-- 일반 -->
	                                        <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(goodsDeliveryTypeCode, "GOODS_DELIVERY_TYPE.NORMAL")'>
	                                            ( W.STORE_YN = 'N' AND I.ITEM_TP != 'MASTER_ITEM_TYPE.INCORPOREITY' AND I.ITEM_TP != 'MASTER_ITEM_TYPE.RENTAL' )
	                                        </when>

	                                        <!-- 새벽 -->
	                                        <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(goodsDeliveryTypeCode, "GOODS_DELIVERY_TYPE.DAWN")'>
	                                            ( W.DAWN_DLVRY_YN = 'Y' AND I.ITEM_TP != 'MASTER_ITEM_TYPE.INCORPOREITY' AND I.ITEM_TP != 'MASTER_ITEM_TYPE.RENTAL' )
	                                        </when>

	                                        <!-- 매장 -->
	                                        <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(goodsDeliveryTypeCode, "GOODS_DELIVERY_TYPE.SHOP")'>
	                                            ( W.STORE_YN = 'Y' AND S.UR_SUPPLIER_ID = 2 AND I.ITEM_TP != 'MASTER_ITEM_TYPE.INCORPOREITY' AND I.ITEM_TP != 'MASTER_ITEM_TYPE.RENTAL' )
	                                        </when>

	                                        <!-- 일일 -->
	                                        <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(goodsDeliveryTypeCode, "GOODS_DELIVERY_TYPE.DAILY")'>
	                                            ( W.STORE_YN = 'Y' AND S.UR_SUPPLIER_ID != 2 AND I.ITEM_TP != 'MASTER_ITEM_TYPE.INCORPOREITY' AND I.ITEM_TP != 'MASTER_ITEM_TYPE.RENTAL' )
	                                        </when>

	                                        <!-- 배송안함 -->
	                                        <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(goodsDeliveryTypeCode, "GOODS_DELIVERY_TYPE.NO_DELIVERY")'>
	                                            I.ITEM_TP IN ('MASTER_ITEM_TYPE.INCORPOREITY', 'MASTER_ITEM_TYPE.RENTAL')
	                                        </when>
	                                    </choose>
	                                </foreach>
	                                )
	                            </if>
	                            <if test="stockStatusList.size() > 0"> <!-- 재고운영 형태 -->
	                            	AND
	                                <foreach collection="stockStatusList" item="stockStatus" index="index" separator="OR" open="(" close=")">
	                                    <if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(stockStatus, "STK_IF.Y.PRE_ORD.Y.UNLIMITED")'>
	                                    (
	                                    	W.STOCK_ORDER_YN = 'Y'
											AND IIW.PRE_ORDER_YN = 'Y'
											AND IIW.PRE_ORDER_TP IN ('PRE_ORDER_TP.UNLIMITED_ALLOWED','PRE_ORDER_TP.LIMITED_ALLOWED')
										)
										</if>
										<if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(stockStatus, "STK_IF.Y.PRE_ORD.Y.LIMITED")'>
										(
											W.STOCK_ORDER_YN = 'Y'
											AND IIW.PRE_ORDER_YN = 'Y'
											AND IIW.PRE_ORDER_TP = 'PRE_ORDER_TP.NOT_ALLOWED'
										)
										</if>
										<if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(stockStatus, "STK_IF.Y.PRE_ORD.N")'>
										(
											W.STOCK_ORDER_YN = 'Y'
											AND IIW.PRE_ORDER_YN = 'N'
										)
										</if>
										<if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(stockStatus, "STK_IF.N.LIMITED")'>
										(
											IIW.UNLIMIT_STOCK_YN = 'N'
											AND W.STOCK_ORDER_YN = 'N'
										)
										</if>
										<if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(stockStatus, "STK_IF.N.UNLIMITED")'>
										(
											IIW.UNLIMIT_STOCK_YN = 'Y'
											AND W.STOCK_ORDER_YN = 'N'
										)
										</if>
	                                </foreach>
	                            </if>

                                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(presentYn)">
                                    AND PRESENT_YN = #{presentYn}
                                </if>
	                        </otherwise>
	                    </choose>
                	</if>

					<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(listAuthSupplierId) and listAuthSupplierId.size != 0">
						AND I.UR_SUPPLIER_ID IN
						<foreach item="data" index="index" collection="listAuthSupplierId" open="(" separator="," close=")">
                    		#{data}
   	            		</foreach>
					</if>
					<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(listAuthWarehouseId) and listAuthWarehouseId.size != 0">
						AND G.UR_WAREHOUSE_ID IN
						<foreach item="data" index="index" collection="listAuthWarehouseId" open="(" separator="," close=")">
                    		#{data}
   	            		</foreach>
					</if>
					<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(userVo.companyType, 'COMPANY_TYPE.CLIENT')">
						AND G.GOODS_TP != 'GOODS_TYPE.PACKAGE'
						AND G.SALE_STATUS != 'SALE_STATUS.SAVE'
					</if>
                </where>
             ) X1
          JOIN IL_GOODS_PRICE GP
            ON GP.IL_GOODS_PRICE_ID = X1.GOODS_PRICE_ID
        <where>
            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEmpty(findKeyword)">
                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(additionalGoodsYn)"> <!-- 추가상품유무 -->
                    AND X1.ADDITIONAL_GOODS_YN = #{additionalGoodsYn}
                </if>
                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(discountType)"> <!-- 할인적용 유무 -->
                    AND GP.DISCOUNT_TP = #{discountType}
                </if>
            </if>
        </where>
        <choose> <!-- 상품 정렬방법 -->
            <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(gridDataSort, "CREATE_DATE")'> <!-- 상품등록일 순 -->
                ORDER BY X1.CREATE_DT DESC
            </when>
            <otherwise> <!-- 상품수정일 순 -->
                ORDER BY X1.MODIFY_DT DESC
            </otherwise>
        </choose>
    </select>

	 <!--───────────────────────────────────────────────────────────────────────
     * description      : 상품목록 조회 - 엑셀다운로드
     * @
     * @ 수정일         수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2020.10.06     손진구          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <select id="getGoodsListExcel" resultMap="getGoodsListResultMap">
        /* goodsList.getGoodsListExcel */
        SELECT X1.GOODS_ID /* 상품 ID */
             , X1.ITEM_CODE /* 품목코드 */
             , X1.ITEM_BARCODE /* 품목바코드 */
             , X1.ERP_ITEM_BARCODE /* ERP품목바코드 */
             , X1.ERP_IF_YN
             , IF(X1.ERP_IF_YN = 'Y', '연동', '미연동') AS ERP_IF_YN_NAME /* ERP 연동여부명 */
             , X1.ITEM_TP
             , FN_COMN_CODE_DIC(X1.ITEM_TP) AS ITEM_TP_NM
             , X1.ERP_O2O_EXPOSURE_TP
             , X1.ERP_PRODUCT_TP
             , CASE
             	WHEN X1.GOODS_TYPE_CODE = 'GOODS_TYPE.PACKAGE' AND X1.PACKAGE_UNIT_DISP_YN = 'Y' THEN CONCAT(X1.GOODS_NAME, ' (', X1.PACKAGE_UNIT_DESC, ')')
             	WHEN X1.GOODS_TYPE_CODE = 'GOODS_TYPE.PACKAGE' AND X1.PACKAGE_UNIT_DISP_YN = 'N' THEN X1.GOODS_NAME
             	WHEN X1.QTY_PER_PACKAGE = '' THEN CONCAT(X1.GOODS_NAME, ' (', X1.SIZE_PER_PACKAGE, X1.SIZE_UNIT, ')')
             	ELSE CONCAT(X1.GOODS_NAME, ' (', X1.SIZE_PER_PACKAGE, X1.SIZE_UNIT, 'X', X1.QTY_PER_PACKAGE, X1.PACKAGE_UNIT, ')')
             END AS GOODS_NAME /* 상품명 */
             , DATE_FORMAT(X1.CREATE_DT, '%Y-%m-%d %H:%i:%s') AS GOODS_CREATE_DATE /* 상품등록일 */
             , IFNULL(DATE_FORMAT(X1.MODIFY_DT, '%Y-%m-%d %H:%i:%s'), '') AS GOODS_MODIFY_DATE /* 상품수정일 */
             , DATE_FORMAT(X1.MODIFY_DT, '%Y-%m-%d %H:%i:%s') AS GOODS_SYSTEM_MODIFY_DATE /* TODO : 상품수정일(시스템) */
             , CASE WHEN (NOW() BETWEEN X1.PROMOTION_NM_START_DT AND X1.PROMOTION_NM_END_DT)
                    THEN X1.PROMOTION_NM
               ELSE ''
                END PROMOTION_NAME /* 프로모션명 */
             , DATE_FORMAT(X1.PROMOTION_NM_START_DT, '%Y-%m-%d %H:%i:%s') AS PROMOTION_START_DATE /* 프로모션 시작일 */
             , DATE_FORMAT(X1.PROMOTION_NM_END_DT, '%Y-%m-%d %H:%i:%s') AS PROMOTION_END_DATE /* 프로모션 종료일 */
             , X1.GOODS_TYPE_CODE /* 상품유형코드 */
             , IFNULL(FN_COMN_CODE_DIC(X1.GOODS_TYPE_CODE), '') AS GOODS_TYPE_NAME /* 상품유형명 */
             , X1.PURCHASE_MEMBER_YN /* 회원 구매여부 */
             , X1.PURCHASE_EMPLOYEE_YN /* 임직원 구매여부 */
             , X1.PURCHASE_NONMEMBER_YN /* 비회원 구매여부 */
             , CONCAT_WS(', ', IF(X1.PURCHASE_MEMBER_YN = 'Y', '일반', NULL), IF(X1.PURCHASE_EMPLOYEE_YN = 'Y', '임직원', NULL), IF(X1.PURCHASE_NONMEMBER_YN = 'Y', '비회원', NULL)) AS PURCHASE_TARGET /* 구매허용범위 */
             , X1.DISPLAY_WEB_PC_YN /* WEB PC 전시여부 */
             , X1.DISPLAY_WEB_MOBILE_YN /* WEB MOBILE 전시여부 */
             , X1.DISPLAY_APP_YN /* APP 전시여부 */
             , CONCAT_WS(', ', IF(X1.DISPLAY_WEB_PC_YN = 'Y', 'PC Web', NULL), IF(X1.DISPLAY_WEB_MOBILE_YN = 'Y', 'M Web', NULL), IF(X1.DISPLAY_APP_YN = 'Y', 'APP', NULL)) AS DISPLAY_TARGET /* 판매허용범위 */
             , X1.SALE_TYPE_CODE /* 판매유형코드 */
             , IFNULL(FN_COMN_CODE_DIC(X1.SALE_TYPE_CODE), '') AS SALE_TYPE_NAME /* 판매유형명 */
             , X1.SALE_STATUS_CODE /* 판매상태코드 */
             , IFNULL(FN_COMN_CODE_DIC(X1.SALE_STATUS_CODE), '') AS SALE_STATUS_NAME /* 판매상태명 */
             , X1.DISPLAY_YN /* 전시유무 */
             , DATE_FORMAT(X1.SALE_START_DT, '%Y-%m-%d %H:%i:%s') AS SALE_START_DATE /* 판매시작일 */
             , DATE_FORMAT(X1.SALE_END_DT, '%Y-%m-%d %H:%i:%s') AS SALE_END_DATE /* 판매종료일 */
             , X1.CATEGORY_STANDARD_ID /* 표준카테고리 ID */
             , FN_CTGRY_STD_FULL_NAME(X1.CATEGORY_STANDARD_ID) AS CATEGORY_STANDARD_DEPTH_NAME /* 표준카테고리명 */
             , X1.CATEGORY_ID /* 전시카테고리 ID */
             , (CASE WHEN X1.CATEGORY_ID IS NULL
                     THEN ''
                ELSE FN_CTGRY_FULL_NAME(X1.CATEGORY_ID)
                 END) AS CATEGORY_DEPTH_NAME /* 전시카테고리명 */
             , X1.WAREHOUSE_ID /* 출고처 ID */
             , X1.WAREHOUSE_NAME /* 출고처명 */
             , X1.SUPPLIER_ID /* 공급처 ID */
             , X1.SUPPLIER_COMPANY_ID /* 공급처 회사 ID */
             , X1.SUPPLIER_NAME /* 공급처명 */
             , X1.BRAND_ID /* 브랜드 ID */
             , X1.BRAND_NAME /* 브랜드명 */
             , X1.GOODS_OUTMALL_SALE_STAT
             , FN_COMN_CODE_DIC(X1.GOODS_OUTMALL_SALE_STAT) AS GOODS_OUTMALL_SALE_STAT_NAME
             , X1.DP_BRAND_ID 		/* 전시 브랜드 ID */
             , X1.DP_BRAND_NAME 	/* 전시 브랜드명 */
             , X1.ERP_BRAND_NAME	    /* 표준브랜드 */
             , X1.STORAGE_METHOD_TYPE_CODE /* 보관방법코드 */
             , FN_COMN_CODE_DIC(X1.STORAGE_METHOD_TYPE_CODE) AS STORAGE_METHOD_TYPE_NAME /* 보관방법명 */
             , X1.ERP_STOCK_IF_YN /* 재고연동유무 */
             , X1.ADDITIONAL_GOODS_YN /* 추가상품 유무 */
             , X1.COUPON_USE_YN /* 쿠폰사용유무 */
             , X1.MD_RECOMMEND_YN /* MD추천유무 */
             , X1.GOODS_PRICE_ID /* 상품가격 ID */
             , GP.IL_ITEM_PRICE_ID AS ITEM_PRICE_ID /* 품목가격 ID */
             , GP.IL_GOODS_DISCOUNT_ID AS GOODS_DISCOUNT_ID /* 상품할인 ID */
             , GP.STANDARD_PRICE /* 원가 */
             , GP.RECOMMENDED_PRICE /* 정상가 */
             , GP.SALE_PRICE /* 판매가 */
             , GP.DISCOUNT_TP AS DISCOUNT_TYPE_CODE /* 할인유형코드 */
             , FN_COMN_CODE_DIC(GP.DISCOUNT_TP) AS DISCOUNT_TYPE_NAME /* 할인유형명 */
             , DATE_FORMAT(GP.PRICE_START_DT, '%Y-%m-%d %H:%i:%s') AS PRICE_START_DATE /* 가격 시작일 */
             , DATE_FORMAT(GP.PRICE_END_DT, '%Y-%m-%d %H:%i:%s') AS PRICE_END_DATE /* 가격 종료일 */
             , 0 AS NORMAL_STOCK_COUNT /* 정상재고갯수 */    /* TODO : 재고 미구현으로 인하여 하드코딩 */
             , 0 AS IMMINENT_STOCK_COUNT /* 임박재고갯수 */  /* TODO : 재고 미구현으로 인하여 하드코딩 */
             , 0 AS DISPOSAL_STOCK_COUNT /* 폐기임박갯수 */  /* TODO : 재고 미구현으로 인하여 하드코딩 */
             , (SELECT II.C_IMG
                  FROM IL_ITEM_IMG II
                 WHERE II.IL_ITEM_CD = X1.ITEM_CODE
                   AND II.BASIC_YN = 'Y'
                 LIMIT 1) AS GOODS_IMAGE_PATH /* 상품이미지경로 */
             , X1.UR_SUPPLIER_WAREHOUSE_ID
             , X1.IL_ITEM_WAREHOUSE_ID
             , X1.PRE_ORDER_YN
             , X1.ERP_CTGRY_LV1_ID
             , X1.NOT_IF_STOCK_CNT
             , IFNULL(X1.STOCK_CLOSING_COUNT, '') AS STOCK_CLOSING_COUNT
             , X1.STOCK_CONFIRMED_COUNT
             , X1.STOCK_SCHEDULED_COUNT
             , X1.STOCK_OFFLINE_COUNT
			 , X1.STOCK_ORDER_YN
             , CASE WHEN X1.GOODS_TYPE_CODE = 'GOODS_TYPE.PACKAGE' THEN IFNULL(X1.PACKAGE_EXTINCTION_YN, 'N')
               ELSE X1.EXTINCTION_YN END AS EXTINCTION_YN
             , X1.PRE_ORDER_NM
             , X1.IL_ITEM_STOCK_ID
             , X1.ITEM_NM
             , X1.UNLIMIT_STOCK_YN
             , IFNULL(X1.SEARCH_KYWRD, '') AS SEARCH_KYWRD
             , X1.ERP_CATEGORY_1 /* ERP카테고리 1 */
             , X1.ERP_CATEGORY_2 /* ERP카테고리 2 */
             , X1.ERP_CATEGORY_3 /* ERP카테고리 3 */
             , X1.ERP_CATEGORY_4 /* ERP카테고리 4 */
             , X1.ERP_ITEM_GRP /* 상품군(ERP) */
             , X1.ERP_STORAGE_METHOD /* 보관방법(ERP) */
             , X1.ERP_ORIGIN_NM /* 원산지(ERP) */
             , X1.BOS_ORIGIN_NM /* 원산지(BOS) */
             , X1.DISTRIBUTION_PERIOD /* 유통기간 */
             , X1.BOX_VOLUME /* 박스체적 */
             , X1.PCS_PER_BOX /* 박스입수량 */
             , X1.UOM /* UOM */
             , X1.SIZE_PER_PACKAGE /* 포장단위별 용량 */
             , X1.SIZE_UNIT /* 용량(중량)단위 */
             , X1.QTY_PER_PACKAGE /* 구성정보 용량 */
             , IFNULL(X1.PACKAGE_UNIT, '') AS PACKAGE_UNIT /* 구성정보 단위 */
             , X1.PDM_GROUP_CD /* PDM 그룹코드 */
             , IF(X1.DISPLAY_YN = 'Y', '전시', '미전시') AS DISPLAY_YN_NM /* 전시상태 */
             , X1.TAX_NM /* 과세구분 */
             , X1.RENTAL_FEE_PER_MONTH /* 렌탈료/월 */
             , X1.RENTAL_DUE_MONTH /* 렌탈 의무사용기간(월) */
             , X1.RENTAL_DEPOSIT /* 렌탈 계약금 */
             , X1.RENTAL_INSTALL_FEE /* 렌탈 설치비 */
             , X1.RENTAL_REGIST_FEE /* 렌탈 등록비 */
             , X1.GOODS_DAILY_ALLERGY_YN /* (일일상품)알러지 식단 */
             , X1.GOODS_DAILY_BULK_YN /* (일일상품)일괄배달설정 여부 */
			 , X1.SPEC_MASTER_NM /* 상품정보고시 상품군 */
			 , X1.NUTRITION_DISP_YN /* 영양정보 표시 */
			 , X1.RETURN_PERIOD_NM /* 반품가능기간 */
             , FN_COMN_CODE_DIC(X1.UNDELIVERABLE_AREA_TP) AS UNDELIVERABLE_AREA_TP_NM /* 배송불가지역 */
             , IFNULL(X1.VIDEO_URL, '') AS VIDEO_URL /* 동영상 URL */
             , X1.WAREHOUSE_ADDRESS AS WAREHOUSE_ADDRESS /* 출고처주소 */
             , IFNULL(X1.ERP_PO_TYPE, '') AS ERP_PO_TYPE /* ERP 발주유형 */
             , IFNULL(X1.PO_TP_NM, '없음') AS PO_TP_NM /* BOS 발주유형 */
 			 , IFNULL(X1.SHIPPING_TEMPLATE_NAME, '') AS SHIPPING_TEMPLATE_NAME /* 배송정책명 */
			 , IF(X1.SALE_SHOP_YN = 'Y', '매장', '') AS SALE_SHOP_YN_NM
			 , CASE
					WHEN X1.GOODS_TYPE_CODE = 'GOODS_TYPE.DAILY' THEN IFNULL((
						SELECT
							GROUP_CONCAT(DISTINCT FN_COMN_CODE_DIC(IGDC.GOODS_CYCLE_TP))
						FROM
							IL_GOODS_DAILY_CYCLE IGDC
						WHERE
							IGDC.IL_GOODS_ID = X1.GOODS_ID
					), '')
					ELSE ''
			END AS GOODS_DAILY_CYCLE
 			 , IFNULL(X1.ERP_ITEM_NM, '') AS ERP_ITEM_NM /* ERP 품목명 */
             , TRUNCATE((CAST(GP.RECOMMENDED_PRICE AS SIGNED) - CAST(GP.SALE_PRICE AS SIGNED)) / GP.RECOMMENDED_PRICE * 100, 0) AS DISCOUNT_RATIO
             , CAST(GP.RECOMMENDED_PRICE AS SIGNED) - CAST(GP.SALE_PRICE AS SIGNED) AS DISCOUNT_AMT
             , CASE
             	WHEN EMP_DIS.IL_GOODS_DISCOUNT_ID IS NOT NULL THEN DATE_FORMAT(EMP_DIS.DISCOUNT_START_DT, '%Y-%m-%d %H:%i:%s')
             	ELSE DATE_FORMAT(X1.CREATE_DT, '%Y-%m-%d %H:%i:%s')
             END AS EMPL_PRICE_START_DATE
             , CASE
             	WHEN EMP_DIS.IL_GOODS_DISCOUNT_ID IS NOT NULL THEN DATE_FORMAT(EMP_DIS.DISCOUNT_END_DT, '%Y-%m-%d %H:%i:%s')
             	ELSE '2999-12-31 23:59:59'
             END AS EMPL_PRICE_END_DATE
             , CASE
             	WHEN EMP_DIS.IL_GOODS_DISCOUNT_ID IS NOT NULL THEN '개별'
             	ELSE '기본'
             END AS EMPL_DISCOUNT_TYPE_NAME
             , CASE
				WHEN X1.GOODS_TYPE_CODE = 'GOODS_TYPE.PACKAGE' THEN TRUNCATE((GP.RECOMMENDED_PRICE - X1.PACKAGE_EMP_SALE_PRICE)/GP.RECOMMENDED_PRICE * 100, 0)
             	WHEN EMP_DIS.IL_GOODS_DISCOUNT_ID IS NOT NULL THEN EMP_DIS.DISCOUNT_RATIO
             	WHEN BG_DIS.DISCOUNT_RATIO IS NOT NULL THEN BG_DIS.DISCOUNT_RATIO
             	ELSE 0
             END AS EMPL_DISCOUNT_RATIO
             , CASE
				WHEN X1.GOODS_TYPE_CODE = 'GOODS_TYPE.PACKAGE' THEN X1.PACKAGE_EMP_SALE_PRICE
             	WHEN EMP_DIS.IL_GOODS_DISCOUNT_ID IS NOT NULL THEN TRUNCATE(GP.RECOMMENDED_PRICE * (100 - EMP_DIS.DISCOUNT_RATIO)/100, -1)
             	WHEN BG_DIS.DISCOUNT_RATIO IS NOT NULL THEN TRUNCATE(GP.RECOMMENDED_PRICE * (100 - BG_DIS.DISCOUNT_RATIO)/100, -1)
             	ELSE 0
             END AS EMPL_DISCOUNT_SALE_PRICE
             , CASE
				WHEN MALL_CTG.IL_CTGRY_ID IS NULL THEN ''
				ELSE FN_CTGRY_FULL_NAME(MALL_CTG.IL_CTGRY_ID)
			END AS MALL_IN_MALL_CATEGORY_NM /* 몰인몰 카테고리명 */
			, X1.GOODS_REGIST_APPR_STAT									/* 상품 등록 승인 상태 코드 */
			, X1.GOODS_REGIST_APPR_STAT_NM								/* 상품 등록 승인 상태명 */
			, X1.GOODS_CLIENT_APPR_STAT									/* 상품 거래처 수정 승인 상태 코드 */
			, X1.GOODS_CLIENT_APPR_STAT_NM								/* 상품 거래처 수정 승인 상태명 */
			, X1.ITEM_CLIENT_APPR_STAT									/* 품목 거래처 수정 승인 상태 코드 */
			, X1.ITEM_CLIENT_APPR_STAT_NM								/* 품목 거래처 수정 승인 상태명 */
			, CASE
				WHEN X1.GOODS_REGIST_APPR_STAT IS NOT NULL AND X1.GOODS_REGIST_APPR_STAT IN ('APPR_STAT.REQUEST', 'APPR_STAT.SUB_APPROVED')
					THEN CONCAT('상품등록/', X1.GOODS_REGIST_APPR_STAT_NM)
				WHEN X1.ITEM_CLIENT_APPR_STAT IS NOT NULL AND X1.ITEM_CLIENT_APPR_STAT IN ('APPR_STAT.REQUEST', 'APPR_STAT.SUB_APPROVED')
					THEN CONCAT('거래처 품목수정/', X1.ITEM_CLIENT_APPR_STAT_NM)
				WHEN X1.GOODS_CLIENT_APPR_STAT IS NOT NULL AND X1.GOODS_CLIENT_APPR_STAT IN ('APPR_STAT.REQUEST', 'APPR_STAT.SUB_APPROVED')
					THEN CONCAT('거래처 상품수정/', X1.GOODS_CLIENT_APPR_STAT_NM)
				WHEN X1.GOODS_REGIST_APPR_STAT IS NOT NULL
					THEN CONCAT('상품등록/', X1.GOODS_REGIST_APPR_STAT_NM)
				ELSE ''
			END AS APPR_STAT_NM
            , X1.CUTOFF_TIME
            , X1.SHIPPING_PATTERN_TITLE
        FROM (
                SELECT G.IL_GOODS_ID AS GOODS_ID
                     , I.IL_ITEM_CD AS ITEM_CODE
                     , I.ERP_IF_YN
                     , I.ITEM_TP AS ITEM_TP
                     , IFNULL(I.ITEM_BARCODE, '') AS ITEM_BARCODE
                     , IFNULL(I.ERP_ITEM_BARCODE, '') AS ERP_ITEM_BARCODE
                     , IFNULL(I.ERP_O2O_EXPOSURE_TP, '') AS ERP_O2O_EXPOSURE_TP
                     , IFNULL(I.ERP_PRODUCT_TP, '') AS ERP_PRODUCT_TP
                     , G.GOODS_NM AS GOODS_NAME
                     , G.CREATE_DT
                     , G.MODIFY_DT
                     , G.PROMOTION_NM
                     , G.PROMOTION_NM_START_DT
                     , G.PROMOTION_NM_END_DT
                     , G.GOODS_TP AS GOODS_TYPE_CODE
                     , G.PURCHASE_MEMBER_YN
                     , G.PURCHASE_EMPLOYEE_YN
                     , G.PURCHASE_NONMEMBER_YN
                     , G.DISP_WEB_PC_YN AS DISPLAY_WEB_PC_YN
                     , G.DISP_WEB_MOBILE_YN AS DISPLAY_WEB_MOBILE_YN
                     , G.DISP_APP_YN AS DISPLAY_APP_YN
                     , G.SALE_TP AS SALE_TYPE_CODE
                     , G.GOODS_OUTMALL_SALE_STAT
                     , G.SALE_STATUS AS SALE_STATUS_CODE
                     , G.DISP_YN AS DISPLAY_YN
                     , G.SALE_START_DT
                     , G.SALE_END_DT
                     , I.IL_CTGRY_STD_ID AS CATEGORY_STANDARD_ID
                     , (SELECT T1.IL_CTGRY_ID
                          FROM IL_CTGRY_PRNTS_INFO T1
                          JOIN IL_GOODS_CTGRY T2
                            ON T2.IL_CTGRY_ID = T1.IL_CTGRY_ID
                          JOIN IL_CTGRY T3
                            ON T3.IL_CTGRY_ID = T1.IL_CTGRY_ID
                         WHERE T3.USE_YN = 'Y'
                           AND T3.DEL_YN = 'N'
                           AND T2.IL_GOODS_ID = G.IL_GOODS_ID
                        <choose>
                            <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(findKeyword)'> <!-- 복수검색 -->
                                AND T3.MALL_DIV = 'MALL_DIV.PULMUONE'
                                AND T2.BASIC_YN = 'Y'
                            </when>
                            <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(categoryType)'>
                            	<choose>
                            		<when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(categoryType, "CATEGORY_STANDARD")'> <!-- 표준카테고리 -->
		                                AND T3.MALL_DIV = 'MALL_DIV.PULMUONE'
		                                AND T2.BASIC_YN = 'Y'
		                            </when>
		                            <otherwise> <!-- 전시카테고리, 몰인몰(올가), 몰인몰(베이비밀), 몰인몰(잇슬림) -->
		                                AND T3.MALL_DIV = (CASE WHEN 'CATEGORY_PULMUONE' = #{categoryType}
		                                                        THEN 'MALL_DIV.PULMUONE'
		                                                        WHEN 'CATEGORY_ORGA' = #{categoryType}
		                                                        THEN 'MALL_DIV.ORGA'
		                                                        WHEN 'CATEGORY_BABYMEAL' = #{categoryType}
		                                                        THEN 'MALL_DIV.BABYMEAL'
		                                                        WHEN 'CATEGORY_EATSLIM' = #{categoryType}
		                                                        THEN 'MALL_DIV.EATSLIM'
		                                                   ELSE 'MALL_DIV.PULMUONE'
		                                                    END)
		                                <choose>
		                                    <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(categoryDepth4)">
		                                        AND T1.CTGRY_ID_DEPTH1 = #{categoryDepth1}
		                                        AND T1.CTGRY_ID_DEPTH2 = #{categoryDepth2}
		                                        AND T1.CTGRY_ID_DEPTH3 = #{categoryDepth3}
		                                        AND T1.CTGRY_ID_DEPTH4 = #{categoryDepth4} /* 전시카테고리 세분류 */
		                                    </when>
		                                    <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(categoryDepth3)">
		                                        AND T1.CTGRY_ID_DEPTH1 = #{categoryDepth1}
		                                        AND T1.CTGRY_ID_DEPTH2 = #{categoryDepth2}
		                                        AND T1.CTGRY_ID_DEPTH3 = #{categoryDepth3} /* 전시카테고리 소분류 */
		                                    </when>
		                                    <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(categoryDepth2)">
		                                        AND T1.CTGRY_ID_DEPTH1 = #{categoryDepth1}
		                                        AND T1.CTGRY_ID_DEPTH2 = #{categoryDepth2} /* 전시카테고리 중분류 */
		                                    </when>
		                                    <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(categoryDepth1)">
		                                        AND T1.CTGRY_ID_DEPTH1 = #{categoryDepth1} /* 전시카테고리 대분류 */
		                                    </when>
		                                    <otherwise>
		                                        AND T2.BASIC_YN = 'Y'
		                                    </otherwise>
		                                </choose>
		                            </otherwise>
                            	</choose>

                            </when>

                        </choose>
                         LIMIT 1) AS CATEGORY_ID
                     , G.UR_WAREHOUSE_ID AS WAREHOUSE_ID
                     , W.WAREHOUSE_NM AS WAREHOUSE_NAME
                     , I.UR_SUPPLIER_ID AS SUPPLIER_ID
                     , S.UR_COMPANY_ID AS SUPPLIER_COMPANY_ID
                     , C.COMP_NM AS SUPPLIER_NAME
                     , I.UR_BRAND_ID AS BRAND_ID
                     , I.DP_BRAND_ID AS DP_BRAND_ID
                     , B.BRAND_NM AS BRAND_NAME
                     , I.ERP_BRAND_NM AS ERP_BRAND_NAME
                     , J.DP_BRAND_NM AS DP_BRAND_NAME
                     , I.STORAGE_METHOD_TP AS STORAGE_METHOD_TYPE_CODE
                     , I.ERP_STOCK_IF_YN
                     , USW.UR_SUPPLIER_WAREHOUSE_ID
                     , IIW.IL_ITEM_WAREHOUSE_ID
                     , CASE
						WHEN G.GOODS_TP = 'GOODS_TYPE.DISPOSAL' THEN 'N' /* 폐기임박상품 - 한정재고 */
						ELSE IIW.PRE_ORDER_YN
					END AS PRE_ORDER_YN
                     , I.ERP_CTGRY_LV1_ID
                     , CASE WHEN (SELECT COUNT(1)
                                    FROM IL_GOODS_ADDITIONAL_GOODS_MAPPING
                                   WHERE IL_GOODS_ID = G.IL_GOODS_ID
                                   LIMIT 1) <![CDATA[ > ]]> 0
                            THEN 'Y'
                       ELSE 'N'
                        END ADDITIONAL_GOODS_YN
                     , G.COUPON_USE_YN
                     , G.MD_RECOMMEND_YN
                     , (SELECT IL_GOODS_PRICE_ID
                          FROM IL_GOODS_PRICE
                         WHERE IL_GOODS_ID = G.IL_GOODS_ID
                           AND NOW() BETWEEN PRICE_START_DT AND PRICE_END_DT
                         ORDER BY IL_GOODS_PRICE_ID DESC
                         LIMIT 1) AS GOODS_PRICE_ID
                     , I.EXTINCTION_YN
                     , ETT.EXTINCTION_YN AS PACKAGE_EXTINCTION_YN
                     , W.STOCK_ORDER_YN
                     , IIW.UNLIMIT_STOCK_YN
                     , IIW.PRE_ORDER_TP
                     , CASE
						WHEN G.GOODS_TP = 'GOODS_TYPE.DISPOSAL' THEN '한정재고' /* 폐기임박상품 - 한정재고 */
						WHEN W.STOCK_ORDER_YN = 'N' THEN (
							CASE
								WHEN IIW.UNLIMIT_STOCK_YN = 'Y' THEN '재고미연동(무제한)'
								WHEN IIW.UNLIMIT_STOCK_YN = 'N' THEN '재고미연동(한정재고)'
								ELSE '재고미연동'
							END
						)
						WHEN W.STOCK_ORDER_YN = 'Y' THEN (
							CASE
								WHEN IIW.PRE_ORDER_YN = 'N' THEN '한정재고'
								WHEN IIW.PRE_ORDER_YN = 'Y' THEN (
									CASE
										WHEN IIW.PRE_ORDER_TP = 'PRE_ORDER_TP.NOT_ALLOWED' THEN '선주문(한정재고)'
										WHEN IIW.PRE_ORDER_TP IN ('PRE_ORDER_TP.LIMITED_ALLOWED', 'PRE_ORDER_TP.UNLIMITED_ALLOWED') THEN (
											CASE
												WHEN S.SUPPLIER_CD = 'PF' THEN '선주문(식품)'
												WHEN S.SUPPLIER_CD = 'OG' AND IPT.ERP_PO_TP = 'ERP_PO_TP.R1' AND I.ERP_CTGRY_LV1_ID = '과일' THEN '선주문(과일)'
												WHEN S.SUPPLIER_CD = 'OG' AND IPT.ERP_PO_TP = 'ERP_PO_TP.R1' AND I.ERP_CTGRY_LV1_ID IS NOT NULL AND I.ERP_CTGRY_LV1_ID NOT IN ('과일', '채소', '') THEN '선주문(가공)'
												ELSE '선주문(미정)'
											END
										)
										ELSE '선주문'
									END
								)
								ELSE '재고연동'
							END
						)
						ELSE ''
					END AS PRE_ORDER_NM
					, CASE
							WHEN W.STOCK_ORDER_YN = 'Y' THEN (
								IFNULL((
									SELECT
										A.STOCK_QTY AS CLOSED
									FROM
										IL_ITEM_ERP_STOCK A
									WHERE
										A.IL_ITEM_WAREHOUSE_ID = IIW.IL_ITEM_WAREHOUSE_ID
										AND A.STOCK_TP = 'ERP_STOCK_TP.CLOSED'
										AND A.BASE_DT = CURDATE()
									ORDER BY A.CREATE_DT DESC
									LIMIT 1
								), 0) /* 전일마감재고 */
							)
							WHEN W.STOCK_ORDER_YN = 'N' AND IIW.UNLIMIT_STOCK_YN = 'Y' THEN '무제한재고'
							WHEN W.STOCK_ORDER_YN = 'N' AND IIW.UNLIMIT_STOCK_YN = 'N' THEN IIW.NOT_IF_STOCK_CNT
							ELSE ''
						END AS STOCK_CLOSING_COUNT
					 , (
						SELECT
							IFNULL(SUM(IF(STOCK_TP = 'ERP_STOCK_TP.CONFIRMED', STOCK_QTY, 0)), 0) as CLOSED
						FROM IL_ITEM_ERP_STOCK A
						WHERE IL_ITEM_WAREHOUSE_ID = IIW.IL_ITEM_WAREHOUSE_ID
						AND BASE_DT = CURDATE()
					  ) AS STOCK_CONFIRMED_COUNT
					 , (
						SELECT
							IFNULL(SUM(IF(STOCK_TP = 'ERP_STOCK_TP.SCHEDULED', STOCK_QTY, 0)), 0) as CLOSED
						FROM IL_ITEM_ERP_STOCK A
						WHERE IL_ITEM_WAREHOUSE_ID = IIW.IL_ITEM_WAREHOUSE_ID
						AND BASE_DT = CURDATE()
					  ) AS STOCK_SCHEDULED_COUNT
					 , (
						SELECT
							IFNULL(SUM(IF(STOCK_TP = 'ERP_STOCK_TP.OFFLINE', STOCK_QTY, 0)), 0) as CLOSED
						FROM IL_ITEM_ERP_STOCK A
						WHERE IL_ITEM_WAREHOUSE_ID = IIW.IL_ITEM_WAREHOUSE_ID
						AND BASE_DT = CURDATE()
					  ) AS STOCK_OFFLINE_COUNT
					 ,(
					 	SELECT
							IL_ITEM_STOCK_ID
						FROM IL_ITEM_STOCK A
						WHERE IL_ITEM_WAREHOUSE_ID = IIW.IL_ITEM_WAREHOUSE_ID
						AND BASE_DT = CURDATE()
					  ) AS IL_ITEM_STOCK_ID
					 , I.ITEM_NM
					 , IIW.NOT_IF_STOCK_CNT
					 , G.SEARCH_KYWRD
                    , IFNULL(I.ERP_CTGRY_LV1_ID,'') AS ERP_CATEGORY_1
                    , IFNULL(I.ERP_CTGRY_LV2_ID,'') AS ERP_CATEGORY_2
                    , IFNULL(I.ERP_CTGRY_LV3_ID,'') AS ERP_CATEGORY_3
                    , IFNULL(I.ERP_CTGRY_LV4_ID,'') AS ERP_CATEGORY_4
	                , IFNULL(I.ERP_ITEM_GRP, '') AS ERP_ITEM_GRP /* 상품군(ERP) */
                	, IFNULL(I.ERP_STORAGE_METHOD, '') AS ERP_STORAGE_METHOD /* 보관방법(ERP) */
	                , IFNULL(I.ERP_ORIGIN_NM, '') AS ERP_ORIGIN_NM /* 원산지(ERP) */
                	, FN_COMN_CODE_DIC(I.ORIGIN_TP) AS BOS_ORIGIN_NM /* 원산지(BOS) */
   		            , IFNULL(I.DISTRIBUTION_PERIOD, '') AS DISTRIBUTION_PERIOD /* 유통기간 */
                	, CONCAT(IFNULL(TRIM(I.BOX_WIDTH)+0, '-'), ' X ', IFNULL(TRIM(I.BOX_DEPTH)+0, '-'), ' X ', IFNULL(TRIM(I.BOX_HEIGHT)+0, '-')) AS BOX_VOLUME /* 박스체적 */
	                , IFNULL(I.PCS_PER_BOX, '') AS PCS_PER_BOX /* 박스입수량 */
	                , IFNULL(I.OMS, '') AS UOM /* UOM */
					, CASE
						WHEN I.SIZE_PER_PACKAGE IS NULL THEN ''
						ELSE TRIM(I.SIZE_PER_PACKAGE)+0
					END AS SIZE_PER_PACKAGE /* 포장단위별 용량 */
					, CASE
						WHEN I.SIZE_UNIT_ETC IS NOT NULL AND TRIM(I.SIZE_UNIT_ETC) != '' THEN I.SIZE_UNIT_ETC
						ELSE IFNULL(FN_COMN_CODE_DIC(I.SIZE_UNIT), '')
					END AS SIZE_UNIT /* 용량(중량)단위 */
					, IFNULL(I.QTY_PER_PACKAGE, '') AS QTY_PER_PACKAGE /* 구성정보 용량 */
					, CASE
						WHEN I.PACKAGE_UNIT_ETC IS NOT NULL AND TRIM(I.PACKAGE_UNIT_ETC) != '' THEN I.PACKAGE_UNIT_ETC
						ELSE IFNULL(FN_COMN_CODE_DIC(I.PACKAGE_UNIT), '')
					END AS PACKAGE_UNIT /* 구성정보 단위 */
	                , IFNULL(I.PDM_GROUP_CD, '') AS PDM_GROUP_CD /* PDM 그룹코드 */
	                , CASE
						WHEN I.TAX_YN = 'Y' THEN '과세'
						WHEN I.TAX_YN = 'N' THEN '면세'
						ELSE ''
					END AS TAX_NM /* 과세구분 */
	                , I.RENTAL_FEE_PER_MONTH AS RENTAL_FEE_PER_MONTH /* 렌탈료/월 */
	                , I.RENTAL_DUE_MONTH AS RENTAL_DUE_MONTH /* 렌탈 의무사용기간(월) */
	                , I.RENTAL_DEPOSIT AS RENTAL_DEPOSIT /* 렌탈 계약금 */
	                , I.RENTAL_INSTALL_FEE AS RENTAL_INSTALL_FEE /* 렌탈 설치비 */
	                , I.RENTAL_REGIST_FEE AS RENTAL_REGIST_FEE /* 렌탈 등록비 */
	                , IFNULL(G.GOODS_DAILY_ALLERGY_YN, '') AS GOODS_DAILY_ALLERGY_YN /* (일일상품)알러지 식단 */
	                , IFNULL(G.GOODS_DAILY_BULK_YN, '') AS GOODS_DAILY_BULK_YN /* (일일상품)일괄배달설정 여부 */
					, ISM.SPEC_MASTER_NM AS SPEC_MASTER_NM /* 상품정보고시 상품군 */
					, I.NUTRITION_DISP_YN AS NUTRITION_DISP_YN /* 영양정보 표시 */
					, CASE
						WHEN I.RETURN_PERIOD > 0 THEN CONCAT(I.RETURN_PERIOD, '일')
						ELSE '불가'
					END AS RETURN_PERIOD_NM /* 반품가능기간 */
	                , I.UNDELIVERABLE_AREA_TP AS UNDELIVERABLE_AREA_TP /* 배송불가지역 */
	                , I.VIDEO_URL AS VIDEO_URL /* 동영상 URL */
                    , CONCAT( W.ADDRESS1, ' ', IFNULL(W.ADDRESS2, '') ) AS WAREHOUSE_ADDRESS
	                , I.ERP_PO_TYPE AS ERP_PO_TYPE /* ERP 발주유형 */
	                , IPT.PO_TP_NM AS PO_TP_NM /* BOS 발주유형 */
					, SP.NAME AS SHIPPING_TEMPLATE_NAME /* 배송정책명 */
	                , G.SALE_SHOP_YN AS SALE_SHOP_YN /* 판매유형(매장) */
		 			, I.ERP_ITEM_NM AS ERP_ITEM_NM /* ERP 품목명 */
					, G.PACKAGE_UNIT_DISP_YN AS PACKAGE_UNIT_DISP_YN
					, G.PACKAGE_UNIT_DESC AS PACKAGE_UNIT_DESC
					, CASE
						WHEN G.GOODS_TP = 'GOODS_TYPE.PACKAGE'
							THEN (
								SELECT
									SUM(
										CASE
											WHEN EMP_DIS.IL_GOODS_DISCOUNT_ID IS NOT NULL
												THEN TRUNCATE(IIP.RECOMMENDED_PRICE * IGPGM.GOODS_QTY * (100 - IGPIFDP.DISCOUNT_RATIO)/100, -1)
											WHEN BG_DIS.DISCOUNT_RATIO IS NOT NULL
												THEN TRUNCATE(IIP.RECOMMENDED_PRICE * IGPGM.GOODS_QTY * (100 - BG_DIS.DISCOUNT_RATIO)/100, -1)
											ELSE IIP.RECOMMENDED_PRICE
										END
									)
								FROM
									IL_GOODS_PACKAGE_GOODS_MAPPING IGPGM
									INNER JOIN IL_GOODS TG
										ON TG.IL_GOODS_ID = IGPGM.TARGET_GOODS_ID
									INNER JOIN IL_ITEM TI
										ON TI.IL_ITEM_CD = TG.IL_ITEM_CD
									INNER JOIN IL_ITEM_PRICE IIP
										ON IIP.IL_ITEM_CD = TI.IL_ITEM_CD
										AND NOW() BETWEEN IIP.START_DT AND IIP.END_DT
									LEFT JOIN IL_GOODS_DISCOUNT EMP_DIS
										ON EMP_DIS.IL_GOODS_ID = IGPGM.IL_GOODS_ID
										AND EMP_DIS.DISCOUNT_TP = 'GOODS_DISCOUNT_TP.EMPLOYEE'
										AND EMP_DIS.USE_YN = 'Y'
										AND NOW() BETWEEN EMP_DIS.DISCOUNT_START_DT AND EMP_DIS.DISCOUNT_END_DT
									LEFT JOIN IL_GOODS_PACKAGE_ITEM_FIXED_DISCOUNT_PRICE IGPIFDP
										ON IGPIFDP.IL_GOODS_DISCOUNT_ID = EMP_DIS.IL_GOODS_DISCOUNT_ID
										AND IGPIFDP.IL_GOODS_PACKAGE_GOODS_MAPPING_ID = IGPGM.IL_GOODS_PACKAGE_GOODS_MAPPING_ID
									LEFT JOIN (
										SELECT
											BGB.UR_BRAND_ID
											, BG.DISCOUNT_RATIO
										FROM
											PS_EMPL_DISC_BRAND_GRP BG
											INNER JOIN PS_EMPL_DISC_BRAND_GRP_BRAND BGB
												ON BGB.PS_EMPL_DISC_BRAND_GRP_ID = BG.PS_EMPL_DISC_BRAND_GRP_ID
									) BG_DIS
										ON BG_DIS.UR_BRAND_ID = TI.UR_BRAND_ID
								WHERE
									IGPGM.IL_GOODS_ID = G.IL_GOODS_ID
									AND IGPGM.GOODS_TP NOT IN ('GOODS_TYPE.GIFT', 'GOODS_TYPE.GIFT_FOOD_MARKETING')
								GROUP BY IGPGM.IL_GOODS_ID
							)
						ELSE 0
					END AS PACKAGE_EMP_SALE_PRICE
					, GRIGA.APPR_STAT AS GOODS_REGIST_APPR_STAT										/* 상품 등록 승인 상태 코드 */
					, GRIGA.APPR_STAT_NAME AS GOODS_REGIST_APPR_STAT_NM								/* 상품 등록 승인 상태명 */
					, GCIGA.APPR_STAT AS GOODS_CLIENT_APPR_STAT										/* 상품 거래처 수정 승인 상태 코드 */
					, GCIGA.APPR_STAT_NAME AS GOODS_CLIENT_APPR_STAT_NM								/* 상품 거래처 수정 승인 상태명 */
					, ICIIA.APPR_STAT AS ITEM_CLIENT_APPR_STAT										/* 품목 거래처 수정 승인 상태 코드 */
					, ICIIA.APPR_STAT_NAME AS ITEM_CLIENT_APPR_STAT_NM								/* 품목 거래처 수정 승인 상태명 */
                    , TIME_FORMAT(W.CUTOFF_TIME , "%H:%i") AS CUTOFF_TIME
                    , (SELECT TITLE FROM PS_SHIPPING_PATTERN PSP WHERE PSP.PS_SHIPPING_PATTERN_ID = W.PS_SHIPPING_PATTERN_ID ) AS SHIPPING_PATTERN_TITLE
                  FROM IL_GOODS G
                  JOIN IL_ITEM I
                    ON I.IL_ITEM_CD = G.IL_ITEM_CD
                  JOIN UR_WAREHOUSE W
                    ON W.UR_WAREHOUSE_ID = G.UR_WAREHOUSE_ID
                  JOIN UR_SUPPLIER S
                    ON S.UR_SUPPLIER_ID = I.UR_SUPPLIER_ID
                  JOIN UR_SUPPLIER_WAREHOUSE USW
					ON G.UR_WAREHOUSE_ID = USW.UR_WAREHOUSE_ID
					AND I.UR_SUPPLIER_ID = USW.UR_SUPPLIER_ID
				  JOIN IL_ITEM_WAREHOUSE IIW
					ON USW.UR_SUPPLIER_WAREHOUSE_ID = IIW.UR_SUPPLIER_WAREHOUSE_ID
					AND I.IL_ITEM_CD = IIW.IL_ITEM_CD
                  JOIN UR_COMPANY C
                    ON C.UR_COMPANY_ID = S.UR_COMPANY_ID
                  JOIN UR_BRAND B
                    ON B.UR_BRAND_ID = I.UR_BRAND_ID
				INNER JOIN IL_SPEC_MASTER ISM
					ON ISM.IL_SPEC_MASTER_ID = I.IL_SPEC_MASTER_ID
				LEFT JOIN IL_GOODS_SHIPPING_TEMPLATE GDSP
					ON G.IL_GOODS_ID = GDSP.IL_GOODS_ID
					AND G.UR_WAREHOUSE_ID = GDSP.UR_WAREHOUSE_ID
				LEFT JOIN IL_SHIPPING_TEMPLATE SP
					ON GDSP.ORIG_IL_SHIPPING_TMPL_ID = SP.ORIG_IL_SHIPPING_TMPL_ID
					AND SP.DEL_YN  = 'N'
                LEFT JOIN  DP_BRAND     J
                   ON  I.DP_BRAND_ID = J.DP_BRAND_ID
				LEFT JOIN IL_PO_TP IPT ON
					IPT.IL_PO_TP_ID = IIW.IL_PO_TP_ID
				LEFT JOIN (
					SELECT
						IG.IL_GOODS_ID
					,	IG.GOODS_NM
					,	IG.SALE_STATUS
					,	IG.GOODS_TP
					,	II.EXTINCTION_YN
					FROM
						IL_GOODS IG
					INNER JOIN IL_GOODS_PACKAGE_GOODS_MAPPING IGPGM ON IGPGM.IL_GOODS_ID = IG.IL_GOODS_ID
					INNER JOIN IL_GOODS TIG ON TIG.IL_GOODS_ID = IGPGM.TARGET_GOODS_ID
					INNER JOIN IL_ITEM II ON II.IL_ITEM_CD = TIG.IL_ITEM_CD
					WHERE
						II.EXTINCTION_YN = 'Y'
					GROUP BY IG.IL_GOODS_ID
				) ETT ON ETT.IL_GOODS_ID = G.IL_GOODS_ID
				LEFT JOIN (
					SELECT
						IGA.IL_GOODS_ID
						, IGA.APPR_STAT
						, DIC.NAME AS APPR_STAT_NAME
					FROM
						IL_GOODS_APPR IGA
						LEFT JOIN (
							SELECT
								SCC.ST_COMN_CODE_ID AS CODE
								, GDM.DIC_MST_NM AS NAME
							FROM
								ST_COMN_CODE SCC
								INNER JOIN GB_DIC_MST GDM
									ON SCC.GB_DIC_MST_ID = GDM.GB_DIC_MST_ID
							WHERE
								SCC.ST_COMN_CODE_MST_CD = 'APPR_STAT'
								AND SCC.USE_YN = UPPER('Y')
						) DIC
							ON IGA.APPR_STAT = DIC.CODE
					WHERE
						IGA.IL_GOODS_APPR_ID IN (
							SELECT
								MAX(IL_GOODS_APPR_ID) AS IL_GOODS_APPR_ID
							FROM
								IL_GOODS_APPR
							WHERE
								APPR_KIND_TP = 'APPR_KIND_TP.GOODS_REGIST'
							GROUP BY IL_GOODS_ID
						)
				) GRIGA
					ON GRIGA.IL_GOODS_ID = G.IL_GOODS_ID
				LEFT JOIN (
					SELECT
						IGA.IL_GOODS_ID
						, IGA.APPR_STAT
						, DIC.NAME AS APPR_STAT_NAME
					FROM
						IL_GOODS_APPR IGA
						LEFT JOIN (
							SELECT
								SCC.ST_COMN_CODE_ID AS CODE
								, GDM.DIC_MST_NM AS NAME
							FROM
								ST_COMN_CODE SCC
								INNER JOIN GB_DIC_MST GDM
									ON SCC.GB_DIC_MST_ID = GDM.GB_DIC_MST_ID
							WHERE
								SCC.ST_COMN_CODE_MST_CD = 'APPR_STAT'
								AND SCC.USE_YN = UPPER('Y')
						) DIC
							ON IGA.APPR_STAT = DIC.CODE
					WHERE
						IGA.IL_GOODS_APPR_ID IN (
							SELECT
								MAX(IL_GOODS_APPR_ID) AS IL_GOODS_APPR_ID
							FROM
								IL_GOODS_APPR
							WHERE
								APPR_KIND_TP = 'APPR_KIND_TP.GOODS_CLIENT'
							GROUP BY IL_GOODS_ID
						)
						AND IGA.APPR_STAT IN ('APPR_STAT.REQUEST', 'APPR_STAT.SUB_APPROVED')
				) GCIGA
					ON GCIGA.IL_GOODS_ID = G.IL_GOODS_ID
				LEFT JOIN (
					SELECT
						IIA.IL_ITEM_CD
						, IIA.APPR_STAT
						, DIC.NAME AS APPR_STAT_NAME
					FROM
						IL_ITEM_APPR IIA
						LEFT JOIN (
							SELECT
								SCC.ST_COMN_CODE_ID AS CODE
								, GDM.DIC_MST_NM AS NAME
							FROM
								ST_COMN_CODE SCC
								INNER JOIN GB_DIC_MST GDM
									ON SCC.GB_DIC_MST_ID = GDM.GB_DIC_MST_ID
							WHERE
								SCC.ST_COMN_CODE_MST_CD = 'APPR_STAT'
								AND SCC.USE_YN = UPPER('Y')
						) DIC
							ON IIA.APPR_STAT = DIC.CODE
					WHERE
						IIA.IL_ITEM_APPR_ID IN (
							SELECT
								MAX(IL_ITEM_APPR_ID) AS IL_ITEM_APPR_ID
							FROM
								IL_ITEM_APPR
							WHERE
								APPR_KIND_TP = 'APPR_KIND_TP.ITEM_CLIENT'
							GROUP BY IL_ITEM_CD
						)
						AND IIA.APPR_STAT IN ('APPR_STAT.REQUEST', 'APPR_STAT.SUB_APPROVED')
				) ICIIA
					ON ICIIA.IL_ITEM_CD = I.IL_ITEM_CD
                <where>
                	<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(selectConditionType)">
                		<choose>
	                    	<when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(selectConditionType, "singleSection")'> <!-- 최근 수정일 -->
	                    		<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(findKeyword)"> <!-- 복수검색 -->
		                            <choose>
		                                <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchCondition, "ALL")'> <!-- 전체 -->
		                                    AND (
		                                        G.IL_GOODS_ID IN
			                                        <foreach collection="findKeywordList" item="goodsId" index="index" separator="," open="(" close=")">
			                                            #{goodsId}
			                                        </foreach>
		                                     	OR I.IL_ITEM_CD IN
			                                        <foreach collection="findKeywordList" item="itemCode" index="index" separator="," open="(" close=")">
			                                            #{itemCode}
			                                        </foreach>
		                                     	OR I.ERP_ITEM_BARCODE IN
			                                        <foreach collection="findKeywordList" item="erpItemBarcode" index="index" separator="," open="(" close=")">
			                                            #{erpItemBarcode}
			                                        </foreach>
		                                     	OR I.ITEM_BARCODE IN
			                                        <foreach collection="findKeywordList" item="itemBarcode" index="index" separator="," open="(" close=")">
			                                            #{itemBarcode}
			                                        </foreach>
		                                    )
		                                </when>
		                                <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchCondition, "GOODS_CODE")'> <!-- 상품코드 -->
                   							G.IL_GOODS_ID IN
			                                    <foreach collection="findKeywordList" item="goodsId" index="index" separator="," open="(" close=")">
			                                        #{goodsId}
			                                    </foreach>
		                                </when>
		                                <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchCondition, "ITEM_CODE")'> <!-- 마스터 품목코드 -->
                   							I.IL_ITEM_CD IN
			                                    <foreach collection="findKeywordList" item="itemCode" index="index" separator="," open="(" close=")">
			                                        #{itemCode}
			                                    </foreach>
		                                </when>
		                                <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchCondition, "ITEM_BARCODE")'> <!-- 품목 바코드 -->
		                                    AND (
                   								I.ERP_ITEM_BARCODE IN
			                                        <foreach collection="findKeywordList" item="erpItemBarcode" index="index" separator="," open="(" close=")">
			                                            #{erpItemBarcode}
			                                        </foreach>
			                                     OR I.ITEM_BARCODE IN
			                                        <foreach collection="findKeywordList" item="itemBarcode" index="index" separator="," open="(" close=")">
			                                            #{itemBarcode}
			                                        </foreach>
		                                    )
		                                </when>
		                            </choose>
		                        </if>
	                    	</when>
	                        <otherwise>
								<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(findKeywordOnMulti)"> <!-- 복수검색 -->
                                    AND (
                                        G.IL_GOODS_ID IN
	                                        <foreach collection="findKeywordOnMultiList" item="goodsId" index="index" separator="," open="(" close=")">
	                                            #{goodsId}
	                                        </foreach>
	                                     OR I.IL_ITEM_CD IN
	                                        <foreach collection="findKeywordOnMultiList" item="itemCode" index="index" separator="," open="(" close=")">
	                                            #{itemCode}
	                                        </foreach>
	                                     OR I.ERP_ITEM_BARCODE IN
	                                        <foreach collection="findKeywordOnMultiList" item="erpItemBarcode" index="index" separator="," open="(" close=")">
	                                            #{erpItemBarcode}
	                                        </foreach>
	                                     OR I.ITEM_BARCODE IN
	                                        <foreach collection="findKeywordOnMultiList" item="itemBarcode" index="index" separator="," open="(" close=")">
	                                            #{itemBarcode}
	                                        </foreach>
                                    )
								</if>
	                            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(goodsName)"> <!-- 상품명 -->
	                                AND G.GOODS_NM LIKE CONCAT('%', #{goodsName}, '%')
	                            </if>
	                            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(supplierId)"> <!-- 공급업체 -->
									AND I.UR_SUPPLIER_ID = #{supplierId}
	                            </if>
	                            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(warehouseGroup)"> <!-- 출고처그룹코드 -->
									AND W.WAREHOUSE_GRP_CD = #{warehouseGroup}
								</if>
								<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(warehouseId)"> <!-- 출고처그룹기준 출고처 -->
									AND G.UR_WAREHOUSE_ID = #{warehouseId}
								</if>
								<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(brandId)"> <!--표준 브랜드 -->
	                                AND I.UR_BRAND_ID = #{brandId}
	                            </if>
	                            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(dpBrandId)"> <!--전시 브랜드 -->
	                                AND I.DP_BRAND_ID = #{dpBrandId}
	                            </if>



	                            <choose>
	                                <when test='categoryType.equalsIgnoreCase("CATEGORY_STANDARD")'> <!-- 표준카테고리 -->
	                                    <choose>
	                                        <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(categoryStandardDepth4)">
	                                            AND EXISTS (SELECT 1
	                                                          FROM IL_CTGRY_STD_PRNTS_INFO T1
	                                                          JOIN IL_CTGRY_STD T2
	                                                            ON T2.IL_CTGRY_STD_ID = T1.IL_CTGRY_STD_ID
	                                                         WHERE T1.CTGRY_STD_ID_DEPTH1 = #{categoryStandardDepth1}
	                                                           AND T1.CTGRY_STD_ID_DEPTH2 = #{categoryStandardDepth2}
	                                                           AND T1.CTGRY_STD_ID_DEPTH3 = #{categoryStandardDepth3}
	                                                           AND T1.CTGRY_STD_ID_DEPTH4 = #{categoryStandardDepth4}
	                                                           AND T2.USE_YN = 'Y'
	                                                           AND T2.DEL_YN = 'N'
	                                                           AND T1.IL_CTGRY_STD_ID = I.IL_CTGRY_STD_ID) /* 표준카테고리 세분류 */
	                                        </when>
	                                        <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(categoryStandardDepth3)">
	                                            AND EXISTS (SELECT 1
	                                                          FROM IL_CTGRY_STD_PRNTS_INFO T1
	                                                          JOIN IL_CTGRY_STD T2
	                                                            ON T2.IL_CTGRY_STD_ID = T1.IL_CTGRY_STD_ID
	                                                         WHERE T1.CTGRY_STD_ID_DEPTH1 = #{categoryStandardDepth1}
	                                                           AND T1.CTGRY_STD_ID_DEPTH2 = #{categoryStandardDepth2}
	                                                           AND T1.CTGRY_STD_ID_DEPTH3 = #{categoryStandardDepth3}
	                                                           AND T2.USE_YN = 'Y'
	                                                           AND T2.DEL_YN = 'N'
	                                                           AND T1.IL_CTGRY_STD_ID = I.IL_CTGRY_STD_ID) /* 표준카테고리 소분류 */
	                                        </when>
	                                        <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(categoryStandardDepth2)">
	                                            AND EXISTS (SELECT 1
	                                                          FROM IL_CTGRY_STD_PRNTS_INFO T1
	                                                          JOIN IL_CTGRY_STD T2
	                                                            ON T2.IL_CTGRY_STD_ID = T1.IL_CTGRY_STD_ID
	                                                         WHERE T1.CTGRY_STD_ID_DEPTH1 = #{categoryStandardDepth1}
	                                                           AND T1.CTGRY_STD_ID_DEPTH2 = #{categoryStandardDepth2}
	                                                           AND T2.USE_YN = 'Y'
	                                                           AND T2.DEL_YN = 'N'
	                                                           AND T1.IL_CTGRY_STD_ID = I.IL_CTGRY_STD_ID) /* 표준카테고리 중분류 */
	                                        </when>
	                                        <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(categoryStandardDepth1)">
	                                            AND EXISTS (SELECT 1
	                                                          FROM IL_CTGRY_STD_PRNTS_INFO T1
	                                                          JOIN IL_CTGRY_STD T2
	                                                            ON T2.IL_CTGRY_STD_ID = T1.IL_CTGRY_STD_ID
	                                                         WHERE T1.CTGRY_STD_ID_DEPTH1 = #{categoryStandardDepth1}
	                                                           AND T2.USE_YN = 'Y'
	                                                           AND T2.DEL_YN = 'N'
	                                                           AND T1.IL_CTGRY_STD_ID = I.IL_CTGRY_STD_ID) /* 표준카테고리 대분류 */
	                                        </when>
	                                    </choose>
	                                </when>
	                                <otherwise> <!-- 전시카테고리, 몰인몰(올가), 몰인몰(베이비밀), 몰인몰(잇슬림) -->
	                                    <choose>
	                                        <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(categoryDepth4)">
	                                            AND EXISTS (SELECT 1
	                                                          FROM IL_CTGRY_PRNTS_INFO T1
	                                                          JOIN IL_GOODS_CTGRY T2
	                                                            ON T2.IL_CTGRY_ID = T1.IL_CTGRY_ID
	                                                          JOIN IL_CTGRY T3
	                                                            ON T3.IL_CTGRY_ID = T1.IL_CTGRY_ID
	                                                         WHERE T1.CTGRY_ID_DEPTH1 = #{categoryDepth1}
	                                                           AND T1.CTGRY_ID_DEPTH2 = #{categoryDepth2}
	                                                           AND T1.CTGRY_ID_DEPTH3 = #{categoryDepth3}
	                                                           AND T1.CTGRY_ID_DEPTH4 = #{categoryDepth4}
	                                                           AND T3.USE_YN = 'Y'
	                                                           AND T3.DEL_YN = 'N'
	                                                           AND T3.MALL_DIV = (CASE WHEN 'CATEGORY_PULMUONE' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.PULMUONE'
	                                                                                   WHEN 'CATEGORY_ORGA' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.ORGA'
	                                                                                   WHEN 'CATEGORY_BABYMEAL' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.BABYMEAL'
	                                                                                   WHEN 'CATEGORY_EATSLIM' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.EATSLIM'
	                                                                              ELSE 'MALL_DIV.PULMUONE'
	                                                                               END)
	                                                           AND T2.IL_GOODS_ID = G.IL_GOODS_ID) /* 전시카테고리 세분류 */
	                                        </when>
	                                        <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(categoryDepth3)">
	                                            AND EXISTS (SELECT 1
	                                                          FROM IL_CTGRY_PRNTS_INFO T1
	                                                          JOIN IL_GOODS_CTGRY T2
	                                                            ON T2.IL_CTGRY_ID = T1.IL_CTGRY_ID
	                                                          JOIN IL_CTGRY T3
	                                                            ON T3.IL_CTGRY_ID = T1.IL_CTGRY_ID
	                                                         WHERE T1.CTGRY_ID_DEPTH1 = #{categoryDepth1}
	                                                           AND T1.CTGRY_ID_DEPTH2 = #{categoryDepth2}
	                                                           AND T1.CTGRY_ID_DEPTH3 = #{categoryDepth3}
	                                                           AND T3.USE_YN = 'Y'
	                                                           AND T3.DEL_YN = 'N'
	                                                           AND T3.MALL_DIV = (CASE WHEN 'CATEGORY_PULMUONE' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.PULMUONE'
	                                                                                   WHEN 'CATEGORY_ORGA' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.ORGA'
	                                                                                   WHEN 'CATEGORY_BABYMEAL' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.BABYMEAL'
	                                                                                   WHEN 'CATEGORY_EATSLIM' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.EATSLIM'
	                                                                              ELSE 'MALL_DIV.PULMUONE'
	                                                                               END)
	                                                           AND T2.IL_GOODS_ID = G.IL_GOODS_ID) /* 전시카테고리 소분류 */
	                                        </when>
	                                        <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(categoryDepth2)">
	                                            AND EXISTS (SELECT 1
	                                                          FROM IL_CTGRY_PRNTS_INFO T1
	                                                          JOIN IL_GOODS_CTGRY T2
	                                                            ON T2.IL_CTGRY_ID = T1.IL_CTGRY_ID
	                                                          JOIN IL_CTGRY T3
	                                                            ON T3.IL_CTGRY_ID = T1.IL_CTGRY_ID
	                                                         WHERE T1.CTGRY_ID_DEPTH1 = #{categoryDepth1}
	                                                           AND T1.CTGRY_ID_DEPTH2 = #{categoryDepth2}
	                                                           AND T3.USE_YN = 'Y'
	                                                           AND T3.DEL_YN = 'N'
	                                                           AND T3.MALL_DIV = (CASE WHEN 'CATEGORY_PULMUONE' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.PULMUONE'
	                                                                                   WHEN 'CATEGORY_ORGA' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.ORGA'
	                                                                                   WHEN 'CATEGORY_BABYMEAL' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.BABYMEAL'
	                                                                                   WHEN 'CATEGORY_EATSLIM' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.EATSLIM'
	                                                                              ELSE 'MALL_DIV.PULMUONE'
	                                                                               END)
	                                                           AND T2.IL_GOODS_ID = G.IL_GOODS_ID) /* 전시카테고리 중분류 */
	                                        </when>
	                                        <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(categoryDepth1)">
	                                            AND EXISTS (SELECT 1
	                                                          FROM IL_CTGRY_PRNTS_INFO T1
	                                                          JOIN IL_GOODS_CTGRY T2
	                                                            ON T2.IL_CTGRY_ID = T1.IL_CTGRY_ID
	                                                          JOIN IL_CTGRY T3
	                                                            ON T3.IL_CTGRY_ID = T1.IL_CTGRY_ID
	                                                         WHERE T1.CTGRY_ID_DEPTH1 = #{categoryDepth1}
	                                                           AND T3.USE_YN = 'Y'
	                                                           AND T3.DEL_YN = 'N'
	                                                           AND T3.MALL_DIV = (CASE WHEN 'CATEGORY_PULMUONE' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.PULMUONE'
	                                                                                   WHEN 'CATEGORY_ORGA' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.ORGA'
	                                                                                   WHEN 'CATEGORY_BABYMEAL' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.BABYMEAL'
	                                                                                   WHEN 'CATEGORY_EATSLIM' = #{categoryType}
	                                                                                   THEN 'MALL_DIV.EATSLIM'
	                                                                              ELSE 'MALL_DIV.PULMUONE'
	                                                                               END)
	                                                           AND T2.IL_GOODS_ID = G.IL_GOODS_ID) /* 전시카테고리 대분류 */
	                                        </when>
	                                    </choose>
	                                </otherwise>
	                            </choose>
	                            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(dateSearchStart)"> <!-- 기간검색 -->
	                                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(dateSearchEnd)">
	                                    <choose>
	                                        <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(dateSearchType, "CREATE_DATE")'> <!-- 등록일 -->
	                                            AND G.CREATE_DT BETWEEN #{dateSearchStart} AND (#{dateSearchEnd} + INTERVAL 1 DAY - INTERVAL 1 SECOND)
	                                        </when>
	                                        <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(dateSearchType, "MODIFY_DATE")'> <!-- 최근 수정일 -->
	                                            AND G.MODIFY_DT BETWEEN #{dateSearchStart} AND (#{dateSearchEnd} + INTERVAL 1 DAY - INTERVAL 1 SECOND)
	                                        </when>
	                                        <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(dateSearchType, "SALE_DATE")'> <!-- 판매기간 -->
	                                            AND G.SALE_START_DT <![CDATA[ <= ]]> (#{dateSearchEnd} + INTERVAL 1 DAY - INTERVAL 1 SECOND)
	                                            AND SALE_END_DT <![CDATA[ >= ]]> #{dateSearchStart}
	                                        </when>
	                                    </choose>
	                                </if>
	                            </if>
	                            <if test="goodsTypeList.size() > 0"> <!-- 상품유형 -->
	                                AND G.GOODS_TP IN
	                                <foreach collection="goodsTypeList" item="goodsTypeCode" index="index" separator="," open="(" close=")">
	                                    #{goodsTypeCode}
	                                </foreach>
	                            </if>
	                            <if test="saleTypeList.size() > 0"> <!-- 판매유형 -->
	                                AND G.SALE_TP IN
	                                <foreach collection="saleTypeList" item="saleTypeCode" index="index" separator="," open="(" close=")">
	                                    #{saleTypeCode}
	                                </foreach>
	                            </if>
	                            <if test="saleStatusList.size() > 0"> <!-- 판매상태 -->
	                                AND G.SALE_STATUS IN
	                                <foreach collection="saleStatusList" item="saleStatusCode" index="index" separator="," open="(" close=")">
	                                    #{saleStatusCode}
	                                </foreach>
	                            </if>
	                            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(displayYn)"> <!-- 전시여부 -->
	                                AND G.DISP_YN = #{displayYn}
	                            </if>
	                            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(erpIfYn)"> <!-- ERP 연동여부 -->
	                                AND I.ERP_IF_YN = #{erpIfYn}
	                            </if>
	                            <if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(purchaseTargetAllYn, "N")'> <!-- 구매허용범위 전체조회 유무 -->
	                                AND G.PURCHASE_MEMBER_YN = (CASE WHEN #{purchaseMemberYn} = 'Y' THEN 'Y' ELSE 'N' END)
	                                AND G.PURCHASE_EMPLOYEE_YN = (CASE WHEN #{purchaseEmployeeYn} = 'Y' THEN 'Y' ELSE 'N' END)
	                                AND G.PURCHASE_NONMEMBER_YN = (CASE WHEN #{purchaseNonmemberYn} = 'Y' THEN 'Y' ELSE 'N' END)
	                            </if>
	                            <if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(salesAllowanceAllYn, "N")'> <!-- 판매허용범위 전체조회 유무 -->
	                                AND G.DISP_WEB_PC_YN = (CASE WHEN #{displayWebPcYn} = 'Y' THEN 'Y' ELSE 'N' END)
	                                AND G.DISP_WEB_MOBILE_YN = (CASE WHEN #{displayWebMobileYn} = 'Y' THEN 'Y' ELSE 'N' END)
	                                AND G.DISP_APP_YN = (CASE WHEN #{displayAppYn} = 'Y' THEN 'Y' ELSE 'N' END)
	                            </if>
	                            <if test="storageMethodTypeList.size() > 0"> <!-- 보관방법 -->
	                                AND I.STORAGE_METHOD_TP IN
	                                <foreach collection="storageMethodTypeList" item="storageMethodTypeCode" index="index" separator="," open="(" close=")">
	                                    #{storageMethodTypeCode}
	                                </foreach>
	                            </if>
	                            <if test="goodsOutMallSaleStatList.size() > 0"> <!-- 외부몰 판매상태 -->
	                                AND G.GOODS_OUTMALL_SALE_STAT IN
	                                <foreach collection="goodsOutMallSaleStatList" item="goodsOutMallSaleStatCode" index="index" separator="," open="(" close=")">
	                                    #{goodsOutMallSaleStatCode}
	                                </foreach>
	                            </if>
	                            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(couponUseYn)"> <!-- 쿠폰허용여부 -->
	                                AND G.COUPON_USE_YN = #{couponUseYn}
	                            </if>
	                            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(stockIfYn)"> <!-- 재고연동 유무 -->
	                                AND W.STOCK_ORDER_YN = #{stockIfYn}
	                            </if>
	                            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(mdRecommendYn)"> <!-- MD 추천유무 -->
	                                AND G.MD_RECOMMEND_YN = #{mdRecommendYn}
	                            </if>
	                            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(erpProductType)"> <!-- 매장전용상품유형 -->
	                                AND I.ERP_PRODUCT_TP = #{erpProductType}
	                            </if>
	                            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(saleDateType)"> <!-- 판매기간 구분 -->
									AND G.SALE_STATUS = 'SALE_STATUS.ON_SALE'
									<if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(saleDateType, "WAIT")'> <!-- 판매중 대기목록 -->
										AND SALE_START_DT <![CDATA[ > ]]> NOW()
									</if>
									<if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(saleDateType, "END")'> <!-- 판매기간만료 -->
										AND SALE_END_DT <![CDATA[ < ]]> NOW()
									</if>
	                            </if>
	                            <if test="goodsDeliveryTypeList.size() > 0"> <!-- 배송유형 -->
	                                AND (
	                                <foreach collection="goodsDeliveryTypeList" item="goodsDeliveryTypeCode" index="index" separator="OR">
	                                    <choose>
	                                        <!-- 일반 -->
	                                        <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(goodsDeliveryTypeCode, "GOODS_DELIVERY_TYPE.NORMAL")'>
	                                            ( W.STORE_YN = 'N' AND I.ITEM_TP != 'MASTER_ITEM_TYPE.INCORPOREITY' AND I.ITEM_TP != 'MASTER_ITEM_TYPE.RENTAL' )
	                                        </when>

	                                        <!-- 새벽 -->
	                                        <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(goodsDeliveryTypeCode, "GOODS_DELIVERY_TYPE.DAWN")'>
	                                            ( W.DAWN_DLVRY_YN = 'Y' AND I.ITEM_TP != 'MASTER_ITEM_TYPE.INCORPOREITY' AND I.ITEM_TP != 'MASTER_ITEM_TYPE.RENTAL' )
	                                        </when>

	                                        <!-- 매장 -->
	                                        <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(goodsDeliveryTypeCode, "GOODS_DELIVERY_TYPE.SHOP")'>
	                                            ( W.STORE_YN = 'Y' AND S.UR_SUPPLIER_ID = 2 AND I.ITEM_TP != 'MASTER_ITEM_TYPE.INCORPOREITY' AND I.ITEM_TP != 'MASTER_ITEM_TYPE.RENTAL' )
	                                        </when>

	                                        <!-- 일일 -->
	                                        <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(goodsDeliveryTypeCode, "GOODS_DELIVERY_TYPE.DAILY")'>
	                                            ( W.STORE_YN = 'Y' AND S.UR_SUPPLIER_ID != 2 AND I.ITEM_TP != 'MASTER_ITEM_TYPE.INCORPOREITY' AND I.ITEM_TP != 'MASTER_ITEM_TYPE.RENTAL' )
	                                        </when>

	                                        <!-- 배송안함 -->
	                                        <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(goodsDeliveryTypeCode, "GOODS_DELIVERY_TYPE.NO_DELIVERY")'>
	                                            I.ITEM_TP IN ('MASTER_ITEM_TYPE.INCORPOREITY', 'MASTER_ITEM_TYPE.RENTAL')
	                                        </when>
	                                    </choose>
	                                </foreach>
	                                )
	                            </if>
	                            <if test="stockStatusList.size() > 0"> <!-- 재고운영 형태 -->
	                            	AND
	                                <foreach collection="stockStatusList" item="stockStatus" index="index" separator="OR" open="(" close=")">
	                                    <if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(stockStatus, "STK_IF.Y.PRE_ORD.Y.UNLIMITED")'>
	                                    (
	                                    	W.STOCK_ORDER_YN = 'Y'
											AND IIW.PRE_ORDER_YN = 'Y'
											AND IIW.PRE_ORDER_TP IN ('PRE_ORDER_TP.UNLIMITED_ALLOWED','PRE_ORDER_TP.LIMITED_ALLOWED')
										)
										</if>
										<if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(stockStatus, "STK_IF.Y.PRE_ORD.Y.LIMITED")'>
										(
											W.STOCK_ORDER_YN = 'Y'
											AND IIW.PRE_ORDER_YN = 'Y'
											AND IIW.PRE_ORDER_TP = 'PRE_ORDER_TP.NOT_ALLOWED'
										)
										</if>
										<if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(stockStatus, "STK_IF.Y.PRE_ORD.N")'>
										(
											W.STOCK_ORDER_YN = 'Y'
											AND IIW.PRE_ORDER_YN = 'N'
										)
										</if>
										<if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(stockStatus, "STK_IF.N.LIMITED")'>
										(
											IIW.UNLIMIT_STOCK_YN = 'N'
											AND W.STOCK_ORDER_YN = 'N'
										)
										</if>
										<if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(stockStatus, "STK_IF.N.UNLIMITED")'>
										(
											IIW.UNLIMIT_STOCK_YN = 'Y'
											AND W.STOCK_ORDER_YN = 'N'
										)
										</if>
	                                </foreach>
	                            </if>

	                        </otherwise>
	                    </choose>
                	</if>

					<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(listAuthSupplierId) and listAuthSupplierId.size != 0">
						AND I.UR_SUPPLIER_ID IN
						<foreach item="data" index="index" collection="listAuthSupplierId" open="(" separator="," close=")">
                    		#{data}
   	            		</foreach>
					</if>
					<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(listAuthWarehouseId) and listAuthWarehouseId.size != 0">
						AND G.UR_WAREHOUSE_ID IN
						<foreach item="data" index="index" collection="listAuthWarehouseId" open="(" separator="," close=")">
                    		#{data}
   	            		</foreach>
					</if>
					<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(userVo.companyType, 'COMPANY_TYPE.CLIENT')">
						AND G.GOODS_TP != 'GOODS_TYPE.PACKAGE'
						AND G.SALE_STATUS != 'SALE_STATUS.SAVE'
					</if>

                </where>
             ) X1
          JOIN IL_GOODS_PRICE GP
            ON GP.IL_GOODS_PRICE_ID = X1.GOODS_PRICE_ID
		LEFT JOIN IL_GOODS_DISCOUNT EMP_DIS
			ON EMP_DIS.IL_GOODS_ID = X1.GOODS_ID
			AND EMP_DIS.DISCOUNT_TP = 'GOODS_DISCOUNT_TP.EMPLOYEE'
			AND EMP_DIS.USE_YN = 'Y'
			AND NOW() BETWEEN EMP_DIS.DISCOUNT_START_DT AND EMP_DIS.DISCOUNT_END_DT
		LEFT JOIN (
			SELECT
				BGB.UR_BRAND_ID
				, BG.DISCOUNT_RATIO
			FROM
				PS_EMPL_DISC_BRAND_GRP BG
				INNER JOIN PS_EMPL_DISC_BRAND_GRP_BRAND BGB
					ON BGB.PS_EMPL_DISC_BRAND_GRP_ID = BG.PS_EMPL_DISC_BRAND_GRP_ID
		) BG_DIS
			ON BG_DIS.UR_BRAND_ID = X1.BRAND_ID
 		LEFT JOIN IL_GOODS_CTGRY MALL_CTG
			ON MALL_CTG.IL_GOODS_ID = X1.GOODS_ID
			AND MALL_CTG.MALL_DIV IN ('MALL_DIV.ORGA', 'MALL_DIV.EATSSLIM', 'MALL_DIV.BABYMEAL')
			AND MALL_CTG.BASIC_YN = 'Y'
        <where>
            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEmpty(findKeyword)">
                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(additionalGoodsYn)"> <!-- 추가상품유무 -->
                    AND X1.ADDITIONAL_GOODS_YN = #{additionalGoodsYn}
                </if>
                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(discountType)"> <!-- 할인적용 유무 -->
                    AND GP.DISCOUNT_TP = #{discountType}
                </if>
            </if>
        </where>
        <choose> <!-- 상품 정렬방법 -->
            <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(gridDataSort, "CREATE_DATE")'> <!-- 상품등록일 순 -->
                ORDER BY X1.CREATE_DT DESC
            </when>
            <otherwise> <!-- 상품수정일 순 -->
                ORDER BY X1.MODIFY_DT DESC
            </otherwise>
        </choose>
    </select>

    <!--───────────────────────────────────────────────────────────────────────
     * description      : 상품 판매상태 변경
     * @
     * @ 수정일         수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2020.10.06     손진구          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <update id="putGoodsSaleStatusChange">
        /* goodsList.putGoodsSaleStatusChange */
        UPDATE IL_GOODS
           SET SALE_STATUS = #{saleStatusCode}
             , MODIFY_ID = #{createId}
             , MODIFY_DT = NOW()
         WHERE IL_GOODS_ID = #{goodsId}
    </update>

	<!--───────────────────────────────────────────────────────────────────────
	* description    : 상품등록 승인관리 목록
	* @
	* @ 수정일       	수정자    수정내용
	* @ ──────────────────────────────────────────────────────────────────────
	* @ 2021.02.17  박승현    최초생성
	* @
	────────────────────────────────────────────────────────────────────────-->
	<select id="getApprovalGoodsRegistList" resultType="kr.co.pulmuone.v1.goods.goods.dto.vo.GoodsApprovalResultVo">
		/* goodsList.getApprovalGoodsRegistList */
		SELECT
			IGA.IL_GOODS_APPR_ID
			, IG.IL_GOODS_ID AS GOODS_ID
			, II.IL_ITEM_CD AS ITEM_CODE
			, IFNULL((CASE WHEN II.ERP_IF_YN = 'Y'
						THEN II.ERP_ITEM_BARCODE
						ELSE II.ITEM_BARCODE
						END),'') AS ITEM_BARCODE
			<choose>
			     <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(apprKindType) and @kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(apprKindType,'APPR_KIND_TP.GOODS_CLIENT')"> <!-- 승인종류 유형코드 -->
                     , IF(IGA.GOODS_NM IS NOT NULL, IGA.GOODS_NM, IG.GOODS_NM ) AS GOODS_NAME         /*상품명*/
			     </when>
			     <otherwise>
			        , IG.GOODS_NM                                   AS  GOODS_NAME                     /*상품명*/
			     </otherwise>
		    </choose>
			, IG.GOODS_TP AS GOODS_TYPE_CODE
			, FN_COMN_CODE_DIC(IG.GOODS_TP) AS GOODS_TYPE_NAME
			, UW.WAREHOUSE_NM AS WAREHOUSE_NAME
			, UC.COMP_NM AS SUPPLIER_NAME
			, IGP.STANDARD_PRICE /* 원가 */
			, IGP.RECOMMENDED_PRICE /* 정상가 */
			, CASE
					WHEN II.TAX_YN = 'Y' THEN TRUNCATE(((IGP.RECOMMENDED_PRICE - (IGP.STANDARD_PRICE * 1.1))) / IGP.RECOMMENDED_PRICE * 100, 0)
					ELSE TRUNCATE(((IGP.RECOMMENDED_PRICE - IGP.STANDARD_PRICE)) / IGP.RECOMMENDED_PRICE * 100, 0)
				END AS MARGIN_RATE
			, IGA.APPR_STAT
			, FN_COMN_CODE_DIC(IGA.APPR_STAT) AS APPR_STAT_NAME
			, REQUU.LOGIN_ID AS APPROVAL_REQUEST_USER_ID
			, FN_DECRYPT(REQUU.USER_NM) AS APPROVAL_REQUEST_USER_NAME
			, IGA.APPR_REQ_DT AS APPROVAL_REQUEST_DT
			, SUBUU.LOGIN_ID AS APPROVAL_SUB_USER_ID
			, FN_DECRYPT(SUBUU.USER_NM) AS APPROVAL_SUB_USER_NAME
			, SUBGUU.LOGIN_ID AS APPROVAL_SUB_GRANT_USER_ID
			, FN_DECRYPT(SUBGUU.USER_NM) AS APPROVAL_SUB_GRANT_USER_NAME
			, SUBCHG.LOGIN_ID AS APPROVAL_SUB_CHANGE_USER_ID
			, FN_DECRYPT(SUBCHG.USER_NM) AS APPROVAL_SUB_CHANGE_USER_NAME
			, IGA.APPR_SUB_CHG_DT AS APPROVAL_SUB_CHANGE_DT
			, APPRUU.LOGIN_ID AS APPROVAL_USER_ID
			, FN_DECRYPT(APPRUU.USER_NM) AS APPROVAL_USER_NAME
			, APPRGUU.LOGIN_ID AS APPROVAL_GRANT_USER_ID
			, FN_DECRYPT(APPRGUU.USER_NM) AS APPROVAL_GRANT_USER_NAME
			, CHGUU.LOGIN_ID AS APPROVAL_CHANGE_USER_ID
			, FN_DECRYPT(CHGUU.USER_NM) AS APPROVAL_CHANGE_USER_NAME
			, IGA.APPR_CHG_DT AS APPROVAL_CHANGE_DT
			, CASE
				WHEN IGA.APPR_STAT = 'APPR_STAT.DENIED' THEN IFNULL((
					SELECT
						STATUS_CMNT
					FROM
						IL_GOODS_APPR_STATUS_HISTORY IGASH
					WHERE
						IGASH.IL_GOODS_APPR_ID = IGA.IL_GOODS_APPR_ID
						AND IGASH.APPR_STAT = 'APPR_STAT.DENIED'
					ORDER BY IGASH.IL_GOODS_APPR_STATUS_HISTORY_ID DESC
					LIMIT 1
				), '')
				ELSE ''
			END AS APPR_STAT_CMNT
        , CASE WHEN IG.GOODS_TP = 'GOODS_TYPE.PACKAGE'
                THEN
                    CASE
                        WHEN IG.GOODS_PACKAGE_IMG_TP = 'GOODS_PACKAGE_IMG_TP.PACKAGE_GOODS' OR  IG.GOODS_PACKAGE_IMG_TP = 'GOODS_PACKAGE_IMG_TP.MIXED'
                            THEN (SELECT II.C_IMG
                            FROM IL_GOODS_IMG II
                            WHERE II.IL_GOODS_ID = IG.IL_GOODS_ID
                            AND II.BASIC_YN = 'Y'
                            LIMIT 1)
                    WHEN IG.GOODS_PACKAGE_IMG_TP = 'GOODS_PACKAGE_IMG_TP.NORMAL_GOODS'
                        THEN
                        (SELECT II.C_IMG
                        FROM IL_ITEM_IMG II
                        WHERE II.IL_ITEM_CD = (SELECT IL_ITEM_CD FROM IL_GOODS WHERE IL_GOODS_ID = (SELECT IL_GOODS_ID FROM IL_GOODS_PACKAGE_GOODS_MAPPING WHERE BASE_GOODS_YN = 'Y' AND IL_GOODS_ID = IG.IL_GOODS_ID))
                        AND II.BASIC_YN = 'Y'
                        LIMIT 1)
                    END
                ELSE
                    (SELECT II.C_IMG
                    FROM IL_ITEM_IMG II
                    WHERE II.IL_ITEM_CD = IG.IL_ITEM_CD
                    AND II.BASIC_YN = 'Y'
                    LIMIT 1)
                END GOODS_IMAGE_PATH /* 상품이미지경로 */
		FROM IL_GOODS_APPR IGA
		INNER JOIN IL_GOODS IG
			ON IG.IL_GOODS_ID = IGA.IL_GOODS_ID
		INNER JOIN IL_ITEM II
			ON II.IL_ITEM_CD = IG.IL_ITEM_CD
		INNER JOIN UR_WAREHOUSE UW
			ON UW.UR_WAREHOUSE_ID = IG.UR_WAREHOUSE_ID
		INNER JOIN UR_SUPPLIER US
			ON US.UR_SUPPLIER_ID = II.UR_SUPPLIER_ID
		INNER JOIN UR_SUPPLIER_WAREHOUSE USW
			ON IG.UR_WAREHOUSE_ID = USW.UR_WAREHOUSE_ID
			AND II.UR_SUPPLIER_ID = USW.UR_SUPPLIER_ID
		INNER JOIN IL_ITEM_WAREHOUSE IIW
			ON USW.UR_SUPPLIER_WAREHOUSE_ID = IIW.UR_SUPPLIER_WAREHOUSE_ID
			AND II.IL_ITEM_CD = IIW.IL_ITEM_CD
		INNER JOIN UR_COMPANY UC
			ON UC.UR_COMPANY_ID = US.UR_COMPANY_ID
		INNER JOIN IL_GOODS_PRICE IGP
			ON IGP.IL_GOODS_PRICE_ID = (
				SELECT
					IL_GOODS_PRICE_ID
				FROM IL_GOODS_PRICE
				WHERE
					IL_GOODS_ID = IG.IL_GOODS_ID
					AND NOW() BETWEEN PRICE_START_DT AND PRICE_END_DT
				ORDER BY IL_GOODS_PRICE_ID DESC
				LIMIT 1
			)
		LEFT OUTER JOIN UR_USER SUBUU
			ON IGA.APPR_SUB_USER_ID = SUBUU.UR_USER_ID
		LEFT OUTER JOIN UR_EMPLOYEE SUBUE
			ON IGA.APPR_SUB_USER_ID = SUBUE.UR_USER_ID
		LEFT JOIN UR_EMPLOYEE SUBGUE
			ON SUBUE.GRANT_AUTH_USER_ID IS NOT NULL
			AND SUBUE.GRANT_AUTH_STOP_YN = 'N'
			AND SUBUE.GRANT_AUTH_USER_ID = SUBGUE.UR_USER_ID
			AND CURDATE() BETWEEN SUBUE.GRANT_AUTH_START_DT AND SUBUE.GRANT_AUTH_END_DT
		LEFT JOIN UR_USER SUBGUU
			ON SUBGUE.UR_USER_ID = SUBGUU.UR_USER_ID
		LEFT OUTER JOIN UR_USER SUBCHG
			ON IGA.APPR_SUB_CHG_USER_ID = SUBCHG.UR_USER_ID
		LEFT OUTER JOIN UR_USER APPRUU
			ON IGA.APPR_USER_ID = APPRUU.UR_USER_ID
		LEFT OUTER JOIN UR_EMPLOYEE APPRUE
			ON IGA.APPR_USER_ID = APPRUE.UR_USER_ID
		LEFT JOIN UR_EMPLOYEE APPRGUE
			ON APPRUE.GRANT_AUTH_USER_ID IS NOT NULL
			AND APPRUE.GRANT_AUTH_STOP_YN = 'N'
			AND APPRUE.GRANT_AUTH_USER_ID = APPRGUE.UR_USER_ID
			AND CURDATE() BETWEEN APPRUE.GRANT_AUTH_START_DT AND APPRUE.GRANT_AUTH_END_DT
		LEFT JOIN UR_USER APPRGUU
			ON APPRGUE.UR_USER_ID = APPRGUU.UR_USER_ID
		LEFT OUTER JOIN UR_USER CHGUU
			ON IGA.APPR_CHG_USER_ID = CHGUU.UR_USER_ID
		LEFT OUTER JOIN UR_USER REQUU
			ON IGA.APPR_REQ_USER_ID = REQUU.UR_USER_ID
		WHERE
			IGA.APPR_STAT != 'APPR_STAT.DISPOSAL'
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(selectConditionType)">
			<choose>
            	<when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(selectConditionType, "singleSection")'>
					<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(apprKindType)"> <!-- 승인종류 유형코드 -->
						AND IGA.APPR_KIND_TP = #{apprKindType}
					</if>
					<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(findKeyword)">
					<choose>
    					<when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchCondition, "ALL")'> <!-- 전체 -->
    						AND
    							(
        						IG.IL_GOODS_ID IN
        						<foreach collection="findKeywordList" item="goodsId" index="index" separator="," open="(" close=")">
            						#{goodsId}
        						</foreach>
     							OR
        						II.IL_ITEM_CD IN
        						<foreach collection="findKeywordList" item="itemCode" index="index" separator="," open="(" close=")">
            						#{itemCode}
        						</foreach>
     							OR
        						II.ERP_ITEM_BARCODE IN
        						<foreach collection="findKeywordList" item="erpItemBarcode" index="index" separator="," open="(" close=")">
            						#{erpItemBarcode}
        						</foreach>
     							OR
        						II.ITEM_BARCODE IN
        						<foreach collection="findKeywordList" item="itemBarcode" index="index" separator="," open="(" close=")">
            						#{itemBarcode}
        						</foreach>
    							)
						</when>
						<when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchCondition, "GOODS_CODE")'> <!-- 상품코드 -->
    						AND IG.IL_GOODS_ID IN
    						<foreach collection="findKeywordList" item="goodsId" index="index" separator="," open="(" close=")">
        						#{goodsId}
    						</foreach>
						</when>
						<when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchCondition, "ITEM_CODE")'> <!-- 마스터 품목코드 -->
    						AND II.IL_ITEM_CD IN
    						<foreach collection="findKeywordList" item="itemCode" index="index" separator="," open="(" close=")">
        						#{itemCode}
    						</foreach>
						</when>
						<when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchCondition, "ITEM_BARCODE")'> <!-- 품목 바코드 -->
                			AND
                				(
                    			II.ERP_ITEM_BARCODE IN
                    			<foreach collection="findKeywordList" item="erpItemBarcode" index="index" separator="," open="(" close=")">
                        			#{erpItemBarcode}
                    			</foreach>
                 				OR
                    			II.ITEM_BARCODE IN
                    			<foreach collection="findKeywordList" item="itemBarcode" index="index" separator="," open="(" close=")">
                        			#{itemBarcode}
                    			</foreach>
                				)
            			</when>
        			</choose>
    				</if>
				</when>
   				<otherwise>
       				<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(goodsName)"> <!-- 상품명 -->
    					AND IG.GOODS_NM LIKE CONCAT('%', #{goodsName}, '%')
					</if>
					<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(supplierId)"> <!-- 공급업체 -->
						AND II.UR_SUPPLIER_ID = #{supplierId}
					</if>
					<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(warehouseGroup)"> <!-- 출고처그룹코드 -->
						AND UW.WAREHOUSE_GRP_CD = #{warehouseGroup}
					</if>
					<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(warehouseId)"> <!-- 출고처그룹기준 출고처 -->
						AND IG.UR_WAREHOUSE_ID = #{warehouseId}
					</if>
					<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(apprKindType)"> <!-- 승인종류 유형코드 -->
						AND IGA.APPR_KIND_TP = #{apprKindType}
					</if>
					<if test="goodsTypeList.size() > 0"> <!-- 상품유형 -->
    					AND IG.GOODS_TP IN
    					<foreach collection="goodsTypeList" item="goodsTypeCode" index="index" separator="," open="(" close=")">
        					#{goodsTypeCode}
    					</foreach>
					</if>
					<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(searchApprReqUserType)">
						<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(searchApprReqUser)">
						<choose>
							<when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchApprReqUserType,'ID')">
								AND REQUU.LOGIN_ID = #{searchApprReqUser}
							</when>
							<when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchApprReqUserType,'NAME')">
								AND FN_DECRYPT(REQUU.USER_NM) = #{searchApprReqUser}
							</when>
						</choose>
						</if>
					</if>
					<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(searchApprChgUserType)">
						<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(searchApprChgUser)">
						<choose>
							<when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchApprChgUserType,'ID')">
								AND (
									SUBUU.LOGIN_ID = #{searchApprChgUser}
									OR
									APPRUU.LOGIN_ID = #{searchApprChgUser}
								    OR
									SUBGUU.LOGIN_ID = #{searchApprChgUser}
									OR
									APPRGUU.LOGIN_ID = #{searchApprChgUser}
									)
							</when>
							<when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchApprChgUserType,'NAME')">
								AND (
									FN_DECRYPT(SUBUU.USER_NM) = #{searchApprChgUser}
									OR
									FN_DECRYPT(APPRUU.USER_NM) = #{searchApprChgUser}
			    					OR
									FN_DECRYPT(SUBGUU.USER_NM) = #{searchApprChgUser}
			                        OR
									FN_DECRYPT(APPRGUU.USER_NM) = #{searchApprChgUser}
									)
							</when>
						</choose>
						</if>
					</if>
					<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(approvalReqStartDate)">
						<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(approvalReqEndDate)">
							AND IGA.APPR_REQ_DT BETWEEN #{approvalReqStartDate} AND #{approvalReqEndDate} + INTERVAL 1 DAY - INTERVAL 1 SECOND
						</if>
					</if>
					<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(approvalChgStartDate)">
						<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(approvalChgEndDate)">
							AND (
								IGA.APPR_SUB_CHG_DT BETWEEN #{approvalChgStartDate} AND #{approvalChgEndDate} + INTERVAL 1 DAY - INTERVAL 1 SECOND
								OR
								IGA.APPR_CHG_DT BETWEEN #{approvalChgStartDate} AND #{approvalChgEndDate} + INTERVAL 1 DAY - INTERVAL 1 SECOND
								)
						</if>
					</if>
					<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEquals(searchApprovalStatus,'ALL') and @kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(searchApprovalStatus)">
						AND IGA.APPR_STAT IN
						<foreach item="data" index="index" collection="approvalStatusArray" open="(" separator="," close=")">
							#{data}
						</foreach>
					</if>
               </otherwise>
           </choose>
      	   </if>

			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(listAuthSupplierId) and listAuthSupplierId.size != 0">
				AND II.UR_SUPPLIER_ID IN
				<foreach item="data" index="index" collection="listAuthSupplierId" open="(" separator="," close=")">
               		#{data}
            	</foreach>
			</if>
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(listAuthWarehouseId) and listAuthWarehouseId.size != 0">
				AND IG.UR_WAREHOUSE_ID IN
				<foreach item="data" index="index" collection="listAuthWarehouseId" open="(" separator="," close=")">
               		#{data}
            	</foreach>
			</if>
		ORDER BY IGA.APPR_REQ_DT DESC
	</select>


	<!--───────────────────────────────────────────────────────────────────────
     * description		:	상품등록 상태이력 등록
     * @
     * @ 수정일			수정자	수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2021.02.08		박승현	최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
	<insert id="addGoodsRegistStatusHistory">
		/*	goodsList.addGoodsRegistStatusHistory */
		INSERT INTO IL_GOODS_APPR_STATUS_HISTORY
		(
			IL_GOODS_APPR_ID
			<!-- , STATUS -->
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(statusComment)">
			, STATUS_CMNT
			</if>
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(prevApprStat)">
			, PREV_APPR_STAT
			</if>
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(apprStat)">
			, APPR_STAT
			</if>
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(apprSubUserId)">
			, APPR_SUB_USER_ID
			</if>
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(apprUserId)">
			, APPR_USER_ID
			</if>
			, CREATE_DT
			, CREATE_ID
		)
		VALUES
		(
			#{taskPk}
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(statusComment)">
			,#{statusComment}
			</if>
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(prevApprStat)">
			,#{prevApprStat}
			</if>
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(apprStat)">
			,#{apprStat}
			</if>
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(apprSubUserId)">
			,#{apprSubUserId}
			</if>
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(apprUserId)">
			,#{apprUserId}
			</if>
			,NOW()
			,#{userVo.userId}
		)
	</insert>

    <!--───────────────────────────────────────────────────────────────────────
     * description		:	상품등록 승인 요청철회
     * @
     * @ 수정일			수정자	수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2021.02.17		박승현	최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <update id="putCancelRequestApprovalGoodsRegist">
		/*	goodsList.putCancelRequestApprovalGoodsRegist	*/
		UPDATE IL_GOODS_APPR
		SET
			APPR_STAT = #{apprStat}
			, APPR_SUB_USER_ID = null
			, APPR_SUB_CHG_USER_ID = null
			, APPR_SUB_CHG_DT = null
			, APPR_USER_ID = null
			, APPR_CHG_USER_ID = null
			, APPR_CHG_DT = null
			, MODIFY_DT		 = NOW()
			, MODIFY_ID		 = #{userVo.userId}
		WHERE IL_GOODS_APPR_ID = #{taskPk}
	</update>

	<!--───────────────────────────────────────────────────────────────────────
     * description		:	상품등록 승인처리
     * @
     * @ 수정일			수정자	수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2021.02.17		박승현	최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <update id="putApprovalProcessGoodsRegist">
		/*	goodsList.putApprovalProcessGoodsRegist	*/
		UPDATE IL_GOODS_APPR
		SET
			APPR_STAT = #{apprStat}
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(apprStep,'APPR_STAT.SUB_APPROVED')">
			, APPR_SUB_CHG_DT = NOW()
			, APPR_SUB_CHG_USER_ID = #{userVo.userId}
			</if>
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(apprStep,'APPR_STAT.APPROVED')">
			, APPR_CHG_DT = SYSDATE()
			, APPR_CHG_USER_ID = #{userVo.userId}
			</if>
			, MODIFY_DT		 = NOW()
			, MODIFY_ID		 = #{userVo.userId}
		WHERE IL_GOODS_APPR_ID = #{taskPk}
	</update>

	<select id="getApprovalGoodsDetailClient" resultType="kr.co.pulmuone.v1.goods.goods.dto.vo.GoodsApprovalResultVo">
		SELECT
			  GOODS_NM AS GOODS_NAME
			, GOODS_DESC AS GOODS_DESC
			, SEARCH_KYWRD AS SEARCH_KYWRD
			, DISP_YN AS DISP_YN
			, SALE_START_DT AS SALE_START_DT
			, SALE_END_DT AS SALE_END_DT
			, SALE_STATUS AS SALE_STATUS
			, GOODS_MEMO AS GOODS_MEMO
		FROM
			IL_GOODS_APPR
		WHERE
			IL_GOODS_APPR_ID = #{ilGoodsApprId}
	</select>


	<!--───────────────────────────────────────────────────────────────────────
	* description    : 상품할인 승인관리 목록
	* @
	* @ 수정일       	수정자    수정내용
	* @ ──────────────────────────────────────────────────────────────────────
	* @ 2021.02.17  박승현    최초생성
	* @
	────────────────────────────────────────────────────────────────────────-->
	<select id="getApprovalGoodsDiscountList" resultType="kr.co.pulmuone.v1.goods.goods.dto.vo.GoodsApprovalResultVo">
		/* goodsList.getApprovalGoodsDiscountList */
		SELECT
			IGDA.IL_GOODS_DISCOUNT_APPR_ID AS IL_GOODS_APPR_ID
			, IGDA.APPR_STAT AS APPR_STAT
			, II.IL_ITEM_CD AS ITEM_CODE
			, IG.IL_GOODS_ID AS GOODS_ID
			, IFNULL((CASE WHEN II.ERP_IF_YN = 'Y'
				THEN II.ERP_ITEM_BARCODE
				ELSE II.ITEM_BARCODE
				END),'') AS ITEM_BARCODE
			, IG.GOODS_NM AS GOODS_NAME
			, IG.GOODS_TP AS GOODS_TYPE_CODE
			, FN_COMN_CODE_DIC(IG.GOODS_TP) AS GOODS_TYPE_NAME
			, UW.WAREHOUSE_NM AS WAREHOUSE_NAME
			, UC.COMP_NM AS SUPPLIER_NAME
			, FN_COMN_CODE_DIC(IGDA.APPR_STAT) AS APPR_STAT_NAME
			, REQUU.LOGIN_ID AS APPROVAL_REQUEST_USER_ID
			, FN_DECRYPT(REQUU.USER_NM) AS APPROVAL_REQUEST_USER_NAME
			, IGDA.APPR_REQ_DT AS APPROVAL_REQUEST_DT
			, SUBUU.LOGIN_ID AS APPROVAL_SUB_USER_ID
			, FN_DECRYPT(SUBUU.USER_NM) AS APPROVAL_SUB_USER_NAME
			, SUBGUU.LOGIN_ID AS APPROVAL_SUB_GRANT_USER_ID
			, FN_DECRYPT(SUBGUU.USER_NM) AS APPROVAL_SUB_GRANT_USER_NAME
			, SUBCHG.LOGIN_ID AS APPROVAL_SUB_CHANGE_USER_ID
			, FN_DECRYPT(SUBCHG.USER_NM) AS APPROVAL_SUB_CHANGE_USER_NAME
			, IGDA.APPR_SUB_CHG_DT AS APPROVAL_SUB_CHANGE_DT
			, APPRUU.LOGIN_ID AS APPROVAL_USER_ID
			, FN_DECRYPT(APPRUU.USER_NM) AS APPROVAL_USER_NAME
			, APPRGUU.LOGIN_ID AS APPROVAL_GRANT_USER_ID
			, FN_DECRYPT(APPRGUU.USER_NM) AS APPROVAL_GRANT_USER_NAME
			, CHGUU.LOGIN_ID AS APPROVAL_CHANGE_USER_ID
			, FN_DECRYPT(CHGUU.USER_NM) AS APPROVAL_CHANGE_USER_NAME
			, IGDA.APPR_CHG_DT AS APPROVAL_CHANGE_DT
			, IGDA.DISCOUNT_TP AS DISCOUNT_TYPE
			, IGDA.DISCOUNT_START_DT AS DISCOUNT_START_DT
			, IGDA.DISCOUNT_END_DT AS DISCOUNT_END_DT
			, IGDA.DISCOUNT_METHOD_TP AS DISCOUNT_METHOD_TYPE
		    , IGDA.STANDARD_PRICE AS STANDARD_PRICE
			, IGDA.RECOMMENDED_PRICE AS RECOMMENDED_PRICE
			, IGDA.DISCOUNT_RATIO AS DISCOUNT_RATIO
			, IGDA.DISCOUNT_SALE_PRICE AS DISCOUNT_SALE_PRICE
			, CASE
				WHEN APPR_STAT = 'APPR_STAT.REQUEST' OR APPR_STAT = 'APPR_STAT.SUB_APPROVED'
					THEN IGP.STANDARD_PRICE
				ELSE IGDA.STANDARD_PRICE_CHG
			END AS STANDARD_PRICE_CHG
			, CASE
				WHEN APPR_STAT = 'APPR_STAT.REQUEST' OR APPR_STAT = 'APPR_STAT.SUB_APPROVED'
					THEN IGP.RECOMMENDED_PRICE
				ELSE IGDA.RECOMMENDED_PRICE_CHG
			END AS RECOMMENDED_PRICE_CHG
			, CASE
				WHEN IGDA.APPR_STAT = 'APPR_STAT.DENIED' THEN IFNULL((
					SELECT
						STATUS_CMNT
					FROM
						IL_GOODS_DISCOUNT_APPR_STATUS_HISTORY IGDASH
					WHERE
						IGDASH.IL_GOODS_DISCOUNT_APPR_ID = IGDA.IL_GOODS_DISCOUNT_APPR_ID
						AND IGDASH.APPR_STAT = 'APPR_STAT.DENIED'
					ORDER BY IGDASH.IL_GOODS_DISCOUNT_APPR_STATUS_HISTORY_ID DESC
					LIMIT 1
				), '')
				ELSE ''
			END AS APPR_STAT_CMNT
            , II.TAX_YN
		FROM IL_GOODS_DISCOUNT_APPR IGDA
			INNER JOIN IL_GOODS IG
				ON IG.IL_GOODS_ID = IGDA.IL_GOODS_ID
			INNER JOIN IL_ITEM II
				ON II.IL_ITEM_CD = IG.IL_ITEM_CD
			INNER JOIN UR_WAREHOUSE UW
				ON UW.UR_WAREHOUSE_ID = IG.UR_WAREHOUSE_ID
			INNER JOIN UR_SUPPLIER US
				ON US.UR_SUPPLIER_ID = II.UR_SUPPLIER_ID
			INNER JOIN UR_SUPPLIER_WAREHOUSE USW
				ON IG.UR_WAREHOUSE_ID = USW.UR_WAREHOUSE_ID
				AND II.UR_SUPPLIER_ID = USW.UR_SUPPLIER_ID
			INNER JOIN IL_ITEM_WAREHOUSE IIW
				ON USW.UR_SUPPLIER_WAREHOUSE_ID = IIW.UR_SUPPLIER_WAREHOUSE_ID
				AND II.IL_ITEM_CD = IIW.IL_ITEM_CD
			INNER JOIN UR_COMPANY UC
				ON UC.UR_COMPANY_ID = US.UR_COMPANY_ID
			LEFT JOIN UR_USER SUBUU
				ON IGDA.APPR_SUB_USER_ID = SUBUU.UR_USER_ID
			LEFT JOIN UR_EMPLOYEE SUBUE
				ON IGDA.APPR_SUB_USER_ID = SUBUE.UR_USER_ID
			LEFT JOIN UR_EMPLOYEE SUBGUE
				ON SUBUE.GRANT_AUTH_USER_ID IS NOT NULL
				AND SUBUE.GRANT_AUTH_STOP_YN = 'N'
				AND SUBUE.GRANT_AUTH_USER_ID = SUBGUE.UR_USER_ID
				AND CURDATE() BETWEEN SUBUE.GRANT_AUTH_START_DT AND SUBUE.GRANT_AUTH_END_DT
			LEFT JOIN UR_USER SUBGUU
				ON SUBGUE.UR_USER_ID = SUBGUU.UR_USER_ID
			LEFT JOIN UR_USER SUBCHG
				ON IGDA.APPR_SUB_CHG_USER_ID = SUBCHG.UR_USER_ID
			LEFT JOIN UR_USER APPRUU
				ON IGDA.APPR_USER_ID = APPRUU.UR_USER_ID
			LEFT JOIN UR_EMPLOYEE APPRUE
				ON IGDA.APPR_USER_ID = APPRUE.UR_USER_ID
			LEFT JOIN UR_EMPLOYEE APPRGUE
				ON APPRUE.GRANT_AUTH_USER_ID IS NOT NULL
				AND APPRUE.GRANT_AUTH_STOP_YN = 'N'
				AND APPRUE.GRANT_AUTH_USER_ID = APPRGUE.UR_USER_ID
				AND CURDATE() BETWEEN APPRUE.GRANT_AUTH_START_DT AND APPRUE.GRANT_AUTH_END_DT
			LEFT JOIN UR_USER APPRGUU
				ON APPRGUE.UR_USER_ID = APPRGUU.UR_USER_ID
			LEFT JOIN UR_USER CHGUU
				ON IGDA.APPR_CHG_USER_ID = CHGUU.UR_USER_ID
			LEFT JOIN UR_USER REQUU
				ON IGDA.APPR_REQ_USER_ID = REQUU.UR_USER_ID
			LEFT JOIN IL_GOODS_PRICE IGP
				ON IGDA.IL_GOODS_ID = IGP.IL_GOODS_ID
				AND IGP.USE_YN = 'Y'
				AND NOW() BETWEEN IGP.PRICE_START_DT AND IGP.PRICE_END_DT
		WHERE
			IGDA.APPR_STAT NOT IN ('APPR_STAT.DISPOSAL', 'APPR_STAT.APPROVED_BY_SYSTEM')
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(selectConditionType)">
				<choose>
					<when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(selectConditionType, "singleSection")'>
						<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(findKeyword)">
							<choose>
		                        <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchCondition, "ALL")'> <!-- 전체 -->
		                            AND
		                            (
		                            IG.IL_GOODS_ID IN
		                            <foreach collection="findKeywordList" item="goodsId" index="index" separator=","
		                                     open="(" close=")">
		                                #{goodsId}
		                            </foreach>
		                            OR
		                            II.IL_ITEM_CD IN
		                            <foreach collection="findKeywordList" item="itemCode" index="index" separator=","
		                                     open="(" close=")">
		                                #{itemCode}
		                            </foreach>
		                            OR
		                            II.ERP_ITEM_BARCODE IN
		                            <foreach collection="findKeywordList" item="erpItemBarcode" index="index"
		                                     separator="," open="(" close=")">
		                                #{erpItemBarcode}
		                            </foreach>
		                            OR
		                            II.ITEM_BARCODE IN
		                            <foreach collection="findKeywordList" item="itemBarcode" index="index" separator=","
		                                     open="(" close=")">
		                                #{itemBarcode}
		                            </foreach>
		                            )
		                        </when>
		                        <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchCondition, "GOODS_CODE")'> <!-- 상품코드 -->
		                            AND IG.IL_GOODS_ID IN
		                            <foreach collection="findKeywordList" item="goodsId" index="index" separator=","
		                                     open="(" close=")">
		                                #{goodsId}
		                            </foreach>
		                        </when>
		                        <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchCondition, "ITEM_CODE")'> <!-- 마스터 품목코드 -->
		                            AND II.IL_ITEM_CD IN
		                            <foreach collection="findKeywordList" item="itemCode" index="index" separator=","
		                                     open="(" close=")">
		                                #{itemCode}
		                            </foreach>
		                        </when>
		                        <when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchCondition, "ITEM_BARCODE")'> <!-- 품목 바코드 -->
		                            AND
		                            (
		                            II.ERP_ITEM_BARCODE IN
		                            <foreach collection="findKeywordList" item="erpItemBarcode" index="index"
		                                     separator="," open="(" close=")">
		                                #{erpItemBarcode}
		                            </foreach>
		                            OR
		                            II.ITEM_BARCODE IN
		                            <foreach collection="findKeywordList" item="itemBarcode" index="index" separator=","
		                                     open="(" close=")">
		                                #{itemBarcode}
		                            </foreach>
		                            )
		                        </when>
		                    </choose>
		                </if>
		            </when>
		            <otherwise>
		                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(goodsName)"> <!-- 상품명 -->
		                    AND IG.GOODS_NM LIKE CONCAT('%', #{goodsName}, '%')
		                </if>
		                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(supplierId)"> <!-- 공급업체 -->
		                    AND II.UR_SUPPLIER_ID = #{supplierId}
		                </if>
		                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(warehouseGroup)"> <!-- 출고처그룹코드 -->
		                    AND UW.WAREHOUSE_GRP_CD = #{warehouseGroup}
		                </if>
		                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(warehouseId)"> <!-- 출고처그룹기준 출고처 -->
		                    AND IG.UR_WAREHOUSE_ID = #{warehouseId}
		                </if>
		                <if test="goodsTypeList.size() > 0"> <!-- 상품유형 -->
		                    AND IG.GOODS_TP IN
		                    <foreach collection="goodsTypeList" item="goodsTypeCode" index="index" separator=","
		                             open="(" close=")">
		                        #{goodsTypeCode}
		                    </foreach>
		                </if>
		                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(searchApprReqUserType)">
		                    <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(searchApprReqUser)">
		                        <choose>
		                            <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchApprReqUserType,'ID')">
		                                AND REQUU.LOGIN_ID = #{searchApprReqUser}
		                            </when>
		                            <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchApprReqUserType,'NAME')">
		                                AND FN_DECRYPT(REQUU.USER_NM) = #{searchApprReqUser}
		                            </when>
		                        </choose>
		                    </if>
		                </if>
		                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(searchApprChgUserType)">
		                    <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(searchApprChgUser)">
		                        <choose>
		                            <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchApprChgUserType,'ID')">
		                                AND (
		                                SUBUU.LOGIN_ID = #{searchApprChgUser}
		                                OR
		                                APPRUU.LOGIN_ID = #{searchApprChgUser}
									    OR
										SUBGUU.LOGIN_ID = #{searchApprChgUser}
										OR
										APPRGUU.LOGIN_ID = #{searchApprChgUser}
		                                )
		                            </when>
		                            <when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchApprChgUserType,'NAME')">
		                                AND (
		                                FN_DECRYPT(SUBUU.USER_NM) = #{searchApprChgUser}
		                                OR
		                                FN_DECRYPT(APPRUU.USER_NM) = #{searchApprChgUser}
									    OR
										FN_DECRYPT(SUBGUU.USER_NM) = #{searchApprChgUser}
				                        OR
										FN_DECRYPT(APPRGUU.USER_NM) = #{searchApprChgUser}
		                                )
		                            </when>
		                        </choose>
		                    </if>
		                </if>
		                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(approvalReqStartDate)">
		                    <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(approvalReqEndDate)">
		                        AND IGDA.APPR_REQ_DT BETWEEN #{approvalReqStartDate} AND #{approvalReqEndDate} + INTERVAL
		                        1 DAY - INTERVAL 1 SECOND
		                    </if>
		                </if>
		                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(approvalChgStartDate)">
		                    <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(approvalChgEndDate)">
		                        AND (
		                        IGDA.APPR_SUB_CHG_DT BETWEEN #{approvalChgStartDate} AND #{approvalChgEndDate} + INTERVAL
		                        1 DAY - INTERVAL 1 SECOND
		                        OR
		                        IGDA.APPR_CHG_DT BETWEEN #{approvalChgStartDate} AND #{approvalChgEndDate} + INTERVAL 1
		                        DAY - INTERVAL 1 SECOND
		                        )
		                    </if>
		                </if>
						<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(approvalStatusArray) and approvalStatusArray.size() > 0">
					        AND IGDA.APPR_STAT IN
					        <foreach item="data" index="index" collection="approvalStatusArray" open="(" separator="," close=")">
					            #{data}
					        </foreach>
					    </if>
		            </otherwise>
		        </choose>
		    </if>
		ORDER BY IGDA.APPR_REQ_DT DESC
	</select>

	<!--───────────────────────────────────────────────────────────────────────
     * description		:	상품할인 승인 요청철회
     * @
     * @ 수정일			수정자	수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2021.02.17		박승현	최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <update id="putCancelRequestApprovalGoodsDiscount">
		/*	goodsList.putCancelRequestApprovalGoodsDiscount	*/
		UPDATE IL_GOODS_DISCOUNT_APPR IGDA
		SET
			APPR_STAT = #{apprStat}
			, APPR_SUB_USER_ID = null
			, APPR_SUB_CHG_USER_ID = null
			, APPR_SUB_CHG_DT = null
			, APPR_USER_ID = null
			, APPR_CHG_USER_ID = null
			, APPR_CHG_DT = null
			, MODIFY_DT		 = NOW()
			, MODIFY_ID		 = #{userVo.userId}
			, STANDARD_PRICE_CHG = IFNULL((
				SELECT
					STANDARD_PRICE
				FROM IL_GOODS_PRICE
				WHERE
					IL_GOODS_ID = IGDA.IL_GOODS_ID
					AND USE_YN = 'Y'
					AND NOW() BETWEEN PRICE_START_DT AND PRICE_END_DT
				LIMIT 1
			), 0)
			, RECOMMENDED_PRICE_CHG = IFNULL((
				SELECT
					RECOMMENDED_PRICE
				FROM IL_GOODS_PRICE
				WHERE
					IL_GOODS_ID = IGDA.IL_GOODS_ID
					AND USE_YN = 'Y'
					AND NOW() BETWEEN PRICE_START_DT AND PRICE_END_DT
				LIMIT 1
			), 0)
		WHERE
			IGDA.IL_GOODS_DISCOUNT_APPR_ID = #{taskPk}
	</update>

	<!--───────────────────────────────────────────────────────────────────────
     * description		:	상품할인 승인 폐기처리
     * @
     * @ 수정일			수정자	수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2021.07.05		원종한	최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <update id="putDisposalApprovalGoodsDiscount">
		/* goodsList.putDisposalApprovalGoodsDiscount */
		UPDATE IL_GOODS_DISCOUNT_APPR
		SET
			APPR_STAT = #{apprStat}
			, MODIFY_DT = NOW()
			, MODIFY_ID = #{userVo.userId}
			, APPR_DISPOSAL_YN = 'Y'
		WHERE IL_GOODS_DISCOUNT_APPR_ID = #{taskPk}
	</update>

	<!--───────────────────────────────────────────────────────────────────────
     * description		:	상품할인 승인처리
     * @
     * @ 수정일			수정자	수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2021.02.17		박승현	최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <update id="putApprovalProcessGoodsDiscount">
		/*	goodsList.putApprovalProcessGoodsDiscount	*/
		UPDATE IL_GOODS_DISCOUNT_APPR IGDA
		SET
			APPR_STAT = #{apprStat}
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(apprStep,'APPR_STAT.SUB_APPROVED')">
			, APPR_SUB_CHG_DT = NOW()
			, APPR_SUB_CHG_USER_ID = #{userVo.userId}
			</if>
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(apprStep,'APPR_STAT.APPROVED')">
			, APPR_CHG_DT = SYSDATE()
			, APPR_CHG_USER_ID = #{userVo.userId}
			</if>
			, STANDARD_PRICE_CHG = IFNULL((
				SELECT
					STANDARD_PRICE
				FROM IL_GOODS_PRICE
				WHERE
					IL_GOODS_ID = IGDA.IL_GOODS_ID
					AND USE_YN = 'Y'
					AND NOW() BETWEEN PRICE_START_DT AND PRICE_END_DT
				LIMIT 1
			), 0)
			, RECOMMENDED_PRICE_CHG = IFNULL((
				SELECT
					RECOMMENDED_PRICE
				FROM IL_GOODS_PRICE
				WHERE
					IL_GOODS_ID = IGDA.IL_GOODS_ID
					AND USE_YN = 'Y'
					AND NOW() BETWEEN PRICE_START_DT AND PRICE_END_DT
				LIMIT 1
			), 0)
			, MODIFY_DT		 = NOW()
			, MODIFY_ID		 = #{userVo.userId}
		WHERE
			IGDA.IL_GOODS_DISCOUNT_APPR_ID = #{taskPk}
	</update>

	<!--───────────────────────────────────────────────────────────────────────
     * description		:	상품할인 상태이력 등록
     * @
     * @ 수정일			수정자	수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2021.02.08		박승현	최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
	<insert id="addGoodsDiscountStatusHistory">
		/* goodsList.addGoodsDiscountStatusHistory */
		INSERT INTO IL_GOODS_DISCOUNT_APPR_STATUS_HISTORY
		(
			IL_GOODS_DISCOUNT_APPR_ID
			<!-- , STATUS -->
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(statusComment)">
			, STATUS_CMNT
			</if>
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(prevApprStat)">
			, PREV_APPR_STAT
			</if>
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(apprStat)">
			, APPR_STAT
			</if>
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(apprSubUserId)">
			, APPR_SUB_USER_ID
			</if>
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(apprUserId)">
			, APPR_USER_ID
			</if>
			, CREATE_DT
			, CREATE_ID
		)
		VALUES
		(
			#{taskPk}
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(statusComment)">
			,#{statusComment}
			</if>
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(prevApprStat)">
			,#{prevApprStat}
			</if>
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(apprStat)">
			,#{apprStat}
			</if>
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(apprSubUserId)">
			,#{apprSubUserId}
			</if>
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(apprUserId)">
			,#{apprUserId}
			</if>
			,SYSDATE()
			,#{userVo.userId}
		)
	</insert>

    <!--───────────────────────────────────────────────────────────────────────
     * description      : 상품 판매상태 조회
     * @
     * @ 수정일         수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2021.05.20     원종한          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <select id="getGoodsSaleStatusInfo" resultType="kr.co.pulmuone.v1.goods.goods.dto.GoodsRegistRequestDto">
        /* goodsList.getGoodsSaleStatusInfo */
		SELECT
            IG.IL_GOODS_ID
			, IG.SALE_STATUS
			, IFNULL((
				SELECT
					APPR_STAT
				FROM
					IL_ITEM_APPR
				WHERE
					IL_ITEM_CD = IG.IL_ITEM_CD
					AND APPR_KIND_TP = 'APPR_KIND_TP.ITEM_CLIENT'
				ORDER BY IL_ITEM_APPR_ID DESC
				LIMIT 1
			), '') AS ITEM_CLIENT_APPR_STAT
			, IFNULL((
				SELECT
					APPR_STAT
				FROM
					IL_GOODS_APPR
				WHERE
					IL_GOODS_ID = IG.IL_GOODS_ID
					AND APPR_KIND_TP = 'APPR_KIND_TP.GOODS_CLIENT'
				ORDER BY IL_GOODS_APPR_ID DESC
				LIMIT 1
			), '') AS GOODS_CLIENT_APPR_STAT
		FROM
			IL_GOODS IG
		WHERE
            IG.IL_GOODS_ID = #{goodsId}
    </select>

    <select id="getCurrentGoodsPriceByGoodsDiscountApprId" resultType="kr.co.pulmuone.v1.goods.price.dto.vo.GoodsPriceVo">
        SELECT IGP.RECOMMENDED_PRICE AS RECOMMENDED_PRICE
             , IGP.STANDARD_PRICE AS STANDARD_PRICE
        FROM IL_GOODS_PRICE IGP
                 JOIN IL_GOODS_DISCOUNT_APPR IGDA ON IGP.IL_GOODS_ID = IGDA.IL_GOODS_ID AND IGDA.IL_GOODS_DISCOUNT_APPR_ID = #{goodsDiscountApprId}
        WHERE NOW() BETWEEN PRICE_START_DT AND PRICE_END_DT
        ORDER BY IL_GOODS_PRICE_ID DESC
        LIMIT 1
    </select>

</mapper>