<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.pulmuone.v1.comm.mapper.goods.goods.GoodsGoodsMapper">

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 상품 조회
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.08.11		천혜현          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<resultMap type="kr.co.pulmuone.v1.goods.goods.dto.vo.BasicSelectGoodsVo" id="getGoodsResultMap">
		<result column="IL_GOODS_ID"  property="ilGoodsId"  />
		<result column="IL_ITEM_CD"  property="ilItemCode" />
		<result column="GOODS_TP"  property="goodsType" />
		<result column="SALE_TP"  property="saleType" />
		<result column="RECOMMENDED_PRICE"  property="recommendedPrice" />
		<result column="SALE_PRICE"  property="salePrice" />
		<result column="DISCOUNT_TP"  property="discountType" />
		<result column="DISCOUNT_TP_NM"  property="discountTypeName" />
		<result column="STANDARD_PRICE"  property="standardPrice" />
		<result column="GOODS_NAME"  property="goodsName" />
		<result column="SALE_STATUS"  property="systemSaleStatus" />
		<result column="SALE_STATUS"  property="saleStatus" />
		<result column="LIMIT_MIN_CNT"  property="limitMinimumCount" />
		<result column="LIMIT_MAX_CNT"  property="limitMaximumCount" />
		<result column="LIMIT_MAX_TP"  property="limitMaximumType" />
		<result column="LIMIT_MAX_CNT_YN"  property="limitMaximumCountYn" />
		<result column="DAWN_DLVRY_YN"  property="dawnDeliveryYn" />
		<result column="GOODS_DAILY_TP"  property="goodsDailyType" />
		<result column="GOODS_DAILY_ALLERGY_YN"  property="goodsDailyAllergyYn" />
		<result column="GOODS_DAILY_BULK_YN"  property="goodsDailyBulkYn" />
		<result column="UNDELIVERABLE_AREA_TP"  property="undeliverableAreaType" />
		<result column="UR_SUPPLIER_ID"  property="urSupplierId" />
		<result column="UR_WAREHOUSE_ID"  property="urWareHouseId" />
		<result column="COUPON_USE_YN"  property="couponUseYn" />
		<result column="TAX_YN"  property="taxYn" />
		<result column="UR_BRAND_ID"  property="urBrandId" />
		<result column="DP_BRAND_ID"  property="dpBrandId" />
		<result column="DP_BRAND_NM"  property="dpBrandName" />
		<result column="IL_CTGRY_ID"  property="ilCtgryId" />
		<result column="GOODS_PACKAGE_IMG_TP"  property="goodsPackageImageType" />
		<result column="WAREHOUSE_GRP_CD"  property="warehouseGroupCode" />
		<result column="PURCHASE_MEMBER_YN"  property="purchaseMemberYn" />
		<result column="PURCHASE_EMPLOYEE_YN"  property="purchaseEmployeeYn" />
		<result column="PURCHASE_NONMEMBER_YN"  property="purchaseNonmemberYn" />
		<result column="HEALTH_GOODS_YN"        property="healthGoodsYn" />
		<result column="SALE_SHOP_YN"        property="saleShopYn" />
		<result column="PRESENT_YN"        property="presentYn" />
		<result column="DETAIL_GOODS_NAME"        property="detailGoodsName" />
	</resultMap>
	<select id="getBasicSelectGoods" resultMap="getGoodsResultMap">
		/*	goodsGoods.getBasicSelectGoods	*/
		SELECT
			CONCAT(IF(R2.GOODS_TP = 'GOODS_TYPE.RENTAL',CONCAT('[렌탈]',IF(IFNULL(R2.PROMOTION_NAME,'') = '', ' ', '')),''), IFNULL(R2.PROMOTION_NAME,''), R2.GOODS_NM, IFNULL(CONCAT(' ', R2.SIZE_UNIT),'')) AS GOODS_NAME
			,R2.GOODS_NM AS DETAIL_GOODS_NAME
			,R2.*
		FROM (
			SELECT
				IG.IL_GOODS_ID
				,II.IL_ITEM_CD
				,IG.GOODS_TP
				,IG.SALE_TP
				,IGP.RECOMMENDED_PRICE
				,IGP.SALE_PRICE
				,IGP.DISCOUNT_TP
				,FN_COMN_CODE_DIC(IGP.DISCOUNT_TP) AS DISCOUNT_TP_NM
				,IGP.STANDARD_PRICE
				,IG.GOODS_NM
				,IF(SYSDATE() BETWEEN IG.PROMOTION_NM_START_DT AND IG.PROMOTION_NM_END_DT,
                             IF(IG.PROMOTION_NM IS NULL OR TRIM(IG.PROMOTION_NM) = '', '', CONCAT('[', IG.PROMOTION_NM, '] ')), '') AS PROMOTION_NAME
                ,IF(IG.PACKAGE_UNIT_DISP_YN = 'Y', IF(IG.GOODS_TP = 'GOODS_TYPE.PACKAGE', CONCAT('(',IG.PACKAGE_UNIT_DESC,')'), CONCAT('(', CAST(II.SIZE_PER_PACKAGE AS float),
                     CASE
                        WHEN II.SIZE_UNIT = 'UNIT_TYPE.DIRECT_INPUT' THEN II.SIZE_UNIT_ETC
                        ELSE FN_COMN_CODE_DIC(II.SIZE_UNIT)
                      END
                   , IF(II.QTY_PER_PACKAGE IS NOT NULL, CONCAT('x', II.QTY_PER_PACKAGE,
                      CASE WHEN II.PACKAGE_UNIT = 'UNIT_TYPE.DIRECT_INPUT' THEN II.PACKAGE_UNIT_ETC
                           ELSE FN_COMN_CODE_DIC(II.PACKAGE_UNIT)
                      END
                     ), ''), ')'
                    )), '') AS SIZE_UNIT
                <choose>
					<when test="isBosCreateOrder">
					,CASE WHEN
						(SYSDATE() BETWEEN IG.SALE_START_DT AND IG.SALE_END_DT)
						AND IG.SALE_STATUS IN ('SALE_STATUS.ON_SALE', 'SALE_STATUS.STOP_SALE', 'SALE_STATUS.OUT_OF_STOCK_BY_MANAGER', 'SALE_STATUS.OUT_OF_STOCK_BY_SYSTEM', 'SALE_STATUS.STOP_PERMANENT_SALE', 'SALE_STATUS.WAIT', 'SALE_STATUS.SAVE')
					THEN IF(IG.SALE_STATUS IN ('SALE_STATUS.WAIT','SALE_STATUS.OUT_OF_STOCK_BY_MANAGER'), 'SALE_STATUS.ON_SALE', IG.SALE_STATUS)
					ELSE 'SALE_STATUS.STOP_SALE'
					END AS SALE_STATUS
					</when>
					<otherwise>
					,CASE WHEN
						(SYSDATE() BETWEEN IG.SALE_START_DT AND IG.SALE_END_DT)
						AND IG.SALE_STATUS IN ('SALE_STATUS.ON_SALE', 'SALE_STATUS.STOP_SALE', 'SALE_STATUS.OUT_OF_STOCK_BY_MANAGER', 'SALE_STATUS.OUT_OF_STOCK_BY_SYSTEM', 'SALE_STATUS.STOP_PERMANENT_SALE', 'SALE_STATUS.SAVE')
					THEN IG.SALE_STATUS
					ELSE 'SALE_STATUS.STOP_SALE'
					END AS SALE_STATUS
					</otherwise>
				</choose>
				,IG.LIMIT_MIN_CNT
				,IG.LIMIT_MAX_CNT
				,IG.LIMIT_MAX_TP
				,CASE WHEN IG.LIMIT_MAX_TP = 'PURCHASE_LIMIT_MAX_TP.UNLIMIT'
				      THEN 'N'
				      ELSE 'Y'
				      END AS LIMIT_MAX_CNT_YN
				,UW.DAWN_DLVRY_YN
				,IG.GOODS_DAILY_TP
				,IG.GOODS_DAILY_ALLERGY_YN
				,IG.GOODS_DAILY_BULK_YN
				,II.UNDELIVERABLE_AREA_TP
				,II.UR_SUPPLIER_ID
				,IG.UR_WAREHOUSE_ID
				,IG.COUPON_USE_YN
				,II.TAX_YN
				,II.UR_BRAND_ID
				,II.DP_BRAND_ID
				,DB.DP_BRAND_NM
				,IGC.IL_CTGRY_ID
				,IG.GOODS_PACKAGE_IMG_TP
				,UW.WAREHOUSE_GRP_CD
				,IG.PURCHASE_MEMBER_YN
				,IG.PURCHASE_EMPLOYEE_YN
				,IG.PURCHASE_NONMEMBER_YN
				,(CASE WHEN II.IL_SPEC_MASTER_ID = (SELECT PS_VAL FROM PS_CONFIG PC WHERE PS_KEY = 'SPEC_MASTER_HEALTH_ID') THEN 'Y' ELSE 'N' END) AS HEALTH_GOODS_YN
				,IG.SALE_SHOP_YN
				,IG.PRESENT_YN
			FROM
				IL_GOODS IG
				JOIN IL_ITEM II ON II.IL_ITEM_CD = IG.IL_ITEM_CD
				JOIN IL_GOODS_PRICE IGP ON IGP.IL_GOODS_ID = IG.IL_GOODS_ID AND IGP.USE_YN = 'Y'
				JOIN UR_WAREHOUSE UW ON IG.UR_WAREHOUSE_ID = UW.UR_WAREHOUSE_ID
				LEFT JOIN IL_GOODS_CTGRY IGC ON (IGC.IL_GOODS_ID = IG.IL_GOODS_ID AND IGC.BASIC_YN = 'Y' AND IGC.MALL_DIV ='MALL_DIV.PULMUONE')
				LEFT JOIN DP_BRAND DB ON (DB.DP_BRAND_ID = II.DP_BRAND_ID)
			WHERE
				IG.IL_GOODS_ID = #{ilGoodsId}
				AND IG.DEL_YN = 'N'
				AND SYSDATE() BETWEEN IGP.PRICE_START_DT AND IGP.PRICE_END_DT
				<if test="!onlySearchIlGoodsId">
					<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(deviceInfo)">
						<choose>
							<when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(deviceInfo,'pc')">
								AND IG.DISP_WEB_PC_YN = 'Y'
							</when>
							<when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(deviceInfo,'mobile')">
								AND IG.DISP_WEB_MOBILE_YN = 'Y'
							</when>
						</choose>
					</if>
					<if test="isApp">
						AND IG.DISP_APP_YN = 'Y'
					</if>
					<choose>
						<when test="isEmployee">
							AND (IG.PURCHASE_EMPLOYEE_YN = 'Y' OR IG.PURCHASE_MEMBER_YN = 'Y')
						</when>
						<when test="isMember">
							AND IG.PURCHASE_MEMBER_YN = 'Y'
						</when>
					</choose>
				</if>
		) R2
		LIMIT 1
	</select>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 주문에 필요한 상품 조회
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.01.06		홍진영          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<resultMap type="kr.co.pulmuone.v1.goods.goods.dto.vo.OrderSelectGoodsVo" id="getOrderGoodsInfoMap">
		<result column="IL_SHIPPING_TMPL_ID"  	property="ilShippingTmplId" />
		<result column="UR_WAREHOUSE_ID"  property="urWarehouseId" />
		<result column="UR_SUPPLIER_ID"  property="urSupplierId" />
		<result column="WAREHOUSE_GRP_CD"  property="warehouseGroupCode" />
		<result column="STORAGE_METHOD_TP"  property="storageMethodType" />
		<result column="GOODS_TP"  property="goodsType" />
		<result column="SALE_TP"  property="saleType" />
		<result column="IL_CTGRY_STD_ID"  property="ilCtgryStdId"  />
		<result column="IL_CTGRY_DISPLAY_ID"  property="ilCtgryDisplayId"  />
		<result column="IL_CTGRY_MALL_ID"  property="ilCtgryMallId"  />
		<result column="ITEM_BARCODE"  property="itemBarcode"  />
		<result column="IL_ITEM_CD"  property="ilItemCode" />
		<result column="STANDARD_PRICE"  property="standardPrice" />
		<result column="RECOMMENDED_PRICE"  property="recommendedPrice" />
		<result column="UR_BRAND_ID"  property="urBrandId" />
		<result column="GOODS_DAILY_TP"  property="goodsDailyType" />
	</resultMap>
	<select id="getOrderGoodsInfo" resultMap="getOrderGoodsInfoMap">
		/*	goodsGoods.getOrderGoodsInfo	*/
		SELECT
			ST.IL_SHIPPING_TMPL_ID
			,IG.UR_WAREHOUSE_ID
			,II.UR_SUPPLIER_ID
			,UW.WAREHOUSE_GRP_CD
			,II.STORAGE_METHOD_TP
			,IG.GOODS_TP
			,IG.SALE_TP
			,II.IL_CTGRY_STD_ID
			,IGC.IL_CTGRY_ID AS IL_CTGRY_DISPLAY_ID
			,IGCM.IL_CTGRY_ID AS IL_CTGRY_MALL_ID
			,II.ITEM_BARCODE
			,II.IL_ITEM_CD
			,IGP.STANDARD_PRICE
			,IGP.RECOMMENDED_PRICE
			,II.UR_BRAND_ID
			,IG.GOODS_DAILY_TP
		FROM
			IL_GOODS IG
			JOIN IL_ITEM II ON II.IL_ITEM_CD = IG.IL_ITEM_CD
			JOIN IL_GOODS_PRICE IGP ON IGP.IL_GOODS_ID = IG.IL_GOODS_ID AND IGP.USE_YN = 'Y'
			JOIN UR_WAREHOUSE UW ON IG.UR_WAREHOUSE_ID = UW.UR_WAREHOUSE_ID
			JOIN IL_GOODS_SHIPPING_TEMPLATE GST ON (IG.IL_GOODS_ID = GST.IL_GOODS_ID AND IG.UR_WAREHOUSE_ID = GST.UR_WAREHOUSE_ID)
			JOIN IL_SHIPPING_TEMPLATE ST ON (ST.ORIG_IL_SHIPPING_TMPL_ID = GST.ORIG_IL_SHIPPING_TMPL_ID AND ST.DEL_YN = 'N')
			LEFT JOIN IL_GOODS_CTGRY IGC ON (IGC.IL_GOODS_ID = IG.IL_GOODS_ID AND IGC.BASIC_YN = 'Y' AND IGC.MALL_DIV ='MALL_DIV.PULMUONE')
			LEFT JOIN IL_GOODS_CTGRY IGCM ON (IGCM.IL_GOODS_ID = IG.IL_GOODS_ID AND IGCM.BASIC_YN = 'Y' AND IGCM.MALL_DIV !='MALL_DIV.PULMUONE')
		WHERE
			IG.IL_GOODS_ID = #{ilGoodsId}
			AND SYSDATE() BETWEEN IGP.PRICE_START_DT AND IGP.PRICE_END_DT
	</select>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 상품 상세 조회
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.08.11		천혜현          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<resultMap type="kr.co.pulmuone.v1.goods.goods.dto.vo.DetailSelectGoodsVo" id="getGoodsDetailResultMap">
		<result column="IL_GOODS_ID"  property="ilGoodsId"  />
		<result column="IL_ITEM_CD"  property="ilItemCode" />
		<result column="GOODS_TP"  property="goodsTp" />
		<result column="GOODS_NAME"  property="goodsName" />
		<result column="BRAND_NM"  property="brandName" />
		<result column="UR_BRAND_NM"  property="urBrandName" />
		<result column="GOODS_DESC"  property="goodsDescription" />
		<result column="SEARCH_KYWRD"  property="goodsSearchKeyword" />
		<result column="STORAGE_METHOD_TP"  property="storageMethodTypeName" />
		<result column="BASIC_DESC"  property="basicDescription"  />
		<result column="DETL_DESC"  property="detailDescription" />
		<result column="CLAIM_DESC"  property="claimDescription" />
		<result column="CTGRY_ID_DEPTH2"  property="categoryIdDepth2" />
		<result column="NUTRITION_DISP_YN"  property="nutritionDisplayYn" />
		<result column="NUTRITION_QTY_PER_ONCE"  property="nutritionQtyPerOnce"  />
		<result column="NUTRITION_QTY_TOTAL"  property="nutritionQtyTotal" />
		<result column="NUTRITION_ETC"  property="nutritionEtc" />
		<result column="NUTRITION_DISP_DEFAULT"  property="nutritionDisplayDefault" />
		<result column="NOTICE_BELOW_1_IMG_URL"  property="noticeBelow1ImageUrl" />
		<result column="NOTICE_BELOW_2_IMG_URL"  property="noticeBelow2ImageUrl" />
		<result column="VIDEO_AUTOPLAY_YN"  property="videoAutoplayYn" />
		<result column="VIDEO_URL"  property="videoUrl" />
		<result column="GOODS_PACKAGE_BASIC_DESC_YN"  property="goodsPackageBasicDescYn" />
		<result column="GOODS_PACKAGE_BASIC_DESC"  property="goodsPackageBasicDesc" />
		<result column="IS_NEW_GOODS"  property="isNewGoods" />
		<result column="IS_BEST_GOODS"  property="isBestGoods" />
		<result column="IS_RECOMMENDED_GOODS"  property="isRecommendedGoods" />
		<result column="GOODS_PACKAGE_IMG_TP"  property="goodsPackageImageType" />
		<result column="UR_SUPPLIER_ID"  property="urSupplierId" />
		<result column="SALE_TP"  property="saleType" />
		<result column="RENTAL_FEE_PER_MONTH"  property="rentalFeePerMonth" />
		<result column="RENTAL_DUE_MONTH"  property="rentalDueMonth" />
		<result column="RENTAL_DEPOSIT"  property="rentalDeposit" />
		<result column="RENTAL_INSTALL_FEE"  property="rentalInstallFee" />
		<result column="RENTAL_REGIST_FEE"  property="rentalRegistFee" />
		<result column="GOODS_IMAGE"  property="goodsImage" />
	</resultMap>
	<select id="getDetailSelectGoods" resultMap="getGoodsDetailResultMap">
		/*	goodsGoods.getDetailSelectGoods	*/
		SELECT
			A.*
			,CONCAT(IF(A.GOODS_TP = 'GOODS_TYPE.RENTAL',CONCAT('[렌탈]',IF(LEFT(A.TEMP_GOODS_NAME, 1) != '[', ' ', '')),''), A.TEMP_GOODS_NAME) AS GOODS_NAME
		FROM (
			SELECT
				IG.IL_GOODS_ID
				,II.IL_ITEM_CD
				,II.UR_SUPPLIER_ID
				,IG.GOODS_TP
				,IG.SALE_TP
				,CASE WHEN IG.PACKAGE_UNIT_DISP_YN = 'Y'
					  THEN CONCAT(IF(SYSDATE() BETWEEN IG.PROMOTION_NM_START_DT AND IG.PROMOTION_NM_END_DT, IF(IG.PROMOTION_NM IS NULL OR TRIM(IG.PROMOTION_NM) = '', '', CONCAT('[',IG.PROMOTION_NM,'] ')), ''), IG.GOODS_NM, '(', CAST(II.SIZE_PER_PACKAGE AS float), CASE WHEN II.SIZE_UNIT = 'UNIT_TYPE.DIRECT_INPUT'
																							   THEN II.SIZE_UNIT_ETC
																							   ELSE FN_COMN_CODE_DIC(II.SIZE_UNIT)
																						  	   END, IF(II.QTY_PER_PACKAGE IS NOT NULL, CONCAT('x',II.QTY_PER_PACKAGE, CASE WHEN II.PACKAGE_UNIT = 'UNIT_TYPE.DIRECT_INPUT'
																																 									THEN II.PACKAGE_UNIT_ETC
																																  									ELSE IFNULL(FN_COMN_CODE_DIC(II.PACKAGE_UNIT) , '')
																																									END),''),')')
					  ELSE CONCAT(IF(SYSDATE() BETWEEN IG.PROMOTION_NM_START_DT AND IG.PROMOTION_NM_END_DT,CONCAT('[',IG.PROMOTION_NM,'] '),''),IG.GOODS_NM)
					  END AS TEMP_GOODS_NAME
				,DB.DP_BRAND_NM AS BRAND_NM
				,UB.BRAND_NM AS UR_BRAND_NM
				,IG.GOODS_DESC
				,IG.SEARCH_KYWRD
				,FN_COMN_CODE_DIC(II.STORAGE_METHOD_TP) AS STORAGE_METHOD_TP
				,II.BASIC_DESC
				,II.DETL_DESC
		 		,(SELECT ICDI.`DESC` FROM IL_CLAIM_DESC_INFO ICDI WHERE ICDI.USE_YN = 'Y'
		 			AND ((ICDI.ITEM_TP = II.ITEM_TP AND ICDI.GOODS_TP = IG.GOODS_TP) OR (ICDI.ITEM_TP = II.ITEM_TP AND IFNULL(ICDI.GOODS_TP, '') = '') OR (IFNULL(ICDI.ITEM_TP, '') ='' AND IFNULL(ICDI.GOODS_TP, '') = ''))
					ORDER BY IFNULL(ICDI.ITEM_TP, '') DESC, IFNULL(ICDI.GOODS_TP, '') DESC LIMIT 1) AS CLAIM_DESC
		 		,ICPI.CTGRY_ID_DEPTH2
		 		,II.NUTRITION_DISP_YN
		 		,II.NUTRITION_QTY_PER_ONCE
				,II.NUTRITION_QTY_TOTAL
				,II.NUTRITION_ETC
				,II.NUTRITION_DISP_DEFAULT
				,IF(NOW() BETWEEN NOTICE_BELOW_1_START_DT AND NOTICE_BELOW_1_END_DT, IG.NOTICE_BELOW_1_IMG_URL , '') AS NOTICE_BELOW_1_IMG_URL
				,IF(NOW() BETWEEN NOTICE_BELOW_2_START_DT AND NOTICE_BELOW_2_END_DT, IG.NOTICE_BELOW_2_IMG_URL , '') AS NOTICE_BELOW_2_IMG_URL
				,CASE WHEN IG.GOODS_TP = 'GOODS_TYPE.PACKAGE'
					  THEN IG.GOODS_PACKAGE_VIDEO_AUTOPLAY_YN
					  ELSE II.VIDEO_AUTOPLAY_YN
					  END AS VIDEO_AUTOPLAY_YN
				,CASE WHEN IG.GOODS_TP = 'GOODS_TYPE.PACKAGE'
					  THEN IG.GOODS_PACKAGE_VIDEO_URL
					  ELSE II.VIDEO_URL
					  END AS VIDEO_URL
				,IG.GOODS_PACKAGE_BASIC_DESC_YN
				,IG.GOODS_PACKAGE_BASIC_DESC
				,CASE WHEN IG.CREATE_DT > DATE_ADD(now(), INTERVAL -1 QUARTER) THEN true ELSE false END AS IS_NEW_GOODS
	            , (SELECT EXISTS(SELECT 1 FROM IL_GOODS_RANKING IGR WHERE IGR.IL_GOODS_ID = IG.IL_GOODS_ID AND IGR.BEST_YN = 'Y')) AS IS_BEST_GOODS
	            ,CASE WHEN IG.MD_RECOMMEND_YN = 'Y' THEN true ELSE false END IS_RECOMMENDED_GOODS
	            ,IG.GOODS_PACKAGE_IMG_TP
	            ,II.RENTAL_FEE_PER_MONTH
	            ,II.RENTAL_DUE_MONTH
	            ,II.RENTAL_DEPOSIT
	            ,II.RENTAL_INSTALL_FEE
	            ,II.RENTAL_REGIST_FEE
				,FN_GOODS_S_IMG(IG.IL_GOODS_ID) AS GOODS_IMAGE
			FROM
				IL_GOODS IG
				JOIN IL_ITEM II ON II.IL_ITEM_CD = IG.IL_ITEM_CD
				LEFT JOIN DP_BRAND DB ON II.DP_BRAND_ID = DB.DP_BRAND_ID
				LEFT JOIN UR_BRAND UB ON II.UR_BRAND_ID = UB.UR_BRAND_ID
	 			LEFT JOIN IL_GOODS_CTGRY IGC ON (IGC.IL_GOODS_ID = IG.IL_GOODS_ID AND IGC.BASIC_YN = 'Y' AND IGC.MALL_DIV ='MALL_DIV.PULMUONE')
	 			LEFT JOIN IL_CTGRY_PRNTS_INFO ICPI ON IGC.IL_CTGRY_ID = ICPI.IL_CTGRY_ID
			WHERE
				IG.IL_GOODS_ID = #{ilGoodsId}
		) A
		LIMIT 1
	</select>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 상품 상세 조회(품목코드용)
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.05.14		최용호          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<select id="getDetailSelectGoodsForItemCd" resultMap="getGoodsDetailResultMap">
		/*	goodsGoods.getDetailSelectGoodsForItemCd	*/
		SELECT
			IG.IL_GOODS_ID
		FROM
			IL_GOODS IG
		WHERE
			IG.IL_ITEM_CD = #{ilItemCd}
			AND IG.GOODS_TP = 'GOODS_TYPE.NORMAL'
			AND IG.DISP_YN = 'Y'
			AND IG.DISP_APP_YN ='Y'
			AND IG.DISP_WEB_PC_YN = 'Y'
			AND IG.DISP_WEB_MOBILE_YN = 'Y'
		ORDER BY IG.IL_GOODS_ID
		LIMIT 1
	</select>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 상품 상세 조회(바코드용)
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.05.14		최용호          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<select id="getDetailSelectGoodsForBarCode" resultMap="getGoodsDetailResultMap">
		/*	goodsGoods.getDetailSelectGoodsForBarCode	*/
		SELECT
			IG.IL_GOODS_ID
		FROM
			IL_GOODS IG, IL_ITEM II
		WHERE
			IG.IL_ITEM_CD = II.IL_ITEM_CD
			AND IG.GOODS_TP = 'GOODS_TYPE.NORMAL'
			AND IG.DISP_YN = 'Y'
			AND IG.DISP_APP_YN ='Y'
			AND IG.DISP_WEB_PC_YN = 'Y'
			AND IG.DISP_WEB_MOBILE_YN = 'Y'
			AND II.ITEM_BARCODE = #{barCode}
		ORDER BY IG.IL_GOODS_ID
		LIMIT 1
	</select>


	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 상품인증정보 목록 조회
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.08.12		천혜현          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<resultMap type="kr.co.pulmuone.v1.goods.goods.dto.vo.GoodsCertificationListResultVo" id="getGoodsCertificationListResultMap">
		<result column="CERTIFICATION_NM"  property="certificationName"  />
		<result column="IMAGE"  property="image" />
		<result column="CERTIFICATION_DESC"  property="certificationDescription" />
	</resultMap>
	<select id="getGoodsCertificationList" resultMap="getGoodsCertificationListResultMap">
		/*	goodsGoods.getGoodsCertificationList	*/
		SELECT
			IC.CERTIFICATION_NM
			,CONCAT(IC.IMG_PATH, IC.IMG_NM) AS IMAGE
			,IC.DEFAULT_CERTIFICATION_DESC AS CERTIFICATION_DESC
		FROM
			IL_CERTIFICATION IC
			JOIN IL_ITEM_CERTIFICATION IIC ON IC.IL_CERTIFICATION_ID = IIC.IL_CERTIFICATION_ID
			JOIN IL_GOODS IG ON IG.IL_ITEM_CD = IIC.IL_ITEM_CD
		WHERE
			IG.IL_GOODS_ID = #{ilGoodsId}
		ORDER BY IC.IL_CERTIFICATION_ID ASC
	</select>


	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 상품정보제공고시 항목
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.08.12		천혜현          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<resultMap type="kr.co.pulmuone.v1.goods.goods.dto.vo.GoodsSpecListResultVo" id="getGoodsSpecListResultMap">
		<result column="SPEC_FIELD_NM"  property="specFieldName"  />
		<result column="SPEC_FIELD_VAL"  property="specFieldValue" />
	</resultMap>
	<select id="getGoodsSpecList" resultMap="getGoodsSpecListResultMap">
		/*	goodsGoods.getGoodsSpecList	*/
		SELECT
			E.SPEC_FIELD_NM
			, CASE
				WHEN E.SPEC_FIELD_CD = 'SPEC_FIELD_02' THEN IFNULL((
					SELECT
						CSTMR_SRVC_TEL
					FROM
						UR_COMPANY A1
						INNER JOIN UR_HEADQUARTERS B1
							ON B1.UR_COMPANY_ID = A1.UR_COMPANY_ID
					WHERE
						A1.COMP_TP = 'COMPANY_TYPE.HEADQUARTERS'
					LIMIT 1
				), '080-022-0085')
				WHEN E.SPEC_FIELD_CD = 'SPEC_FIELD_01' THEN
					CASE
						WHEN F.IL_ITEM_SPEC_VALUE_ID IS NOT NULL AND F.DIRECT_YN = 'Y' THEN F.SPEC_FIELD_VAL
						ELSE
							IFNULL((
								SELECT
									CONCAT('잔여 유통기한이 ', DELIVERY, '일 이상 남은 제품이 배송됩니다. / 유통기한 : ', C2.DISTRIBUTION_PERIOD, '일')
								FROM
									IL_ITEM_WAREHOUSE A2
										INNER JOIN UR_SUPPLIER_WAREHOUSE B2
												   ON B2.UR_SUPPLIER_WAREHOUSE_ID = A2.UR_SUPPLIER_WAREHOUSE_ID
										INNER JOIN IL_STOCK_DEADLINE C2
												   ON C2.UR_SUPPLIER_ID = B2.UR_SUPPLIER_ID
													   AND C2.UR_WAREHOUSE_ID IN (B2.UR_WAREHOUSE_ID, 0)
													   AND C2.BASIC_YN = 'Y'
								WHERE
									A2.IL_ITEM_CD = B.IL_ITEM_CD
								  AND B2.UR_WAREHOUSE_ID = A.UR_WAREHOUSE_ID
								  AND C2.DISTRIBUTION_PERIOD &lt;= B.DISTRIBUTION_PERIOD
								ORDER BY C2.UR_WAREHOUSE_ID DESC, C2.DISTRIBUTION_PERIOD DESC
								LIMIT 1
								), 0)
						END
				WHEN F.IL_ITEM_SPEC_VALUE_ID IS NULL THEN E.BASIC_VAL
				ELSE F.SPEC_FIELD_VAL
			END AS SPEC_FIELD_VAL
		FROM
			IL_GOODS A
			INNER JOIN IL_ITEM B
				ON B.IL_ITEM_CD = A.IL_ITEM_CD
			INNER JOIN IL_SPEC_MASTER C
				ON C.IL_SPEC_MASTER_ID = B.IL_SPEC_MASTER_ID
				AND C.USE_YN = 'Y'
			INNER JOIN IL_SPEC_MASTER_FIELD D
				ON D.IL_SPEC_MASTER_ID = C.IL_SPEC_MASTER_ID
			INNER JOIN IL_SPEC_FIELD E
				ON E.IL_SPEC_FIELD_ID = D.IL_SPEC_FIELD_ID
			LEFT JOIN IL_ITEM_SPEC_VALUE F
				ON F.IL_ITEM_CD = B.IL_ITEM_CD
				AND F.IL_SPEC_FIELD_ID = E.IL_SPEC_FIELD_ID
		WHERE
			A.IL_GOODS_ID = #{ilGoodsId}
		ORDER BY D.SORT
	</select>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 영양정보 조회
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.08.18		천혜현          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<resultMap type="kr.co.pulmuone.v1.goods.goods.dto.vo.GoodsNutritionListResultVo" id="getGoodsNutritionListResultMap">
		<result column="NUTRITION_NM"  property="nutritionName"  />
		<result column="NUTRITION_UNIT"  property="nutritionUnit"  />
		<result column="NUTRITION_PERCENT_YN"  property="nutritionPercentYn"  />
		<result column="NUTRITION_QTY"  property="nutritionQty"  />
		<result column="NUTRITION_PERCENT"  property="nutritionPercent"  />
	</resultMap>
	<select id="getGoodsNutritionList" resultMap="getGoodsNutritionListResultMap">
		/*	goodsGoods.getGoodsNutritionList	*/
		SELECT
			ILN.NUTRITION_NM
			,ILN.NUTRITION_UNIT
			,ILN.NUTRITION_PERCENT_YN
			,CONCAT(CAST(IIN.NUTRITION_QTY AS float),'') AS NUTRITION_QTY
			,CONCAT(CAST(IIN.NUTRITION_PERCENT AS float),'') AS NUTRITION_PERCENT
		FROM
			IL_ITEM_NUTRITION IIN
			JOIN IL_NUTRITION ILN ON IIN.IL_NUTRITION_CD = ILN.IL_NUTRITION_CD
		WHERE
			IIN.IL_ITEM_CD = #{ilItemCode}
		ORDER BY ILN.IL_NUTRITION_CD
	</select>


	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 추가구성 상품 리스트
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.08.18		천혜현          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<resultMap type="hashMap" id="getAdditionalGoodsListResultMap">
		<result column="TARGET_GOODS_ID" property="TARGET_GOODS_ID" javaType="java.lang.Long" />
		<result column="SALE_PRICE" property="SALE_PRICE" javaType="java.lang.Integer"  />
	</resultMap>
	<select id="getAdditionalGoodsList" resultMap="getAdditionalGoodsListResultMap">
		/*	goodsGoods.getAdditionalGoodsList	*/
		SELECT
			TARGET_GOODS_ID
			,SALE_PRICE
		FROM
			IL_GOODS_ADDITIONAL_GOODS_MAPPING
		WHERE
			IL_GOODS_ID = #{ilGoodsId}
		ORDER BY SALE_PRICE, TARGET_GOODS_ID
	</select>


	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 묶음상품 조회
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.08.21		천혜현          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<resultMap type="kr.co.pulmuone.v1.goods.goods.dto.vo.PackageGoodsResultVo" id="getPackageGoodsListResultMap">
		<result column="IL_GOODS_ID"  		property="ilGoodsId"  />
		<result column="GOODS_QTY"  		property="goodsQty" />
		<result column="UNIT_SALE_PRICE"	property="unitSalePrice"  />
		<result column="SALE_PRICE"  		property="salePrice" />
		<result column="TAX_YN"  			property="taxYn" />
		<result column="IL_ITEM_CD"  		property="ilItemCd" />
	</resultMap>
	<select id="getPackageGoodsList" resultMap="getPackageGoodsListResultMap">
		/*	goodsGoods.getPackageGoodsList	*/
		SELECT
			 TIG.IL_GOODS_ID
			,IGPGM.GOODS_QTY
			, CASE
				WHEN IGP.DISCOUNT_TP = 'GOODS_DISCOUNT_TP.NOT_APPLICABLE' THEN IFNULL(TIGP.RECOMMENDED_PRICE, 0)
				ELSE IFNULL(IGPIFD.UNIT_SALE_PRICE, 0)
			END AS UNIT_SALE_PRICE
			, CASE
				WHEN IGP.DISCOUNT_TP = 'GOODS_DISCOUNT_TP.NOT_APPLICABLE' THEN IFNULL(TIGP.RECOMMENDED_PRICE * IGPGM.GOODS_QTY, 0)
				ELSE IFNULL(IGPIFD.SALE_PRICE, 0)
			END AS SALE_PRICE
			,II.TAX_YN
			,II.IL_ITEM_CD
		FROM
			IL_GOODS IG
			JOIN IL_GOODS_PRICE IGP ON IGP.IL_GOODS_ID = IG.IL_GOODS_ID AND SYSDATE() BETWEEN IGP.PRICE_START_DT AND IGP.PRICE_END_DT AND IGP.USE_YN = 'Y'
			JOIN IL_GOODS_PACKAGE_GOODS_MAPPING IGPGM ON IG.IL_GOODS_ID = IGPGM.IL_GOODS_ID
			JOIN IL_GOODS TIG ON TIG.IL_GOODS_ID = IGPGM.TARGET_GOODS_ID
			JOIN IL_GOODS_PRICE TIGP ON TIGP.IL_GOODS_ID = TIG.IL_GOODS_ID AND SYSDATE() BETWEEN TIGP.PRICE_START_DT AND TIGP.PRICE_END_DT AND TIGP.USE_YN = 'Y'
			JOIN IL_ITEM II ON II.IL_ITEM_CD = TIG.IL_ITEM_CD
			LEFT JOIN IL_GOODS_PACKAGE_ITEM_FIXED_DISCOUNT_PRICE IGPIFD ON IGPIFD.IL_GOODS_DISCOUNT_ID = IGP.IL_GOODS_DISCOUNT_ID AND IGPIFD.IL_GOODS_PACKAGE_GOODS_MAPPING_ID = IGPGM.IL_GOODS_PACKAGE_GOODS_MAPPING_ID
		WHERE
			IG.IL_GOODS_ID = #{ilGoodsId}
		ORDER BY IF(IGPGM.GOODS_TP NOT IN('GOODS_TYPE.GIFT','GOODS_TYPE.GIFT_FOOD_MARKETING'), IGPGM.IMG_SORT, 99999), IGPGM.IMG_SORT
	</select>


	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 예약상품 옵션 조회
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.08.24		천혜현          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<resultMap type="kr.co.pulmuone.v1.goods.goods.dto.GoodsReserveOptionListDto" id="getGoodsReserveOptionListResultMap">
		<result column="IL_GOODS_RESERVE_OPTN_ID"  property="ilGoodsReserveOptionId"  />
		<result column="SALE_SEQ"  property="saleSeq" />
		<result column="RESERVE_START_DT"  property="reserveStartDate" />
		<result column="RESERVE_END_DT"  property="reserveEndDate" />
		<result column="ARRIVE_DATE"  property="arriveDate"  />
		<result column="STOCK_QTY"  property="stockQty" />
	</resultMap>
	<select id="getGoodsReserveOptionList" resultMap="getGoodsReserveOptionListResultMap">
		/*	goodsGoods.getGoodsReserveOptionList	*/
		SELECT IGRO.IL_GOODS_RESERVE_OPTN_ID
			 , @rownum:=@rownum+1 AS SALE_SEQ
			 , IGRO.RESERVE_START_DT
			 , IGRO.RESERVE_END_DT
			 , IGRO.ARRIVE_DATE
			 , (IGRO.STOCK_QTY - IFNULL((SELECT SUM(ODD.ORDER_CNT - IFNULL(ODD.CANCEL_CNT, 0))
					FROM OD_ORDER OO JOIN OD_ORDER_DETL ODD ON (ODD.OD_ORDER_ID=OO.OD_ORDER_ID)
					WHERE OO.ORDER_YN = 'Y' AND ODD.IL_GOODS_RESERVE_OPTN_ID = IGRO.IL_GOODS_RESERVE_OPTN_ID),0)) AS STOCK_QTY
		FROM IL_GOODS_RESERVE_OPTN IGRO
			INNER JOIN (SELECT @rownum:=0) F
		WHERE IGRO.IL_GOODS_ID = #{ilGoodsId}
		  AND IGRO.DEL_YN = 'N'
		ORDER BY IGRO.SALE_SEQ
	</select>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 예약상품 옵션 조회
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.09.17		홍진영          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<resultMap type="kr.co.pulmuone.v1.goods.goods.dto.vo.GoodsReserveOptionVo" id="getGoodsReserveOptionMap">
		<result column="IL_GOODS_RESERVE_OPTN_ID"  property="ilGoodsReserveOptionId"  />
		<result column="SALE_SEQ"  property="saleSeq" />
		<result column="RESERVE_START_DT"  property="reserveStartDate" />
		<result column="RESERVE_END_DT"  property="reserveEndDate" />
		<result column="STOCK_QTY"  property="stockQty" />
		<result column="ORDER_IF_DATE"  property="orderIfDate" />
		<result column="RELEASE_DATE"  property="releaseDate" />
		<result column="ARRIVE_DATE"  property="arriveDate"  />
	</resultMap>
	<select id="getGoodsReserveOption" resultMap="getGoodsReserveOptionMap">
		/*	goodsGoods.getGoodsReserveOption	*/
		SELECT IGRO.IL_GOODS_RESERVE_OPTN_ID
		     , @rownum:=@rownum+1 AS SALE_SEQ
		     , IGRO.RESERVE_START_DT
		     , IGRO.RESERVE_END_DT
		     , (IGRO.STOCK_QTY - IFNULL((SELECT SUM(ODD.ORDER_CNT - IFNULL(ODD.CANCEL_CNT, 0))
					FROM OD_ORDER OO JOIN OD_ORDER_DETL ODD ON (ODD.OD_ORDER_ID=OO.OD_ORDER_ID)
					WHERE OO.ORDER_YN = 'Y' AND ODD.IL_GOODS_RESERVE_OPTN_ID = IGRO.IL_GOODS_RESERVE_OPTN_ID),0)) AS STOCK_QTY
		     , IGRO.ORDER_IF_DATE
		     , IGRO.RELEASE_DATE
		     , IGRO.ARRIVE_DATE
		FROM IL_GOODS_RESERVE_OPTN IGRO
			INNER JOIN (SELECT @rownum:=0) F
		WHERE IGRO.IL_GOODS_RESERVE_OPTN_ID = #{ilGoodsReserveOptnId}
		  AND IGRO.DEL_YN = 'N'
	</select>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 일일배송 주기
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.08.24		천혜현          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<select id="getGoodsDailyCycleList" resultType="HashMap">
		/*	goodsGoods.getGoodsDailyCycleList	*/
		SELECT
			GOODS_CYCLE_TP
			,FN_COMN_CODE_DIC(GOODS_CYCLE_TP) AS GOODS_CYCLE_TP_NM
		FROM
			IL_GOODS_DAILY_CYCLE
		WHERE
			IL_GOODS_ID = #{ilGoodsId}
		GROUP BY GOODS_CYCLE_TP
		ORDER BY GOODS_CYCLE_TP
	</select>


	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 일일배송 기간
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.08.31		천혜현          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<select id="getGoodsDailyCycleTermList" resultType="HashMap">
		/*	goodsGoods.getGoodsDailyCycleTermList	*/
		SELECT
			GOODS_CYCLE_TERM_TP AS goodsDailyCycleTermType
			,FN_COMN_CODE_DIC(GOODS_CYCLE_TERM_TP) AS goodsDailyCycleTermTypeName
		FROM
			IL_GOODS_DAILY_CYCLE
		WHERE
			IL_GOODS_ID = #{ilGoodsId}
			AND GOODS_CYCLE_TP = #{goodsCycleType}
		ORDER BY GOODS_CYCLE_TP
	</select>


	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 일괄배송
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.08.24		천혜현          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<select id="getGoodsDailyBulkList" resultType="HashMap">
		/*	goodsGoods.getGoodsDailyBulkList	*/
		SELECT
			GOODS_BULK_TP AS goodsBulkType
			,FN_COMN_CODE_DIC(GOODS_BULK_TP) AS goodsBulkTypeName
		FROM
			IL_GOODS_DAILY_BULK
		WHERE
			IL_GOODS_ID = #{ilGoodsId}
	</select>


	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 품목이미지
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.08.27		천혜현          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<resultMap type="kr.co.pulmuone.v1.goods.goods.dto.GoodsImageDto" id="getItemImageListResultMap">
		<result column="BASIC_YN"  property="basicYn" />
		<result column="IMG_NM"  property="imageName"  />
		<result column="IMG_ORIGIN_NM"  property="imageOriginName" />
		<result column="B_IMG"  property="bImage"  />
		<result column="M_IMG"  property="mImage" />
		<result column="MS_IMG"  property="msImage"  />
		<result column="S_IMG"  property="sImage" />
		<result column="C_IMG"  property="cImage"  />
		<result column="SORT"  property="sort" />
	</resultMap>
	<select id="getItemImageList" resultMap="getItemImageListResultMap">
		/*	goodsGoods.getItemImageList	*/
		SELECT
			BASIC_YN
			,IMG_NM
			,IMG_ORIGIN_NM
			,B_IMG
			,M_IMG
			,MS_IMG
			,S_IMG
			,C_IMG
			,SORT
		FROM
			IL_ITEM_IMG
		WHERE
			IL_ITEM_CD = #{ilItemCode}
		ORDER BY SORT
	</select>


	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 묶음상품의 품목이미지 중 기본이미지 리스트
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.08.27		천혜현          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<resultMap type="kr.co.pulmuone.v1.goods.goods.dto.GoodsImageDto" id="getGoodsPackageBasicItemImageListMap">
		<result column="BASIC_YN"  property="basicYn" />
		<result column="IMG_NM"  property="imageName"  />
		<result column="IMG_ORIGIN_NM"  property="imageOriginName" />
		<result column="B_IMG"  property="bImage"  />
		<result column="M_IMG"  property="mImage" />
		<result column="MS_IMG"  property="msImage"  />
		<result column="S_IMG"  property="sImage" />
		<result column="C_IMG"  property="cImage"  />
		<result column="SORT"  property="sort" />
	</resultMap>
	<select id="getGoodsPackageBasicItemImageList" resultMap="getGoodsPackageBasicItemImageListMap">
		/*	goodsGoods.getGoodsPackageBasicItemImageList	*/
		SELECT
			III.BASIC_YN
			,III.IMG_NM
			,III.IMG_ORIGIN_NM
			,III.B_IMG
			,III.M_IMG
			,III.MS_IMG
			,III.S_IMG
			,III.C_IMG
			,III.SORT
		FROM
			IL_GOODS IG
			JOIN IL_GOODS_PACKAGE_GOODS_MAPPING IGPGM ON IG.IL_GOODS_ID = IGPGM.IL_GOODS_ID
			JOIN IL_GOODS IG2 ON IGPGM.TARGET_GOODS_ID = IG2.IL_GOODS_ID
			JOIN IL_ITEM_IMG III ON III.IL_ITEM_CD = IG2.IL_ITEM_CD
		WHERE
			IG.IL_GOODS_ID = #{ilGoodsId}
			AND III.BASIC_YN = 'Y'
			AND IG2.GOODS_TP NOT IN ('GOODS_TYPE.GIFT','GOODS_TYPE.GIFT_FOOD_MARKETING')
		ORDER BY IGPGM.IMG_SORT
	</select>


	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 묶음상품의 품목이미지 리스트
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.08.27		천혜현          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<resultMap type="kr.co.pulmuone.v1.goods.goods.dto.GoodsImageDto" id="getGoodsPackageGoodsImageListMap">
		<result column="BASIC_YN"  property="basicYn" />
		<result column="IMG_NM"  property="imageName"  />
		<result column="IMG_ORIGIN_NM"  property="imageOriginName" />
		<result column="B_IMG"  property="bImage"  />
		<result column="M_IMG"  property="mImage" />
		<result column="MS_IMG"  property="msImage"  />
		<result column="S_IMG"  property="sImage" />
		<result column="C_IMG"  property="cImage"  />
		<result column="SORT"  property="sort" />
	</resultMap>
	<select id="getGoodsPackageGoodsImageList" resultMap="getGoodsPackageGoodsImageListMap">
		/*	goodsGoods.getGoodsPackageGoodsImageList	*/
		SELECT
			IMG_NM
			,IMG_ORIGIN_NM
			,B_IMG
			,M_IMG
			,MS_IMG
			,S_IMG
			,C_IMG
			,SORT
		FROM
			IL_GOODS_IMG
		WHERE
			IL_GOODS_ID = #{ilGoodsId}
		ORDER BY SORT
	</select>


	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 묶음상품의 품목이미지 중 기본 이미지
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.08.27		천혜현          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<resultMap type="kr.co.pulmuone.v1.goods.goods.dto.GoodsImageDto" id="getGoodsBasicImageMap">
		<result column="BASIC_YN"  property="basicYn" />
		<result column="IMG_NM"  property="imageName"  />
		<result column="IMG_ORIGIN_NM"  property="imageOriginName" />
		<result column="B_IMG"  property="bImage"  />
		<result column="M_IMG"  property="mImage" />
		<result column="MS_IMG"  property="msImage"  />
		<result column="S_IMG"  property="sImage" />
		<result column="C_IMG"  property="cImage"  />
		<result column="SORT"  property="sort" />
	</resultMap>
	<select id="getGoodsBasicImage" resultMap="getGoodsBasicImageMap">
		/*	goodsGoods.getGoodsBasicImage	*/
		SELECT
			IMG_NM
			,IMG_ORIGIN_NM
			,B_IMG
			,M_IMG
			,MS_IMG
			,S_IMG
			,C_IMG
			,SORT
		FROM
			IL_GOODS_IMG
		WHERE
			IL_GOODS_ID = #{ilGoodsId}
			AND BASIC_YN = 'Y'
	</select>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		:  품목 기본 이미지
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.09.07		홍진영          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<resultMap type="kr.co.pulmuone.v1.goods.goods.dto.GoodsImageDto" id="getItemBaiscImageMap">
		<result column="BASIC_YN"  property="basicYn" />
		<result column="IMG_NM"  property="imageName"  />
		<result column="IMG_ORIGIN_NM"  property="imageOriginName" />
		<result column="B_IMG"  property="bImage"  />
		<result column="M_IMG"  property="mImage" />
		<result column="MS_IMG"  property="msImage"  />
		<result column="S_IMG"  property="sImage" />
		<result column="C_IMG"  property="cImage"  />
		<result column="SORT"  property="sort" />
	</resultMap>
	<select id="getItemBaiscImage" resultMap="getItemBaiscImageMap">
		/*	goodsGoods.getItemBaiscImage	*/
		SELECT
			IMG_NM
			,IMG_ORIGIN_NM
			,B_IMG
			,M_IMG
			,MS_IMG
			,S_IMG
			,C_IMG
			,SORT
		FROM
			IL_ITEM_IMG
		WHERE
			IL_ITEM_CD = #{ilItemCode}
			AND BASIC_YN = 'Y'
	</select>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		:  품목 기본 이미지
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.09.07		홍진영          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<resultMap type="kr.co.pulmuone.v1.goods.goods.dto.ArrivalScheduledDateDto" id="getArrivalScheduledDateDtoByShippingPatternMap">
		<result column="ORDER_DATE"  property="orderDate" />
		<result column="ORDER_WEEK_CD"  property="orderWeekCode"  />
		<result column="FORWARDING_SCHEDULED_DATE"  property="forwardingScheduledDate" />
		<result column="ARRIVAL_SCHEDULED_DATE"  property="arrivalScheduledDate"  />
		<result column="STOCK"  property="stock" />
	</resultMap>
	<select id="getArrivalScheduledDateDtoByShippingPattern" resultMap="getArrivalScheduledDateDtoByShippingPatternMap">
		/*	goodsGoods.getArrivalScheduledDateDtoByShippingPattern	*/
		SELECT * FROM (
			SELECT
			 LIST.ORDER_DATE
			 ,LIST.ORDER_WEEK_CD
			 ,LIST.FORWARDING_SCHEDULED_DATE
			 ,LIST.ARRIVAL_SCHEDULED_DATE
			,IFNULL(
				 IF(LIST.STOCK_ORDER_YN = 'Y',
			 		(CASE DATEDIFF(LIST.FORWARDING_SCHEDULED_DATE, LIST.TODAY) + LIST.FORWARDING_SCHEDULED_DAY
						WHEN 0 THEN IF(LIST.TODAY_IL_ITEM_WAREHOUSE_ID IS NULL, D1_QTY_YESTERDAY, D0_QTY_TODAY)
						WHEN 1 THEN IF(LIST.TODAY_IL_ITEM_WAREHOUSE_ID IS NULL, D2_QTY_YESTERDAY, D1_QTY_TODAY)
						WHEN 2 THEN IF(LIST.TODAY_IL_ITEM_WAREHOUSE_ID IS NULL, D3_QTY_YESTERDAY, D2_QTY_TODAY)
						<!-- WHEN 2 THEN IF( HOUR (NOW()) <![CDATA[ < ]]> LIST.PO_DEADLINE_HOUR AND MINUTE (NOW()) <![CDATA[ < ]]> LIST.PO_DEADLINE_MIN, (CASE LIST.PRE_ORDER_TP WHEN 'UNLIMITED_ALLOWED' THEN 9999 WHEN 'LIMITED_ALLOWED' THEN 8888 ELSE 9999 END), IF(LIST.TODAY_IL_ITEM_WAREHOUSE_ID IS NULL, D3_QTY_YESTERDAY, D2_QTY_TODAY)) -->
						WHEN 3 THEN IF(LIST.TODAY_IL_ITEM_WAREHOUSE_ID IS NULL, D4_QTY_YESTERDAY, D3_QTY_TODAY)
						WHEN 4 THEN IF(LIST.TODAY_IL_ITEM_WAREHOUSE_ID IS NULL, D5_QTY_YESTERDAY, D4_QTY_TODAY)
						WHEN 5 THEN IF(LIST.TODAY_IL_ITEM_WAREHOUSE_ID IS NULL, D6_QTY_YESTERDAY, D5_QTY_TODAY)
						WHEN 6 THEN IF(LIST.TODAY_IL_ITEM_WAREHOUSE_ID IS NULL, D7_QTY_YESTERDAY, D6_QTY_TODAY)
						WHEN 7 THEN IF(LIST.TODAY_IL_ITEM_WAREHOUSE_ID IS NULL, D8_QTY_YESTERDAY, D7_QTY_TODAY)
						WHEN 8 THEN IF(LIST.TODAY_IL_ITEM_WAREHOUSE_ID IS NULL, D9_QTY_YESTERDAY, D8_QTY_TODAY)
						WHEN 9 THEN IF(LIST.TODAY_IL_ITEM_WAREHOUSE_ID IS NULL, D10_QTY_YESTERDAY, D9_QTY_TODAY)
						WHEN 10 THEN IF(LIST.TODAY_IL_ITEM_WAREHOUSE_ID IS NULL, D11_QTY_YESTERDAY, D10_QTY_TODAY)
						WHEN 11 THEN IF(LIST.TODAY_IL_ITEM_WAREHOUSE_ID IS NULL, D12_QTY_YESTERDAY, D11_QTY_TODAY)
						WHEN 12 THEN IF(LIST.TODAY_IL_ITEM_WAREHOUSE_ID IS NULL, D13_QTY_YESTERDAY, D12_QTY_TODAY)
						WHEN 13 THEN IF(LIST.TODAY_IL_ITEM_WAREHOUSE_ID IS NULL, D14_QTY_YESTERDAY, D13_QTY_TODAY)
						WHEN 14 THEN IF(LIST.TODAY_IL_ITEM_WAREHOUSE_ID IS NULL, D15_QTY_YESTERDAY, D14_QTY_TODAY)
						WHEN 15 THEN IF(LIST.TODAY_IL_ITEM_WAREHOUSE_ID IS NULL, D15_QTY_YESTERDAY, D15_QTY_TODAY)
					ELSE 0 END),
			 		IF(LIST.UNLIMIT_STOCK_YN = 'Y', 9999, LIST.NOT_IF_STOCK_CNT)
				 )
				 , 0) AS STOCK
			 FROM (
				 SELECT
					 days.ORDER_DATE
					 ,days.ORDER_WEEK_CD
					 ,days.FORWARDING_SCHEDULED_DATE
					 ,days.FORWARDING_SCHEDULED_DAY
					 ,days.ARRIVAL_SCHEDULED_DATE
					 ,days.TODAY
					 ,uw.STOCK_ORDER_YN
					 ,iiw.UNLIMIT_STOCK_YN
					 ,iiw.NOT_IF_STOCK_CNT
					 <!--
					 ,ipt.PO_DEADLINE_HOUR
					 ,ipt.PO_DEADLINE_MIN
					 -->
					 ,tiis.IL_ITEM_WAREHOUSE_ID AS TODAY_IL_ITEM_WAREHOUSE_ID
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', tiis.D0_ORDER_DISCARD_QTY, tiis.D0_ORDER_QTY) AS D0_QTY_TODAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', tiis.D0_ORDER_DISCARD_QTY, tiis.D1_ORDER_QTY) AS D1_QTY_TODAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', tiis.D0_ORDER_DISCARD_QTY, tiis.D2_ORDER_QTY) AS D2_QTY_TODAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', tiis.D0_ORDER_DISCARD_QTY, tiis.D3_ORDER_QTY) AS D3_QTY_TODAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', tiis.D0_ORDER_DISCARD_QTY, tiis.D4_ORDER_QTY) AS D4_QTY_TODAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', tiis.D0_ORDER_DISCARD_QTY, tiis.D5_ORDER_QTY) AS D5_QTY_TODAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', tiis.D0_ORDER_DISCARD_QTY, tiis.D6_ORDER_QTY) AS D6_QTY_TODAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', tiis.D0_ORDER_DISCARD_QTY, tiis.D7_ORDER_QTY) AS D7_QTY_TODAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', tiis.D0_ORDER_DISCARD_QTY, tiis.D8_ORDER_QTY) AS D8_QTY_TODAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', tiis.D0_ORDER_DISCARD_QTY, tiis.D9_ORDER_QTY) AS D9_QTY_TODAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', tiis.D0_ORDER_DISCARD_QTY, tiis.D10_ORDER_QTY) AS D10_QTY_TODAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', tiis.D0_ORDER_DISCARD_QTY, tiis.D11_ORDER_QTY) AS D11_QTY_TODAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', tiis.D0_ORDER_DISCARD_QTY, tiis.D12_ORDER_QTY) AS D12_QTY_TODAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', tiis.D0_ORDER_DISCARD_QTY, tiis.D13_ORDER_QTY) AS D13_QTY_TODAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', tiis.D0_ORDER_DISCARD_QTY, tiis.D14_ORDER_QTY) AS D14_QTY_TODAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', tiis.D0_ORDER_DISCARD_QTY, tiis.D15_ORDER_QTY) AS D15_QTY_TODAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', yiis.D0_ORDER_DISCARD_QTY, yiis.D0_ORDER_QTY) AS D0_QTY_YESTERDAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', yiis.D0_ORDER_DISCARD_QTY, yiis.D1_ORDER_QTY) AS D1_QTY_YESTERDAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', yiis.D0_ORDER_DISCARD_QTY, yiis.D2_ORDER_QTY) AS D2_QTY_YESTERDAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', yiis.D0_ORDER_DISCARD_QTY, yiis.D3_ORDER_QTY) AS D3_QTY_YESTERDAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', yiis.D0_ORDER_DISCARD_QTY, yiis.D4_ORDER_QTY) AS D4_QTY_YESTERDAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', yiis.D0_ORDER_DISCARD_QTY, yiis.D5_ORDER_QTY) AS D5_QTY_YESTERDAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', yiis.D0_ORDER_DISCARD_QTY, yiis.D6_ORDER_QTY) AS D6_QTY_YESTERDAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', yiis.D0_ORDER_DISCARD_QTY, yiis.D7_ORDER_QTY) AS D7_QTY_YESTERDAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', yiis.D0_ORDER_DISCARD_QTY, yiis.D8_ORDER_QTY) AS D8_QTY_YESTERDAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', yiis.D0_ORDER_DISCARD_QTY, yiis.D9_ORDER_QTY) AS D9_QTY_YESTERDAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', yiis.D0_ORDER_DISCARD_QTY, yiis.D10_ORDER_QTY) AS D10_QTY_YESTERDAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', yiis.D0_ORDER_DISCARD_QTY, yiis.D11_ORDER_QTY) AS D11_QTY_YESTERDAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', yiis.D0_ORDER_DISCARD_QTY, yiis.D12_ORDER_QTY) AS D12_QTY_YESTERDAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', yiis.D0_ORDER_DISCARD_QTY, yiis.D13_ORDER_QTY) AS D13_QTY_YESTERDAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', yiis.D0_ORDER_DISCARD_QTY, yiis.D14_ORDER_QTY) AS D14_QTY_YESTERDAY
					 ,IF(ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL', yiis.D0_ORDER_DISCARD_QTY, yiis.D15_ORDER_QTY) AS D15_QTY_YESTERDAY
				FROM
				(
				<foreach collection="scheduledDateList" item="scheduledDate" separator=" UNION ALL ">
					(
						SELECT
							#{scheduledDate.orderDate, typeHandler=kr.co.pulmuone.v1.comm.base.mybatis.hanlder.LocalDateTypeHandler, jdbcType=DATE} AS ORDER_DATE
							,#{scheduledDate.orderDate, typeHandler=kr.co.pulmuone.v1.comm.base.mybatis.hanlder.LocalDateTypeHandler, jdbcType=DATE} AS ORDER_WEEK_CD
							,DATE_ADD(#{scheduledDate.orderDate, typeHandler=kr.co.pulmuone.v1.comm.base.mybatis.hanlder.LocalDateTypeHandler, jdbcType=DATE}, INTERVAL FORWARDING_SCHEDULED_DAY DAY) AS FORWARDING_SCHEDULED_DATE
							,DATE_ADD(#{scheduledDate.orderDate, typeHandler=kr.co.pulmuone.v1.comm.base.mybatis.hanlder.LocalDateTypeHandler, jdbcType=DATE}, INTERVAL ARRIVAL_SCHEDULED_DAY DAY) AS ARRIVAL_SCHEDULED_DATE
							,FORWARDING_SCHEDULED_DAY
							,NOW() AS TODAY
						FROM
							PS_SHIPPING_PATTERN_DAY
						WHERE
							PS_SHIPPING_PATTERN_ID = #{psShippingPatternId}
							AND WEEK_CD = #{scheduledDate.orderWeekCode}
					)
				</foreach>
				) days
				LEFT JOIN IL_GOODS ig ON ( ig.IL_GOODS_ID = #{ilGoodsId} )
				LEFT JOIN IL_ITEM ii ON ( ii.IL_ITEM_CD = ig.IL_ITEM_CD )
				LEFT JOIN UR_SUPPLIER_WAREHOUSE usw ON ( usw.UR_SUPPLIER_ID = ii.UR_SUPPLIER_ID AND usw.UR_WAREHOUSE_ID = ig.UR_WAREHOUSE_ID )
				LEFT JOIN UR_WAREHOUSE uw ON ( uw.UR_WAREHOUSE_ID = usw.UR_WAREHOUSE_ID )
				LEFT JOIN IL_ITEM_WAREHOUSE iiw ON ( iiw.IL_ITEM_CD = ii.IL_ITEM_CD AND usw.UR_SUPPLIER_WAREHOUSE_ID = iiw.UR_SUPPLIER_WAREHOUSE_ID )
				LEFT JOIN IL_ITEM_STOCK tiis ON ( tiis.IL_ITEM_WAREHOUSE_ID = iiw.IL_ITEM_WAREHOUSE_ID AND tiis.BASE_DT = DATE_FORMAT(NOW() ,'%Y-%m-%d') )
				LEFT JOIN IL_ITEM_STOCK yiis ON ( yiis.IL_ITEM_WAREHOUSE_ID = iiw.IL_ITEM_WAREHOUSE_ID AND yiis.BASE_DT = DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 DAY) ,'%Y-%m-%d') )
				<!-- LEFT JOIN IL_PO_TP ipt ON ( ipt.IL_PO_TP_ID = ii.IL_PO_TP_ID ) -->
				WHERE
					ig.GOODS_TP != 'GOODS_TYPE.DISPOSAL'
					OR (ig.GOODS_TP = 'GOODS_TYPE.DISPOSAL' AND days.ORDER_DATE = DATE_FORMAT(NOW(), '%Y-%m-%d'))
			) LIST
		) LASTLIST
			WHERE STOCK <![CDATA[ >= ]]> #{buyQty}
	</select>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		:  품목 기본 이미지
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.09.07		홍진영          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<select id="setStoreArrivalScheduledDateDtoByShippingPattern" resultMap="getArrivalScheduledDateDtoByShippingPatternMap">
		/*	goodsGoods.setStoreArrivalScheduledDateDtoByShippingPattern	*/
			SELECT
				 *
			FROM
			(
			<foreach collection="scheduledDateList" item="scheduledDate" separator=" UNION ALL ">
				(
					SELECT
						#{scheduledDate.orderDate, typeHandler=kr.co.pulmuone.v1.comm.base.mybatis.hanlder.LocalDateTypeHandler, jdbcType=DATE} AS ORDER_DATE
						,#{scheduledDate.orderWeekCode} AS ORDER_WEEK_CD
						,DATE_ADD(#{scheduledDate.orderDate, typeHandler=kr.co.pulmuone.v1.comm.base.mybatis.hanlder.LocalDateTypeHandler, jdbcType=DATE}, INTERVAL FORWARDING_SCHEDULED_DAY DAY) AS FORWARDING_SCHEDULED_DATE
						,DATE_ADD(#{scheduledDate.orderDate, typeHandler=kr.co.pulmuone.v1.comm.base.mybatis.hanlder.LocalDateTypeHandler, jdbcType=DATE}, INTERVAL ARRIVAL_SCHEDULED_DAY DAY) AS ARRIVAL_SCHEDULED_DATE
						,FORWARDING_SCHEDULED_DAY
						,#{stock} AS STOCK
					FROM
						PS_SHIPPING_PATTERN_DAY
					WHERE
						PS_SHIPPING_PATTERN_ID = #{psShippingPatternId}
						AND WEEK_CD = #{scheduledDate.orderWeekCode}
				)
			</foreach>
			) days
	</select>

	<select id="setDaliyForwardingScheduledDateDtoByShippingPattern" resultMap="getArrivalScheduledDateDtoByShippingPatternMap">
		/*	goodsGoods.setDaliyForwardingScheduledDateDtoByShippingPattern	*/
		SELECT
			*
		FROM
		(
		<foreach collection="scheduledDateList" item="scheduledDate" separator=" UNION ALL ">
			(
				SELECT
					DATE_ADD(#{scheduledDate.arrivalScheduledDate, typeHandler=kr.co.pulmuone.v1.comm.base.mybatis.hanlder.LocalDateTypeHandler, jdbcType=DATE}, INTERVAL - ARRIVAL_SCHEDULED_DAY DAY) AS ORDER_DATE
					,(
						CASE WEEKDAY(DATE_ADD(#{scheduledDate.arrivalScheduledDate, typeHandler=kr.co.pulmuone.v1.comm.base.mybatis.hanlder.LocalDateTypeHandler, jdbcType=DATE}, INTERVAL - ARRIVAL_SCHEDULED_DAY DAY))
						WHEN 0 THEN 'WEEK_CD.MON'
						WHEN 1 THEN 'WEEK_CD.TUE'
						WHEN 2 THEN 'WEEK_CD.WED'
						WHEN 3 THEN 'WEEK_CD.THU'
						WHEN 4 THEN 'WEEK_CD.FRI'
						WHEN 5 THEN 'WEEK_CD.SAT'
						WHEN 6 THEN 'WEEK_CD.SUN'
						END
						) AS ORDER_WEEK_CD
					,DATE_ADD(#{scheduledDate.arrivalScheduledDate, typeHandler=kr.co.pulmuone.v1.comm.base.mybatis.hanlder.LocalDateTypeHandler, jdbcType=DATE}, INTERVAL - (ARRIVAL_SCHEDULED_DAY-FORWARDING_SCHEDULED_DAY) DAY) AS FORWARDING_SCHEDULED_DATE
					,#{scheduledDate.arrivalScheduledDate, typeHandler=kr.co.pulmuone.v1.comm.base.mybatis.hanlder.LocalDateTypeHandler, jdbcType=DATE} AS ARRIVAL_SCHEDULED_DATE
				FROM
					PS_SHIPPING_PATTERN_DAY
				WHERE
					PS_SHIPPING_PATTERN_ID = #{psShippingPatternId}
					AND WEEK_CD =  (
										CASE WEEKDAY(DATE_ADD(#{scheduledDate.arrivalScheduledDate, typeHandler=kr.co.pulmuone.v1.comm.base.mybatis.hanlder.LocalDateTypeHandler, jdbcType=DATE}, INTERVAL - ARRIVAL_SCHEDULED_DAY DAY))
											WHEN 0 THEN 'WEEK_CD.MON'
											WHEN 1 THEN 'WEEK_CD.TUE'
											WHEN 2 THEN 'WEEK_CD.WED'
											WHEN 3 THEN 'WEEK_CD.THU'
											WHEN 4 THEN 'WEEK_CD.FRI'
											WHEN 5 THEN 'WEEK_CD.SAT'
											WHEN 6 THEN 'WEEK_CD.SUN'
										END
									)
			)
		</foreach>
		) days
	</select>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 상품 전시정보 조회
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.09.17		천혜현          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<select id="getGoodsDisplayInfo" resultType="HashMap">
		/*	goodsGoods.getGoodsDisplayInfo	*/
		SELECT
			IG.DISP_WEB_PC_YN
			,IG.DISP_WEB_MOBILE_YN
			,IG.DISP_APP_YN
			,IG.PURCHASE_NONMEMBER_YN
			,IG.PURCHASE_EMPLOYEE_YN
			,IG.PURCHASE_MEMBER_YN
		FROM
			IL_GOODS IG
			JOIN IL_ITEM II ON II.IL_ITEM_CD = IG.IL_ITEM_CD
			JOIN IL_GOODS_PRICE IGP ON IGP.IL_GOODS_ID = IG.IL_GOODS_ID AND IGP.USE_YN = 'Y'
			JOIN UR_WAREHOUSE UW ON IG.UR_WAREHOUSE_ID = UW.UR_WAREHOUSE_ID
		WHERE
			IG.IL_GOODS_ID = #{ilGoodsId}
			AND IG.DEL_YN = 'N'
			AND IG.SALE_STATUS IN ('SALE_STATUS.ON_SALE', 'SALE_STATUS.STOP_SALE', 'SALE_STATUS.OUT_OF_STOCK_BY_MANAGER', 'SALE_STATUS.OUT_OF_STOCK_BY_SYSTEM', 'SALE_STATUS.SAVE')
			AND SYSDATE() BETWEEN IGP.PRICE_START_DT AND IGP.PRICE_END_DT
	</select>


	<!--───────────────────────────────────────────────────────────────────────
     * description      : 도착예정일로 배송패턴 조회
     * @
     * @ 수정일            수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2021.02.17     천혜현          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <select id="getArrivalScheduledDateDtoByIlGoodsIdArrivalScheduledDate" resultMap="getArrivalScheduledDateDtoByShippingPatternMap">
        /*  goodsGoods.getArrivalScheduledDateDtoByIlGoodsIdArrivalScheduledDate  */
        SELECT
		    DATE_SUB(#{arrivalScheduledDate}, INTERVAL PSPD.ARRIVAL_SCHEDULED_DAY DAY) AS ORDER_DATE
		    ,(CASE DAYOFWEEK(DATE_SUB(#{arrivalScheduledDate}, INTERVAL PSPD.ARRIVAL_SCHEDULED_DAY DAY)) WHEN '1' THEN 'WEEK_CD.SUN'
                                                                                                         WHEN '2' THEN 'WEEK_CD.MON'
                                                                                                         WHEN '3' THEN 'WEEK_CD.TUE'
                                                                                                         WHEN '4' THEN 'WEEK_CD.WED'
                                                                                                         WHEN '5' THEN 'WEEK_CD.THU'
                                                                                                         WHEN '6' THEN 'WEEK_CD.FRI'
                                                                                                         WHEN '7' THEN 'WEEK_CD.SAT'
                                                                                                         ELSE 'WEEK_CD.MON' END) AS ORDER_WEEK_CD
		    ,DATE_SUB(#{arrivalScheduledDate}, INTERVAL PSPD.ARRIVAL_SCHEDULED_DAY - PSPD.FORWARDING_SCHEDULED_DAY DAY) AS FORWARDING_SCHEDULED_DATE
		    ,#{arrivalScheduledDate} AS ARRIVAL_SCHEDULED_DATE
		FROM
		    IL_GOODS IG
		    INNER JOIN UR_WAREHOUSE UW ON IG.UR_WAREHOUSE_ID = UW.UR_WAREHOUSE_ID
		    INNER JOIN PS_SHIPPING_PATTERN_DAY PSPD ON UW.PS_SHIPPING_PATTERN_ID = PSPD.PS_SHIPPING_PATTERN_ID
		WHERE
		    IG.IL_GOODS_ID = #{ilGoodsId}
		    AND WEEK_CD = (CASE DAYOFWEEK(DATE_SUB(#{arrivalScheduledDate}, INTERVAL ARRIVAL_SCHEDULED_DAY DAY)) WHEN '1' THEN 'WEEK_CD.SUN'
					                                                                                            WHEN '2' THEN 'WEEK_CD.MON'
					                                                                                            WHEN '3' THEN 'WEEK_CD.TUE'
					                                                                                            WHEN '4' THEN 'WEEK_CD.WED'
					                                                                                            WHEN '5' THEN 'WEEK_CD.THU'
					                                                                                            WHEN '6' THEN 'WEEK_CD.FRI'
					                                                                                            WHEN '7' THEN 'WEEK_CD.SAT'
					                                                                                            ELSE 'WEEK_CD.MON' END)
		LIMIT 1
    </select>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 개별 임직원 할인 정보 조회
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.03.22		홍진영          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<select id="getGoodsEmployeeDiscountRatio" resultType="int">
		/*	goodsGoods.getGoodsEmployeeDiscountRatio	*/
		SELECT IFNULL( (SELECT IGD.DISCOUNT_RATIO
        FROM IL_GOODS_DISCOUNT IGD WHERE IGD.DISCOUNT_TP = 'GOODS_DISCOUNT_TP.EMPLOYEE'
        AND NOW() BETWEEN IGD.DISCOUNT_START_DT AND IGD.DISCOUNT_END_DT
        AND IGD.USE_YN = 'Y' AND IGD.IL_GOODS_ID = #{ilGoodsId}) , 0)
	</select>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 개별 임직원 할인 정보 조회
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.03.22		홍진영          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<resultMap type="kr.co.pulmuone.v1.goods.goods.dto.GoodsPackageEmployeeDiscountDto" id="getPackageGoodsEmployeeDiscountRatioMap">
		<result column="TARGET_GOODS_ID"  property="ilGoodsId" />
		<result column="DISCOUNT_RATIO"  property="discountRatio" />
	</resultMap>
	<select id="getPackageGoodsEmployeeDiscountRatio" resultMap="getPackageGoodsEmployeeDiscountRatioMap">
		/*	goodsGoods.getPackageGoodsEmployeeDiscountRatio	*/
		SELECT
			IGPGM.TARGET_GOODS_ID
			,IFNULL(IGPIFDP.DISCOUNT_RATIO, 0) AS DISCOUNT_RATIO
		FROM IL_GOODS_PACKAGE_GOODS_MAPPING IGPGM
		JOIN IL_GOODS_PRICE TGP ON TGP.IL_GOODS_ID = IGPGM.TARGET_GOODS_ID AND TGP.USE_YN = 'Y' AND NOW() BETWEEN TGP.PRICE_START_DT AND TGP.PRICE_END_DT
		LEFT JOIN IL_GOODS_DISCOUNT SIGD ON SIGD.IL_GOODS_ID = IGPGM.IL_GOODS_ID AND SIGD.DISCOUNT_TP = 'GOODS_DISCOUNT_TP.EMPLOYEE' AND NOW() BETWEEN SIGD.DISCOUNT_START_DT AND SIGD.DISCOUNT_END_DT AND SIGD.USE_YN = 'Y'
		LEFT JOIN IL_GOODS_PACKAGE_ITEM_FIXED_DISCOUNT_PRICE IGPIFDP ON IGPIFDP.IL_GOODS_DISCOUNT_ID = SIGD.IL_GOODS_DISCOUNT_ID AND IGPIFDP.IL_GOODS_PACKAGE_GOODS_MAPPING_ID = IGPGM.IL_GOODS_PACKAGE_GOODS_MAPPING_ID
		WHERE IGPGM.IL_GOODS_ID = #{ilGoodsId} AND IGPGM.GOODS_TP NOT IN('GOODS_TYPE.GIFT', 'GOODS_TYPE.GIFT_FOOD_MARKETING')
	</select>


	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 매장 품목 정보 조회
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.04.15		홍진영          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<resultMap type="kr.co.pulmuone.v1.goods.goods.dto.vo.ItemStoreInfoVo" id="getItemStoreInfoListMap">
		<result column="IL_ITEM_STORE_INFO_ID"  property="ilItemStoreInfoId" />
		<result column="IL_ITEM_CD"  property="ilItemCd" />
		<result column="UR_STORE_ID"  property="urStoreId" />
		<result column="STORE_SALE_PRICE"  property="storeSalePrice" />
		<result column="STORE_IF_STOCK"  property="storeIfStock" />
		<result column="STORE_STOCK"  property="storeStock" />
	</resultMap>
	<select id="getItemStoreInfoList" resultMap="getItemStoreInfoListMap">
		/*	goodsGoods.getItemStoreInfoList	*/
		SELECT
			ISI.IL_ITEM_STORE_INFO_ID
			, ISI.IL_ITEM_CD
			, ISI.UR_STORE_ID
			, ISI.STORE_SALE_PRICE
			, ISI.STORE_IF_STOCK
			, ISI.STORE_STOCK
        FROM IL_ITEM_STORE_INFO ISI
        WHERE ISI.UR_STORE_ID = #{urStoreId}
        AND ISI.IL_ITEM_CD IN (
			<foreach collection="ilItemCds" item="ilItemCd" separator=",">
				#{ilItemCd}
			</foreach>
		)
	</select>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 녹즙 클렌즈 옵션 사용여부
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.04.22		홍진영          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<select id="isCleanseOption" resultType="boolean">
		/*	goodsGoods.isCleanseOption	*/
		SELECT
			IF(COUNT(*) > 0, TRUE, FALSE) AS result
        FROM IL_GOODS
        WHERE IL_GOODS_ID = #{ilGoodsId}
        AND GREEN_JUICE_CLEANSE_OPT_YN = 'Y'
	</select>



	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 외부몰 묶음상품 조회
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.04.23		이명수          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<select id="getOutmallGoodsPackList" resultType="kr.co.pulmuone.v1.order.order.dto.vo.OrderDetlVo">
		/*	goodsGoods.getOutmallGoodsPackList	*/
		SELECT
			T1.*,
			CASE WHEN T1.QTY_PER_PACKAGE = '' THEN CONCAT(T1.GOODS_NAME, ' (', T1.SIZE_PER_PACKAGE, T1.SIZE_UNIT, ')')
				 ELSE CONCAT(T1.GOODS_NAME, ' (', T1.SIZE_PER_PACKAGE, T1.SIZE_UNIT, 'X', T1.QTY_PER_PACKAGE, T1.PACKAGE_UNIT, ')')
			END AS GOODS_NM /* 상품명 */
		FROM
		(
				SELECT
					   TIG.IL_GOODS_ID
					,IGPGM.GOODS_QTY AS ORDER_CNT
					,IFNULL(IGPIFD.SALE_PRICE, 0) AS PAID_PRICE
					,IFNULL(IGPIFD.UNIT_SALE_PRICE, 0) AS SALE_PRICE
					,TIG.GOODS_TP AS GOODS_TP_CD
					,TIG.UR_WAREHOUSE_ID
					,ST.IL_SHIPPING_TMPL_ID AS IL_GOODS_SHIPPING_TEMPLATE_ID
					,II.UR_SUPPLIER_ID
					,UW.WAREHOUSE_GRP_CD AS UR_WAREHOUSE_GRP_CD
					,II.STORAGE_METHOD_TP AS STORAGE_TYPE_CD
					,TIG.GOODS_DAILY_TP
					,'' AS ORDER_STATUS_DELI_TP
					,'' AS GOODS_DELIVERY_TYPE
					,TIG.SALE_TP AS SALE_TP_CD
					,II.ITEM_BARCODE
					,II.IL_ITEM_CD
					,TIG.GOODS_NM AS GOODS_NAME
					,II.TAX_YN
					,IGP.STANDARD_PRICE
					,IGP.RECOMMENDED_PRICE
					,II.IL_CTGRY_STD_ID
					,IFNULL(IGC.IL_CTGRY_ID, 0) AS IL_CTGRY_DISPLAY_ID
					,IFNULL(IGCM.IL_CTGRY_ID, 0) AS IL_CTGRY_MALL_ID
					, CASE
						WHEN II.SIZE_PER_PACKAGE IS NULL THEN ''
						ELSE TRIM(II.SIZE_PER_PACKAGE)+0
					END AS SIZE_PER_PACKAGE /* 포장단위별 용량 */
					, CASE
						WHEN II.SIZE_UNIT_ETC IS NOT NULL AND TRIM(II.SIZE_UNIT_ETC) != '' THEN II.SIZE_UNIT_ETC
						ELSE IFNULL(FN_COMN_CODE_DIC(II.SIZE_UNIT), '')
					END AS SIZE_UNIT /* 용량(중량)단위 */
					, IFNULL(II.QTY_PER_PACKAGE, '') AS QTY_PER_PACKAGE /* 구성정보 용량 */
					, CASE
						WHEN II.PACKAGE_UNIT_ETC IS NOT NULL AND TRIM(II.PACKAGE_UNIT_ETC) != '' THEN II.PACKAGE_UNIT_ETC
						ELSE IFNULL(FN_COMN_CODE_DIC(II.PACKAGE_UNIT), '')
					END AS PACKAGE_UNIT /* 구성정보 단위 */
					, IG.PACKAGE_UNIT_DISP_YN
					, IG.PACKAGE_UNIT_DESC
				FROM
					IL_GOODS IG
				INNER JOIN IL_GOODS_PRICE IGP_1 ON IGP_1.IL_GOODS_ID = IG.IL_GOODS_ID AND SYSDATE() BETWEEN IGP_1.PRICE_START_DT AND IGP_1.PRICE_END_DT AND IGP_1.USE_YN = 'Y'
				INNER JOIN IL_GOODS_PACKAGE_GOODS_MAPPING IGPGM ON IG.IL_GOODS_ID = IGPGM.IL_GOODS_ID
				INNER JOIN IL_GOODS TIG ON TIG.IL_GOODS_ID = IGPGM.TARGET_GOODS_ID
				INNER JOIN IL_GOODS_PRICE IGP ON IGP.IL_GOODS_ID = TIG.IL_GOODS_ID AND SYSDATE() BETWEEN IGP.PRICE_START_DT AND IGP.PRICE_END_DT AND IGP.USE_YN = 'Y'
				INNER JOIN IL_ITEM II ON II.IL_ITEM_CD = TIG.IL_ITEM_CD
				LEFT OUTER JOIN IL_GOODS_PACKAGE_ITEM_FIXED_DISCOUNT_PRICE IGPIFD ON IGPIFD.IL_GOODS_DISCOUNT_ID = IGP_1.IL_GOODS_DISCOUNT_ID AND IGPIFD.IL_GOODS_PACKAGE_GOODS_MAPPING_ID = IGPGM.IL_GOODS_PACKAGE_GOODS_MAPPING_ID
				INNER JOIN IL_GOODS_SHIPPING_TEMPLATE GST ON (IG.IL_GOODS_ID = GST.IL_GOODS_ID AND IG.UR_WAREHOUSE_ID = GST.UR_WAREHOUSE_ID)
				INNER JOIN IL_SHIPPING_TEMPLATE ST ON (ST.ORIG_IL_SHIPPING_TMPL_ID = GST.ORIG_IL_SHIPPING_TMPL_ID AND ST.DEL_YN = 'N')
				INNER JOIN UR_WAREHOUSE UW ON IG.UR_WAREHOUSE_ID = UW.UR_WAREHOUSE_ID
				LEFT OUTER JOIN IL_GOODS_CTGRY IGC ON (IGC.IL_GOODS_ID = TIG.IL_GOODS_ID AND IGC.BASIC_YN = 'Y' AND IGC.MALL_DIV ='MALL_DIV.PULMUONE')
				LEFT OUTER JOIN IL_GOODS_CTGRY IGCM ON (IGCM.IL_GOODS_ID = TIG.IL_GOODS_ID AND IGCM.BASIC_YN = 'Y' AND IGCM.MALL_DIV !='MALL_DIV.PULMUONE')
				WHERE
					IG.IL_GOODS_ID = #{ilGoodsId}
		) T1
	</select>

	<resultMap type="kr.co.pulmuone.v1.goods.goods.dto.GoodsPageInfoMealDto" id="getGoodsPageInfoMealMap">
		<result column="MALL_DIV"  property="mallDiv"  />
	</resultMap>
	<select id="getGoodsPageInfoMeal" resultMap="getGoodsPageInfoMealMap">
		/*	goodsGoods.getGoodsPageInfoMeal	*/
		SELECT
		igdmp.MALL_DIV
		FROM IL_GOODS_DAILY_MEAL_PATTERN_GOODS igdmpg
		JOIN IL_GOODS_DAILY_MEAL_PATTERN igdmp ON (igdmp.IL_GOODS_DAILY_MEAL_PATTERN_CD = igdmpg.IL_GOODS_DAILY_MEAL_PATTERN_CD)
		WHERE igdmpg.IL_GOODS_ID = #{ilGoodsId}
		AND NOW() BETWEEN PATTERN_START_DT AND PATTERN_END_DT
		LIMIT 1
	</select>

	<select id="getMealPossibleDeliveryDateList" resultType="java.time.LocalDate">
		/*	goodsGoods.getMealPossibleDeliveryDateList	*/
		SELECT
		igdms.DELIVERY_DT
		FROM IL_GOODS_DAILY_MEAL_PATTERN_GOODS igdmpg
		JOIN IL_GOODS_DAILY_MEAL_PATTERN igdmp ON (igdmp.IL_GOODS_DAILY_MEAL_PATTERN_CD = igdmpg.IL_GOODS_DAILY_MEAL_PATTERN_CD)
		JOIN IL_GOODS_DAILY_MEAL_SCH igdms ON (igdms.IL_GOODS_DAILY_MEAL_PATTERN_CD = igdmpg.IL_GOODS_DAILY_MEAL_PATTERN_CD)
		WHERE igdmpg.IL_GOODS_ID = #{ilGoodsId}
		AND igdms.HOLIDAY_YN != 'Y'
		AND igdms.DELIVERY_DT IN (
			<foreach collection="goodsArrivalScheduledDateList" item="goodsArrivalScheduledDate" separator=",">
				#{goodsArrivalScheduledDate}
			</foreach>
		)
	</select>

	<resultMap type="kr.co.pulmuone.v1.goods.goods.dto.GoodsDailyMealScheduleDataDto" id="getGoodsDailyMealScheduleMap">
		<result column="DELIVERY_DT"  property="deliveryDate"  />
		<result column="HOLIDAY_YN"  property="holidayYn"  />
		<result column="HOLIDAY_NM"  property="holidayName"  />
		<result column="IL_GOODS_DAILY_MEAL_CONTS_CD"  property="ilGoodsDailyMealContsCd"  />
		<result column="THUMBNAIL_IMG"  property="thumbnailImg"  />
		<result column="IL_GOODS_DAILY_MEAL_NM"  property="mealName"  />
		<result column="ALLERGY_YN"  property="allergyYn"  />
		<result column="SET_NO"  property="setNo"  />
		<result column="CALORIE"  property="calorie"  />
	</resultMap>
	<select id="getGoodsDailyMealSchedule" resultMap="getGoodsDailyMealScheduleMap">
		/*	goodsGoods.getGoodsDailyMealSchedule	*/
		WITH ALLERGY AS (
		      SELECT
				igdmpd.IL_GOODS_DAILY_MEAL_PATTERN_DETL_ID
			FROM IL_GOODS_DAILY_MEAL_PATTERN_GOODS igdmpg
			JOIN IL_GOODS_DAILY_MEAL_PATTERN igdmp ON (igdmp.IL_GOODS_DAILY_MEAL_PATTERN_CD = igdmpg.IL_GOODS_DAILY_MEAL_PATTERN_CD)
			JOIN IL_GOODS_DAILY_MEAL_SCH igdms ON (igdms.IL_GOODS_DAILY_MEAL_PATTERN_CD = igdmpg.IL_GOODS_DAILY_MEAL_PATTERN_CD)
			JOIN IL_GOODS_DAILY_MEAL_PATTERN_DETL igdmpd ON (igdmpd.IL_GOODS_DAILY_MEAL_PATTERN_DETL_ID = igdms.IL_GOODS_DAILY_MEAL_PATTERN_DETL_ID)
			JOIN IL_GOODS_DAILY_MEAL_CONTS igdmc ON (igdmc.IL_GOODS_DAILY_MEAL_CONTS_CD = igdms.IL_GOODS_DAILY_MEAL_CONTS_CD)
			WHERE igdmpg.IL_GOODS_ID = #{ilGoodsId}
			AND igdms.DELIVERY_DT BETWEEN #{startDate} AND #{endDate}
			AND igdmc.ALLERGY_YN = 'Y'
			GROUP BY igdmpd.IL_GOODS_DAILY_MEAL_PATTERN_DETL_ID
	    )
		SELECT
			igdms.DELIVERY_DT
			,igdms.HOLIDAY_YN
			,igdms.HOLIDAY_NM
			,igdmc.IL_GOODS_DAILY_MEAL_CONTS_CD
			,igdmc.THUMBNAIL_IMG
			,igdmc.IL_GOODS_DAILY_MEAL_NM
			,IF(a.IL_GOODS_DAILY_MEAL_PATTERN_DETL_ID IS NULL,'N','Y') AS ALLERGY_YN /* 알러지 대체식단 여부 */
			,igdmpd.SET_NO
			,igdmc.CALORIE
		FROM IL_GOODS_DAILY_MEAL_PATTERN_GOODS igdmpg
		JOIN IL_GOODS_DAILY_MEAL_PATTERN igdmp ON (igdmp.IL_GOODS_DAILY_MEAL_PATTERN_CD = igdmpg.IL_GOODS_DAILY_MEAL_PATTERN_CD)
		JOIN IL_GOODS_DAILY_MEAL_SCH igdms ON (igdms.IL_GOODS_DAILY_MEAL_PATTERN_CD = igdmpg.IL_GOODS_DAILY_MEAL_PATTERN_CD)
		JOIN IL_GOODS_DAILY_MEAL_PATTERN_DETL igdmpd ON (igdmpd.IL_GOODS_DAILY_MEAL_PATTERN_DETL_ID = igdms.IL_GOODS_DAILY_MEAL_PATTERN_DETL_ID)
		JOIN IL_GOODS_DAILY_MEAL_CONTS igdmc ON (igdmc.IL_GOODS_DAILY_MEAL_CONTS_CD = igdms.IL_GOODS_DAILY_MEAL_CONTS_CD)
		LEFT JOIN ALLERGY a ON (igdmpd.IL_GOODS_DAILY_MEAL_PATTERN_DETL_ID = a.IL_GOODS_DAILY_MEAL_PATTERN_DETL_ID)
		WHERE igdmpg.IL_GOODS_ID = #{ilGoodsId}
		AND igdms.DELIVERY_DT BETWEEN #{startDate} AND #{endDate}
		<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEquals(bulkYn,'Y')">
			AND igdmpd.SET_NO = '1'
		</if>
	</select>

	<select id="getGoodsDailyMealContents" resultType="kr.co.pulmuone.v1.goods.goods.dto.GoodsDailyMealContentsDto">
		/*	goodsGoods.getGoodsDailyMealContents	*/
		SELECT
			IL_GOODS_DAILY_MEAL_CONTS_CD
			,IL_GOODS_DAILY_MEAL_NM AS MEAL_NAME
			,MALL_DIV
			,ALLERGY_YN
			,THUMBNAIL_IMG
			,TOTAL_CAPACITY
			,CALORIE
			,RECOMMENDED_AGE
			,EATSSLIM_INDEX
			,DESCRIPTION
			,MATERIAL
			,DETL_IMG
			,ALLERGY_EGG
			,ALLERGY_MILK
			,ALLERGY_SHRIMP
			,ALLERGY_MACKEREL
			,ALLERGY_SQUID
			,ALLERGY_CRAB
			,ALLERGY_SHELLFISH
			,ALLERGY_PORK
			,ALLERGY_BEEF
			,ALLERGY_CHICKEN
			,ALLERGY_BUCKWHEAT
			,ALLERGY_WHEAT
			,ALLERGY_SOYBEAN
			,ALLERGY_PEANUT
			,ALLERGY_WALNUT
			,ALLERGY_PINENUT
			,ALLERGY_SULFITE
			,ALLERGY_PEACH
			,ALLERGY_TOMATO
			,NUTRITION_TOTAL_CARBOHYDRATE
			,NUTRITION_TOTAL_CARBOHYDRATE_RATE
			,NUTRITION_FIBER
			,NUTRITION_FIBER_RATE
			,NUTRITION_SUGARS
			,NUTRITION_SUGARS_RATE
			,NUTRITION_TOTAL_FAT
			,NUTRITION_TOTAL_FAT_RATE
			,NUTRITION_SATURATED_FAT
			,NUTRITION_SATURATED_FAT_RATE
			,NUTRITION_TRANS_FAT
			,NUTRITION_TRANS_FAT_RATE
			,NUTRITION_PROTEIN
			,NUTRITION_PROTEIN_RATE
			,NUTRITION_CHOLESTEROL
			,NUTRITION_CHOLESTEROL_RATE
			,NUTRITION_SODIUM
			,NUTRITION_SODIUM_RATE
			,SPEC_GOODS_NAME
			,SPEC_GOODS_TYPE
			,SPEC_PRODUCER_LOCATION
			,SPEC_MANUFACTURING_DATE
			,SPEC_EXPIRATION_DATE
			,SPEC_STORAGE_METHOD
			,SPEC_ORIGINAL_MATERIAL
		FROM IL_GOODS_DAILY_MEAL_CONTS
		WHERE IL_GOODS_DAILY_MEAL_CONTS_CD = #{ilGoodsDailyMealContsCd}
	</select>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: weekcode기준 도착예정일 list 조회
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.09.29		천혜현          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<resultMap type="kr.co.pulmuone.v1.goods.goods.dto.ArrivalScheduledDateDto" id="getArrivalScheduledDateDtoByShippingPatternAndWeekCodeResultMap">
		<result column="ORDER_DATE"  				property="orderDate" />
		<result column="ORDER_WEEK_CD"  			property="orderWeekCode"  />
		<result column="FORWARDING_SCHEDULED_DATE"  property="forwardingScheduledDate" />
		<result column="ARRIVAL_SCHEDULED_DATE"  	property="arrivalScheduledDate"  />
		<result column="STOCK"  					property="stock" />
	</resultMap>
	<select id="getArrivalScheduledDateDtoByShippingPatternAndWeekCode" resultMap="getArrivalScheduledDateDtoByShippingPatternAndWeekCodeResultMap">
		/* goodsGoods.getArrivalScheduledDateDtoByShippingPatternAndWeekCode */
		SELECT
			TBL.ORDER_DATE
			,TBL.ORDER_WEEK_CD
			,TBL.FORWARDING_SCHEDULED_DATE
			,TBL.ARRIVAL_SCHEDULED_DATE
			,9999 AS STOCK
		FROM(
			SELECT
				A.*
				,WEEKDAY(A.ARRIVAL_SCHEDULED_DATE) AS WEEK_DAY
			FROM
			(
			<foreach collection="scheduledDateList" item="scheduledDate" separator=" UNION ALL ">
				(
				SELECT
					#{scheduledDate.orderDate, typeHandler=kr.co.pulmuone.v1.comm.base.mybatis.hanlder.LocalDateTypeHandler, jdbcType=DATE} AS ORDER_DATE
					,#{scheduledDate.orderWeekCode} AS ORDER_WEEK_CD
					,DATE_ADD(#{scheduledDate.orderDate, typeHandler=kr.co.pulmuone.v1.comm.base.mybatis.hanlder.LocalDateTypeHandler, jdbcType=DATE}, INTERVAL FORWARDING_SCHEDULED_DAY DAY) AS FORWARDING_SCHEDULED_DATE
					,DATE_ADD(#{scheduledDate.orderDate, typeHandler=kr.co.pulmuone.v1.comm.base.mybatis.hanlder.LocalDateTypeHandler, jdbcType=DATE}, INTERVAL ARRIVAL_SCHEDULED_DAY DAY) AS ARRIVAL_SCHEDULED_DATE
					,FORWARDING_SCHEDULED_DAY
					,NOW() AS TODAY
				FROM
					PS_SHIPPING_PATTERN_DAY PSPD
					JOIN UR_WAREHOUSE UW ON UW.PS_SHIPPING_PATTERN_ID = PSPD.PS_SHIPPING_PATTERN_ID
				WHERE
					UW.UR_WAREHOUSE_ID = #{urWarehouseId}
					AND WEEK_CD = #{scheduledDate.orderWeekCode}
				)
			</foreach>
			) A
		)TBL
		WHERE
			TBL.WEEK_DAY = ( CASE WHEN #{weekCode} = 'WEEK_CD.MON' THEN 0
									WHEN #{weekCode} = 'WEEK_CD.TUE' THEN 1
									WHEN #{weekCode} = 'WEEK_CD.WED' THEN 2
									WHEN #{weekCode} = 'WEEK_CD.THU' THEN 3
									WHEN #{weekCode} = 'WEEK_CD.FRI' THEN 4
									WHEN #{weekCode} = 'WEEK_CD.SAT' THEN 5
									WHEN #{weekCode} = 'WEEK_CD.SUN' THEN 6
									END
			)
	</select>


	<resultMap type="kr.co.pulmuone.v1.goods.goods.dto.ArrivalScheduledDateDto" id="getShippingPatternDayMap">
		<result column="ORDER_DATE"  property="orderDate" />
		<result column="ORDER_WEEK_CD"  property="orderWeekCode"  />
		<result column="FORWARDING_SCHEDULED_DATE"  property="forwardingScheduledDate" />
		<result column="ARRIVAL_SCHEDULED_DATE"  property="arrivalScheduledDate"  />
	</resultMap>
	
	<select id="getShippingPatternDay" resultMap="getShippingPatternDayMap">
		/*	goodsGoods.getShippingPatternDay	*/
		SELECT '${orderDate}' AS ORDER_DATE
			 , '${orderWeekCode}' AS ORDER_WEEK_CD
			 , DATE_ADD('${orderDate}', INTERVAL FORWARDING_SCHEDULED_DAY DAY) AS FORWARDING_SCHEDULED_DATE
			 , DATE_ADD('${orderDate}', INTERVAL ARRIVAL_SCHEDULED_DAY DAY) AS ARRIVAL_SCHEDULED_DATE			 
		  FROM PS_SHIPPING_PATTERN_DAY
		 WHERE PS_SHIPPING_PATTERN_ID = #{psShippingPatternId}
		   AND WEEK_CD = #{orderWeekCode}
	</select>
</mapper>