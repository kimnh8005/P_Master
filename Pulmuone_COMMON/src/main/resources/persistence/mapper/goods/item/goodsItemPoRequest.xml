<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.pulmuone.v1.comm.mapper.goods.item.GoodsItemPoRequestMapper">

	<resultMap id="itemPoRequestMap" type="kr.co.pulmuone.v1.goods.item.dto.vo.ItemPoRequestVo">
		<result column="ROWNUM" property="rownum" />
		<result column="IL_PO_EVENT_ID" property="ilPoEventId" />
		<result column="IL_ITEM_CD" property="ilItemCd" />
		<result column="ITEM_NM" property="itemNm" />
		<result column="IL_GOODS_ID" property="ilGoodsId" />
		<result column="ITEM_BARCODE" property="itemBarcode" />
		<result column="GOODS_TP" property="goodsTp" />
		<result column="GOODS_TP_NAME" property="goodsTpName" />
		<result column="GOODS_NM" property="goodsNm" />
		<result column="UR_WAREHOUSE_ID" property="urWarehouseId" />
		<result column="WAREHOUSE_NM" property="warehouseNm" />
		<result column="IL_PO_TP_ID" property="ilPoTpId" />
		<result column="PO_TP_NM" property="poTpNm" />
		<result column="PO_EVENT_QTY" property="poEventQty" />
		<result column="PO_SCHEDULE_DT" property="poScheduleDt" />
		<result column="RECEVING_REQ_DT" property="recevingReqDt" />
		<result column="EVENT_START_DT" property="eventStartDt" />
		<result column="EVENT_END_DT" property="eventEndDt" />
		<result column="OM_SELLERS_ID" property="omSellersId" />
		<result column="SELLERS_GROUP_CD" property="sellersGroupCd" />
		<result column="SELLERS_NM" property="sellersNm" />
		<result column="PCS_PER_BOX" property="pcsPerBox" />
		<result column="OMS" property="oms" />
		<result column="MEMO_SPLIT" property="memoSplit" />
		<result column="MEMO" property="memo" />
		<result column="CREATE_DT" property="createDt" />
		<result column="MODIFY_DT" property="modifyDt" />
		<result column="ORDER_CNT" property="orderCnt" />
		<result column="ORDER_AVG_CNT" property="orderAvgCnt" />

		<result column="IL_PO_EVENT_EXCEL_UPLOAD_LOG_ID" property="ilPoEventExcelUploadLogId" />
		<result column="FILE_NM" property="fileNm" />
		<result column="SUCCESS_CNT" property="successCnt" />
		<result column="FAIL_CNT" property="failCnt" />
		<result column="CREATE_ID" property="createId" />
		<result column="LOGIN_ID" property="loginId" />
		<result column="MODIFY_ID" property="modifyId" />

		<result column="IL_PO_EVENT_EXCEL_UPLOAD_DETL_LOG_ID" property="ilPoEventExcelUploadDetlLogId" />
		<result column="SELLERS_CD" property="sellersCd" />
		<result column="SUCCESS_YN" property="successYn" />
		<result column="MSG" property="msg" />

		<result column="USER_NM" property="userNm" />

		<result column="MODIFY_LOGIN_ID" property="modifyLoginId" />
		<result column="MODIFY_USER_NM" property="modifyUserNm" />

		<result column="CREATE_INFO" property="createInfo" />

		<result column="DIFF_CNT_EX" property="diffCntEx" />
	</resultMap>

	<resultMap id="getGoodsListResultMap" type="kr.co.pulmuone.v1.base.dto.vo.GoodsSearchVo">
        <result column="GOODS_ID" property="goodsId" />
        <result column="GOODS_NAME" property="goodsName" />
        <result column="ITEM_CODE" property="itemCode" />
        <result column="ITEM_NAME" property="itemName" />
        <result column="ITEM_BARCODE" property="itemBarcode" />
        <result column="WAREHOUSE_ID" property="warehouseId" />
        <result column="WAREHOUSE_NAME" property="warehouseName" />
        <result column="SUPPLIER_ID" property="supplierId" />
        <result column="SUPPLIER_COMPANY_ID" property="supplierCompanyId" />
        <result column="SUPPLIER_NAME" property="supplierName" />
        <result column="BRAND_ID" property="brandId" />
        <result column="BRAND_NAME" property="brandName" />
        <result column="DP_BRAND_NAME" property="dpBrandName" />
        <result column="CATEGORY_STANDARD_ID" property="categoryStandardId" />
        <result column="CATEGORY_STANDARD_DEPTH_NAME" property="categoryStandardDepthName" />
        <result column="CATEGORY_ID" property="categoryId" />
        <result column="CATEGORY_DEPTH_NAME" property="categoryDepthName" />
        <result column="GOODS_TYPE_CODE" property="goodsTypeCode" />
        <result column="GOODS_TYPE_NAME" property="goodsTypeName" />
        <result column="SALE_TYPE_CODE" property="saleTypeCode" />
        <result column="ITEM_TYPE_CODE" property="itemTypeCode" />
        <result column="PACKAGE_UNIT_DISPLAY_YN" property="packageUnitDisplayYn" />
        <result column="PURCHASE_MEMBER_YN" property="purchaseMemberYn" />
        <result column="PURCHASE_EMPLOYEE_YN" property="purchaseEmployeeYn" />
        <result column="PURCHASE_NONMEMBER_YN" property="purchaseNonmemberYn" />
        <result column="DISPLAY_WEB_PC_YN" property="displayWebPcYn" />
        <result column="DISPLAY_WEB_MOBILE_YN" property="displayWebMobileYn" />
        <result column="DISPLAY_APP_YN" property="displayAppYn" />
        <result column="SALE_START_DATE" property="saleStartDate" />
        <result column="SALE_END_DATE" property="saleEndDate" />
        <result column="GOODS_DISPLAY_YN" property="goodsDisplayYn" />
        <result column="SALE_STATUS_CODE" property="saleStatusCode" />
        <result column="SALE_STATUS_CODE_NAME" property="saleStatusCodeName" />
        <result column="ITEM_GROUP" property="itemGroup" />
        <result column="STORAGE_METHOD_TYPE_CODE" property="storageMethodTypeCode" />
        <result column="STORAGE_METHOD_TYPE_NAME" property="storageMethodTypeName" />
        <result column="PLACE_ORDER_ID" property="placeOrderId" />
        <result column="ITEM_IMAGE_PATH" property="itemImagePath" />
        <result column="STANDARD_PRICE" property="standardPrice" />
        <result column="RECOMMENDED_PRICE" property="recommendedPrice" />
        <result column="IL_SHIPPING_TMPL_ID" property="ilShippingTmplId" />
        <result column="UNDELIVERABLE_AREA_TP" property="undeliverableAreaTp" />
        <result column="IL_GOODS_PRICE_ID" property="ilGoodsPriceId" />
        <result column="SALE_PRICE" property="salePrice" />
        <result column="NAME" property="name" />
        <result column="AREA_SHIPPING_DELIVERY_YN" property="areaShippingDeliveryYn" />
        <result column="DP_BRAND_ID" property="dpBrandId" />
        <result column="PCS_PER_BOX" property="pcsPerBox" />
        <result column="OMS" property="oms" />
        <result column="PO_TP_NM" property="poTpNm" />
        <result column="IL_PO_TP_ID" property="ilPoTpId" />

        <result column="PO_SUN_YN" property="poSunYn" />
        <result column="PO_MON_YN" property="poMonYn" />
        <result column="PO_TUE_YN" property="poTueYn" />
        <result column="PO_WED_YN" property="poWedYn" />
        <result column="PO_THU_YN" property="poThuYn" />
        <result column="PO_FRI_YN" property="poFriYn" />
        <result column="PO_SAT_YN" property="poSatYn" />
        <result column="SCHEDULED_SUN" property="scheduledSun" />
        <result column="SCHEDULED_MON" property="scheduledMon" />
        <result column="SCHEDULED_TUE" property="scheduledTue" />
        <result column="SCHEDULED_WED" property="scheduledWed" />
        <result column="SCHEDULED_THU" property="scheduledThu" />
        <result column="SCHEDULED_FRI" property="scheduledFri" />
        <result column="SCHEDULED_SAT" property="scheduledSat" />
    </resultMap>

	<resultMap id="getSellersResultMap" type="kr.co.pulmuone.v1.outmall.sellers.dto.vo.SellersVo">
        <result column="OM_SELLERS_ID" 		property="omSellersId" />
        <result column="SELLERS_GROUP_CD" 	property="sellersGroupCd" />
        <result column="SELLERS_CD" 		property="sellersCd" />
        <result column="SELLERS_NM" 		property="sellersNm" />
        <result column="SELLERS_URL" 		property="sellersUrl" />
        <result column="SELLERS_ADMIN_URL" 	property="sellersAdminUrl" />
        <result column="INTERFACE_YN" 		property="interfaceYn" />
        <result column="USE_YN" 			property="useYn" />
        <result column="OUTMALL_CD" 		property="outmallCd" />
        <result column="OUTMALL_NM" 		property="outmallNm" />
        <result column="CREATE_ID" 			property="createId" />
        <result column="CREATE_DT" 			property="createDt" />
        <result column="MODIFY_ID" 			property="modifyId" />
        <result column="MODIFY_DT" 			property="modifyDt" />
    </resultMap>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 행사발주관리 목록 조회
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.01.22		정형진
	 * @ 2021.11.29		남기승			주문수량 묶음상품 추가
	────────────────────────────────────────────────────────────────────────-->
	<select id="getPoRequestList" resultMap="itemPoRequestMap">
		/*	goodsItemPoRequest.getPoRequestList  */
		SELECT IPE.IL_PO_EVENT_ID
		     , ITEM.IL_ITEM_CD
		     , ITEM.ITEM_NM
		     , GOODS.IL_GOODS_ID
		     , ITEM.ITEM_BARCODE
		     , GOODS.GOODS_TP
		     , IFNULL(DIC_GOODS_TYPE.DIC_MST_NM, '') AS GOODS_TP_NAME
		     , GOODS.GOODS_NM
		     , GOODS.UR_WAREHOUSE_ID
		     , UW.WAREHOUSE_NM
		     , IIW.IL_PO_TP_ID
		     , ITEM.UR_SUPPLIER_ID
		     , IFNULL(IPT.PO_TP_NM, '') AS PO_TP_NM
		     , IPE.PO_EVENT_QTY
		     , IFNULL(DATE_FORMAT(IPE.PO_SCHEDULE_DT, '%Y-%m-%d'), '') AS PO_SCHEDULE_DT
		     , IFNULL(DATE_FORMAT(IPE.RECEVING_REQ_DT, '%Y-%m-%d'), '') AS RECEVING_REQ_DT
		     , IFNULL(DATE_FORMAT(IPE.EVENT_START_DT, '%Y-%m-%d'), '') AS EVENT_START_DT
		     , IFNULL(DATE_FORMAT(IPE.EVENT_END_DT, '%Y-%m-%d'), '') AS EVENT_END_DT
		     , IPE.OM_SELLERS_ID
		     , OS.SELLERS_NM
		     , ITEM.PCS_PER_BOX
		     , ITEM.OMS
		     , CONCAT(LEFT(IPE.MEMO, 5), "....") AS MEMO_SPLIT
		     , IPE.MEMO
		     , DATE_FORMAT(IPE.CREATE_DT, '%Y-%m-%d') AS CREATE_DT
		     , IFNULL(DATE_FORMAT(IPE.MODIFY_DT, '%Y-%m-%d'), '') AS MODIFY_DT
		     , IPE.CREATE_ID
		     , UU.LOGIN_ID
		     , FN_DECRYPT(UU.USER_NM) AS USER_NM
		     , UD.LOGIN_ID AS MODIFY_LOGIN_ID
		     , FN_DECRYPT(UD.USER_NM) AS MODIFY_USER_NM
		     , CONCAT(UU.LOGIN_ID, '(', FN_DECRYPT(UU.USER_NM), ')') AS CREATE_INFO
		     , CASE WHEN GOODS.GOODS_TP = 'GOODS_TYPE.PACKAGE' THEN
					 IPE.PO_EVENT_QTY - IFNULL((
						 SELECT ROUND(SUM(ORDER_CNT) - SUM(CANCEL_CNT))
						 FROM (
							 SELECT SUM(OOD.ORDER_CNT) / SUM(IGPGM.GOODS_QTY) AS ORDER_CNT
								  , SUM(OOD.CANCEL_CNT) / SUM(IGPGM.GOODS_QTY) AS CANCEL_CNT
							 FROM OD_ORDER OD
								 INNER JOIN OD_ORDER_DETL OOD ON OOD.OD_ORDER_ID = OD.OD_ORDER_ID
								 INNER JOIN OD_ORDER_DETL_PACK OODP ON OODP.OD_ORDER_DETL_ID = OOD.OD_ORDER_DETL_PARENT_ID
								 INNER JOIN IL_GOODS_PACKAGE_GOODS_MAPPING IGPGM ON IGPGM.IL_GOODS_ID = OODP.IL_GOODS_ID
							 WHERE OD.ORDER_YN = 'Y'
							   AND IGPGM.IL_GOODS_ID = GOODS.IL_GOODS_ID
							   AND DATE_FORMAT(OD.CREATE_DT, '%Y-%m-%d') BETWEEN IPE.EVENT_START_DT AND DATE_ADD(IPE.EVENT_END_DT, INTERVAL 2 DAY)
							 GROUP BY OOD.OD_ORDER_ID
							 ) A
						 ), 0)
		         ELSE
		             IPE.PO_EVENT_QTY - IFNULL((
		                 SELECT SUM(OOD.ORDER_CNT - OOD.CANCEL_CNT)
		                 FROM OD_ORDER_DETL OOD
		                     INNER JOIN OD_ORDER OO
		                         ON OO.OD_ORDER_ID = OOD.OD_ORDER_ID
		                                AND OO.ORDER_YN = 'Y'
		                 WHERE OOD.IL_GOODS_ID = GOODS.IL_GOODS_ID
		                   AND DATE_FORMAT(OO.CREATE_DT, '%Y-%m-%d') BETWEEN IPE.EVENT_START_DT AND DATE_ADD(IPE.EVENT_END_DT, INTERVAL 2 DAY)
		                   AND OO.OM_SELLERS_ID = OS.OM_SELLERS_ID
		                 ), 0)
		         END AS DIFF_CNT_EX
			 , CASE WHEN GOODS.GOODS_TP = 'GOODS_TYPE.PACKAGE' THEN
					 IFNULL((
						 SELECT ROUND(SUM(ORDER_CNT) - SUM(CANCEL_CNT))
						 FROM (
							 SELECT SUM(OOD.ORDER_CNT) / SUM(IGPGM.GOODS_QTY) AS ORDER_CNT
								  , SUM(OOD.CANCEL_CNT) / SUM(IGPGM.GOODS_QTY) AS CANCEL_CNT
							 FROM OD_ORDER OD
								 INNER JOIN OD_ORDER_DETL OOD ON OOD.OD_ORDER_ID = OD.OD_ORDER_ID
								 INNER JOIN OD_ORDER_DETL_PACK OODP ON OODP.OD_ORDER_DETL_ID = OOD.OD_ORDER_DETL_PARENT_ID
								 INNER JOIN IL_GOODS_PACKAGE_GOODS_MAPPING IGPGM ON IGPGM.IL_GOODS_ID = OODP.IL_GOODS_ID
							 WHERE OD.ORDER_YN = 'Y'
							   AND IGPGM.IL_GOODS_ID = GOODS.IL_GOODS_ID
							   AND DATE_FORMAT(OD.CREATE_DT, '%Y-%m-%d') BETWEEN IPE.EVENT_START_DT AND DATE_ADD(IPE.EVENT_END_DT, INTERVAL 2 DAY)
							 GROUP BY OOD.OD_ORDER_ID
							 ) A
						 ), 0)
			     ELSE
			         IFNULL((
			             SELECT SUM(OOD.ORDER_CNT - OOD.CANCEL_CNT)
			             FROM OD_ORDER_DETL OOD
			                 INNER JOIN OD_ORDER OO
			                     ON OO.OD_ORDER_ID = OOD.OD_ORDER_ID
			                            AND OO.ORDER_YN = 'Y'
			             WHERE OOD.IL_GOODS_ID = GOODS.IL_GOODS_ID
			               AND DATE_FORMAT(OO.CREATE_DT, '%Y-%m-%d') BETWEEN IPE.EVENT_START_DT AND DATE_ADD(IPE.EVENT_END_DT, INTERVAL 2 DAY)
			               AND OO.OM_SELLERS_ID = OS.OM_SELLERS_ID
			             ), 0)
			     END AS ORDER_CNT
		     , CASE WHEN GOODS.GOODS_TP = 'GOODS_TYPE.PACKAGE' THEN
					ROUND(
					    IFNULL((
					        SELECT ROUND(SUM(ORDER_CNT) - SUM(CANCEL_CNT))
					        FROM (
					            SELECT SUM(OOD.ORDER_CNT) / SUM(IGPGM.GOODS_QTY) AS ORDER_CNT
									 , SUM(OOD.CANCEL_CNT) / SUM(IGPGM.GOODS_QTY) AS CANCEL_CNT
								FROM OD_ORDER OD
									INNER JOIN OD_ORDER_DETL OOD ON OOD.OD_ORDER_ID = OD.OD_ORDER_ID
									INNER JOIN OD_ORDER_DETL_PACK OODP ON OODP.OD_ORDER_DETL_ID = OOD.OD_ORDER_DETL_PARENT_ID
									INNER JOIN IL_GOODS_PACKAGE_GOODS_MAPPING IGPGM ON IGPGM.IL_GOODS_ID = OODP.IL_GOODS_ID
								WHERE OD.ORDER_YN = 'Y'
								  AND IGPGM.IL_GOODS_ID = GOODS.IL_GOODS_ID
								  AND DATE_FORMAT(OD.CREATE_DT, '%Y-%m-%d') BETWEEN DATE_ADD(CURDATE(), INTERVAL -30 DAY) AND DATE_ADD(CURDATE(), INTERVAL -1 DAY)
								GROUP BY OOD.OD_ORDER_ID
								) A
							), 0)/30
						,0)
		         ELSE
		             ROUND(
		                 IFNULL((
		                     SELECT SUM(OOD.ORDER_CNT - OOD.CANCEL_CNT)
		                     FROM OD_ORDER_DETL OOD
		                         INNER JOIN OD_ORDER OO
		                             ON OO.OD_ORDER_ID = OOD.OD_ORDER_ID
		                                    AND OO.ORDER_YN = 'Y'
		                     WHERE OOD.IL_GOODS_ID = GOODS.IL_GOODS_ID
		                       AND DATE_FORMAT(OO.CREATE_DT, '%Y-%m-%d') BETWEEN DATE_ADD(CURDATE(), INTERVAL -30 DAY) AND DATE_ADD(CURDATE(), INTERVAL -1 DAY)
		                       AND OO.OM_SELLERS_ID = OS.OM_SELLERS_ID
		                     ), 0)/30
		                 , 0)
		         END AS ORDER_AVG_CNT
		FROM IL_PO_EVENT IPE
		    INNER JOIN IL_GOODS GOODS
		        ON GOODS.IL_GOODS_ID = IPE.IL_GOODS_ID
		    INNER JOIN IL_ITEM ITEM
		        ON ITEM.IL_ITEM_CD = GOODS.IL_ITEM_CD
		    INNER JOIN IL_ITEM_WAREHOUSE IIW
		        ON IIW.IL_ITEM_CD = ITEM.IL_ITEM_CD
		    INNER JOIN UR_SUPPLIER_WAREHOUSE USW
		        ON USW.UR_SUPPLIER_WAREHOUSE_ID = IIW.UR_SUPPLIER_WAREHOUSE_ID
		               AND USW.UR_WAREHOUSE_ID = GOODS.UR_WAREHOUSE_ID
		               AND USW.UR_SUPPLIER_ID = ITEM.UR_SUPPLIER_ID
		    INNER JOIN UR_SUPPLIER US
		        ON US.UR_SUPPLIER_ID = USW.UR_SUPPLIER_ID
		    INNER JOIN UR_WAREHOUSE UW
		        ON UW.UR_WAREHOUSE_ID = USW.UR_WAREHOUSE_ID
		    LEFT JOIN IL_PO_TP IPT
		        ON IPT.IL_PO_TP_ID = IIW.IL_PO_TP_ID
		    INNER JOIN OM_SELLERS OS
		        ON OS.OM_SELLERS_ID = IPE.OM_SELLERS_ID
		    LEFT JOIN UR_USER UU
		        ON IPE.CREATE_ID = UR_USER_ID
		    LEFT JOIN UR_USER UD
		        ON IPE.MODIFY_ID = UD.UR_USER_ID
		    LEFT JOIN (
		        SELECT SCC.ST_COMN_CODE_ID
		             , GDM.DIC_MST_NM
		        FROM ST_COMN_CODE SCC
		            INNER JOIN GB_DIC_MST GDM
		                ON GDM.GB_DIC_MST_ID = SCC.GB_DIC_MST_ID
		        WHERE SCC.ST_COMN_CODE_MST_CD = 'GOODS_TYPE'
		        ) DIC_GOODS_TYPE
		        ON DIC_GOODS_TYPE.ST_COMN_CODE_ID = GOODS.GOODS_TP
		<where>
			<choose>
				<when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(selectConditionType, "singleSection")'> <!-- 최근 수정일 -->
					<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(searchItemCd)"> <!-- 복수검색 -->
						  AND
						  (
								GOODS.IL_GOODS_ID IN
								<foreach collection="searchItemCdArray" item="goodsId" index="index" separator="," open="(" close=")">
									#{goodsId}
								</foreach>
								OR
									ITEM.IL_ITEM_CD IN
								<foreach collection="searchItemCdArray" item="itemCode" index="index" separator="," open="(" close=")">
									#{itemCode}
								</foreach>
								OR
									ITEM.ERP_ITEM_BARCODE IN
	                                <foreach collection="searchItemCdArray" item="erpItemBarcode" index="index" separator="," open="(" close=")">
										#{erpItemBarcode}
									</foreach>
								OR
									ITEM.ITEM_BARCODE IN
									<foreach collection="searchItemCdArray" item="itemBarcode" index="index" separator="," open="(" close=")">
										#{itemBarcode}
									</foreach>
							)
					</if>
				</when>
				<otherwise>
					<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(searchEventStartDt)">
						<if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchRecevingType, "equal")'>
							AND IPE.EVENT_START_DT = STR_TO_DATE( #{searchEventStartDt}, '%Y%m%d' )
						</if>
						<if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchRecevingType, "over")'>
							AND IPE.EVENT_START_DT <![CDATA[>=]]> STR_TO_DATE( #{searchEventStartDt}, '%Y%m%d' )
						</if>
						<if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchRecevingType, "min")'>
							AND IPE.EVENT_START_DT <![CDATA[<=]]> STR_TO_DATE( #{searchEventStartDt}, '%Y%m%d' )
						</if>

					</if>
					<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(searchEventEndDt)">
						<if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchEventType, "equal")'>
							AND IPE.EVENT_END_DT = STR_TO_DATE( #{searchEventEndDt}, '%Y%m%d' )
						</if>
						<if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchEventType, "over")'>
							AND IPE.EVENT_END_DT <![CDATA[>=]]> STR_TO_DATE( #{searchEventEndDt}, '%Y%m%d' )
						</if>
						<if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchEventType, "min")'>
							AND IPE.EVENT_END_DT <![CDATA[<=]]> STR_TO_DATE( #{searchEventEndDt}, '%Y%m%d' )
						</if>
					</if>
					<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(sellersDetail)">
						AND IPE.OM_SELLERS_ID = #{sellersDetail}
					</if>
					<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(warehouseId)">
						AND GOODS.UR_WAREHOUSE_ID = #{warehouseId}
					</if>
					<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(supplierId)">
						AND ITEM.UR_SUPPLIER_ID = #{supplierId}
					</if>
					<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(searchUserId)">
						AND UU.LOGIN_ID = #{searchUserId}
					</if>
					<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(searchNameType)">
						<if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchNameType, "productNm")'>
							AND GOODS.GOODS_NM LIKE CONCAT('%', #{searchName}, '%')
						</if>
						<if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchNameType, "itemNm")'>
							AND ITEM.ITEM_NM LIKE CONCAT('%', #{searchName}, '%')
						</if>
						<if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchNameType, "goodsId")'>
							AND GOODS.IL_GOODS_ID = #{searchName}
						</if>
						<if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchNameType, "itemCd")'>
							AND ITEM.IL_ITEM_CD = #{searchName}
						</if>
						<if test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchNameType, "itemBarcode")'>
							AND ITEM.ITEM_BARCODE = #{searchName}
						</if>
					</if>
				</otherwise>
			</choose>
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(listAuthSupplierId) and listAuthSupplierId.size != 0">
				AND US.UR_SUPPLIER_ID IN
				<foreach item="data" index="index" collection="listAuthSupplierId" open="(" separator="," close=")">
               		#{data}
           		</foreach>
			</if>
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(listAuthWarehouseId) and listAuthWarehouseId.size != 0">
				AND UW.UR_WAREHOUSE_ID IN
				<foreach item="data" index="index" collection="listAuthWarehouseId" open="(" separator="," close=")">
              		#{data}
          		</foreach>
			</if>
		</where>
		ORDER BY IPE.CREATE_DT DESC
	</select>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 행사발주관리 목록 조회
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.01.22		정형진
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<select id="getPoRequest" resultMap="itemPoRequestMap">
		/*	goodsItemPoRequest.getPoRequest  */
		SELECT IPE.IL_PO_EVENT_ID
		     , ITEM.IL_ITEM_CD
		     , ITEM.ITEM_NM
		     , GOODS.IL_GOODS_ID
		     , ITEM.ITEM_BARCODE
		     , GOODS.GOODS_TP
		     , FN_COMN_CODE_DIC(GOODS.GOODS_TP) AS GOODS_TP_NAME
		     , GOODS.GOODS_NM
		     , GOODS.UR_WAREHOUSE_ID
		     , UW.WAREHOUSE_NM
		     , IIW.IL_PO_TP_ID
		     , IPT.PO_TP_NM
		     , IPE.PO_EVENT_QTY
		     , DATE_FORMAT(IPE.PO_SCHEDULE_DT, '%Y-%m-%d') AS PO_SCHEDULE_DT
		     , DATE_FORMAT(IPE.RECEVING_REQ_DT, '%Y-%m-%d') AS RECEVING_REQ_DT
		     , DATE_FORMAT(IPE.EVENT_START_DT, '%Y-%m-%d') AS EVENT_START_DT
		     , DATE_FORMAT(IPE.EVENT_END_DT, '%Y-%m-%d') AS EVENT_END_DT
		     , IPE.OM_SELLERS_ID
		     , OS.SELLERS_GROUP_CD
		     , OS.SELLERS_NM
		     , ITEM.PCS_PER_BOX
		     , ITEM.OMS
		     , CONCAT(LEFT(IPE.MEMO, 5), "....") AS MEMO_SPLIT
		     , IPE.MEMO
		     , DATE_FORMAT(IPE.CREATE_DT, '%Y-%m-%d %H:%i:%s') AS CREATE_DT
		     , DATE_FORMAT(IPE.MODIFY_DT, '%Y-%m-%d %H:%i:%s') AS MODIFY_DT
		     , UU.LOGIN_ID
		     , FN_DECRYPT(UU.USER_NM) AS USER_NM
		     , UD.LOGIN_ID AS MODIFY_LOGIN_ID
		     , FN_DECRYPT(UD.USER_NM) AS MODIFY_USER_NM
		FROM IL_PO_EVENT IPE
		    INNER JOIN IL_GOODS GOODS
		        ON GOODS.IL_GOODS_ID = IPE.IL_GOODS_ID
		    INNER JOIN IL_ITEM ITEM
		        ON ITEM.IL_ITEM_CD = GOODS.IL_ITEM_CD
		    INNER JOIN IL_ITEM_WAREHOUSE IIW
		        ON IIW.IL_ITEM_CD = ITEM.IL_ITEM_CD
		    INNER JOIN UR_SUPPLIER_WAREHOUSE USW
		        ON USW.UR_SUPPLIER_WAREHOUSE_ID = IIW.UR_SUPPLIER_WAREHOUSE_ID
		               AND USW.UR_WAREHOUSE_ID = GOODS.UR_WAREHOUSE_ID
		               AND USW.UR_SUPPLIER_ID = ITEM.UR_SUPPLIER_ID
		    INNER JOIN UR_SUPPLIER US
		        ON US.UR_SUPPLIER_ID = USW.UR_SUPPLIER_ID
		    INNER JOIN UR_WAREHOUSE UW
		        ON UW.UR_WAREHOUSE_ID = GOODS.UR_WAREHOUSE_ID
		    LEFT JOIN IL_PO_TP IPT
		        ON IPT.IL_PO_TP_ID = IIW.IL_PO_TP_ID
		    INNER JOIN OM_SELLERS OS
		        ON OS.OM_SELLERS_ID = IPE.OM_SELLERS_ID
		    LEFT JOIN UR_USER UU
		        ON IPE.CREATE_ID = UU.UR_USER_ID
		    LEFT JOIN UR_USER UD
		        ON IPE.MODIFY_ID = UD.UR_USER_ID
		WHERE 1=1
		  AND IPE.IL_PO_EVENT_ID = #{ilPoEventId}
	</select>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 상품 유무 조회
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.02.16		정형진
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<select id="getGoodsIdInfo" resultMap="getGoodsListResultMap">
		/* goodsItemPoRequest.getGoodsIdInfo */
        SELECT A.GOODS_ID /* 상품 ID */
             , A.GOODS_NAME /* 상품명 */
             , A.ITEM_CODE /* 품목코드 */
             , A.ITEM_NAME /* 품목명 */
             , A.ITEM_BARCODE /* 품목바코드 */
             , A.WAREHOUSE_ID /* 출고처 ID */
             , A.WAREHOUSE_NAME /* 출고처명 */
             , A.SUPPLIER_ID /* 공급처 ID */
             , A.SUPPLIER_COMPANY_ID /* 공급처 회사 ID */
             , A.SUPPLIER_NAME /* 공급처명 */
             , A.PCS_PER_BOX	/* 박스입수량 */
             , A.OMS			/* UOM_OMS */
             , A.BRAND_ID /* 브랜드 ID */
             , A.BRAND_NAME /* 브랜드명 */
             , A.DP_BRAND_NAME /* 전시 브랜드명 */
             , A.CATEGORY_STANDARD_ID /* 표준카테고리 ID */
             , FN_CTGRY_STD_FULL_NAME(A.CATEGORY_STANDARD_ID) AS CATEGORY_STANDARD_DEPTH_NAME /* 표준카테고리 DEPTH */
             , A.CATEGORY_ID /* 전시카테고리 */
             , (CASE WHEN A.CATEGORY_ID IS NULL
                     THEN ''
                ELSE FN_CTGRY_FULL_NAME(A.CATEGORY_ID)
                 END) AS CATEGORY_DEPTH_NAME /* 전시카테고리 DEPTH */
             , A.GOODS_TYPE_CODE /* 상품유형코드 */
             , FN_COMN_CODE_DIC(A.GOODS_TYPE_CODE) AS GOODS_TYPE_NAME /* 상품유형명 */
             , A.SALE_TYPE_CODE /* 판매유형코드 */
             , A.ITEM_TYPE_CODE /* 품목유형코드 */
             , A.PACKAGE_UNIT_DISPLAY_YN /* 포장용량 구성정보 노출여부 */
             , A.PURCHASE_MEMBER_YN /* 회원 구매여부 */
             , A.PURCHASE_EMPLOYEE_YN /* 임직원 구매여부 */
             , A.PURCHASE_NONMEMBER_YN /* 비회원 구매여부 */
             , A.DISPLAY_WEB_PC_YN /* WEB PC 전시여부 */
             , A.DISPLAY_WEB_MOBILE_YN /* WEB 모바일 전시여부 */
             , A.DISPLAY_APP_YN /* APP 전시여부 */
             , A.SALE_START_DATE /* 판매 시작일 */
             , A.SALE_END_DATE /* 판매 종료일 */
             , A.GOODS_DISPLAY_YN /* 상품 전시여부 */
             , A.SALE_STATUS_CODE /* 상품 판매상태 공통코드 */
             , FN_COMN_CODE_DIC(A.SALE_STATUS_CODE) AS SALE_STATUS_CODE_NAME
             , A.ITEM_GROUP /* 품목 그룹 */
             , A.STORAGE_METHOD_TYPE_CODE /* 보관방법 공통코드 */
             , FN_COMN_CODE_DIC(A.STORAGE_METHOD_TYPE_CODE) AS STORAGE_METHOD_TYPE_NAME /* 보관방법명 */
             , A.PLACE_ORDER_ID /* 발주유형 ID */
             , A.ITEM_IMAGE_PATH /* 상품 이미지 경로 */
             , A.IL_SHIPPING_TMPL_ID
             , A.UNDELIVERABLE_AREA_TP
             , GP.IL_GOODS_PRICE_ID  /* 가격정보 ID */
             , GP.STANDARD_PRICE  /* 원가 */
             , GP.RECOMMENDED_PRICE /* 정상가 */
             , GP.SALE_PRICE /* 판매가 */
             , A.NAME /* 배송정책 */
			 , CASE WHEN UNDELIVERABLE_AREA_TP = 'UNDELIVERABLE_AREA_TP.NONE' AND STORE_YN = 'N'
             			THEN A.AREA_SHIPPING_DELIVERY_YN
					ELSE '불가'
				END AREA_SHIPPING_DELIVERY_YN
			 , A.PO_TP_NM
			 , A.IL_PO_TP_ID
			 , A.PO_SUN_YN
			 , A.PO_MON_YN
			 , A.PO_TUE_YN
			 , A.PO_WED_YN
			 , A.PO_THU_YN
			 , A.PO_FRI_YN
			 , A.PO_SAT_YN
			 , A.SCHEDULED_SUN
			 , A.SCHEDULED_MON
			 , A.SCHEDULED_TUE
			 , A.SCHEDULED_WED
			 , A.SCHEDULED_THU
			 , A.SCHEDULED_FRI
			 , A.SCHEDULED_SAT
          FROM (
                SELECT
                       G.IL_GOODS_ID AS GOODS_ID
                     , G.GOODS_NM AS GOODS_NAME
                     , I.IL_ITEM_CD AS ITEM_CODE
                     , I.ITEM_NM AS ITEM_NAME
                     , IFNULL(I.ITEM_BARCODE, '') AS ITEM_BARCODE
                     , G.UR_WAREHOUSE_ID AS WAREHOUSE_ID
                     , W.WAREHOUSE_NM AS WAREHOUSE_NAME
                     , I.UR_SUPPLIER_ID AS SUPPLIER_ID
                     , S.UR_COMPANY_ID AS SUPPLIER_COMPANY_ID
                     , C.COMP_NM AS SUPPLIER_NAME
                     , I.PCS_PER_BOX
                     , I.OMS
                     , I.UR_BRAND_ID AS BRAND_ID
                     , B.BRAND_NM AS BRAND_NAME
                     , I.DP_BRAND_ID
                     , I.UNDELIVERABLE_AREA_TP
                     , DP.DP_BRAND_NM AS DP_BRAND_NAME
                     , I.IL_CTGRY_STD_ID AS CATEGORY_STANDARD_ID
                     , (SELECT T1.IL_CTGRY_ID
                          FROM IL_CTGRY_PRNTS_INFO T1
                          JOIN IL_GOODS_CTGRY T2
                            ON T2.IL_CTGRY_ID = T1.IL_CTGRY_ID
                          JOIN IL_CTGRY T3
                            ON T3.IL_CTGRY_ID = T1.IL_CTGRY_ID
                         WHERE T3.USE_YN = 'Y'
                           AND T3.DEL_YN = 'N'
                           AND T2.IL_GOODS_ID = G.IL_GOODS_ID
                         LIMIT 1) AS CATEGORY_ID
                     , G.GOODS_TP AS GOODS_TYPE_CODE
                     , G.SALE_TP AS SALE_TYPE_CODE
                     , I.ITEM_TP AS ITEM_TYPE_CODE
                     , G.PACKAGE_UNIT_DISP_YN AS PACKAGE_UNIT_DISPLAY_YN
                     , G.PURCHASE_MEMBER_YN
                     , G.PURCHASE_EMPLOYEE_YN
                     , G.PURCHASE_NONMEMBER_YN
                     , G.DISP_WEB_PC_YN AS DISPLAY_WEB_PC_YN
                     , G.DISP_WEB_MOBILE_YN AS DISPLAY_WEB_MOBILE_YN
                     , G.DISP_APP_YN AS DISPLAY_APP_YN
                     , DATE_FORMAT(G.SALE_START_DT, '%Y-%m-%d %H:%i:%s') AS SALE_START_DATE
                     , DATE_FORMAT(G.SALE_END_DT, '%Y-%m-%d %H:%i:%s') AS SALE_END_DATE
                     , G.DISP_YN AS GOODS_DISPLAY_YN
                     , G.SALE_STATUS AS SALE_STATUS_CODE
                     , I.ITEM_GRP AS ITEM_GROUP
                     , I.STORAGE_METHOD_TP AS STORAGE_METHOD_TYPE_CODE
                     , IIW.IL_PO_TP_ID AS PLACE_ORDER_ID
                     , (SELECT II.C_IMG
                          FROM IL_ITEM_IMG II
                         WHERE II.IL_ITEM_CD = I.IL_ITEM_CD
                           AND II.BASIC_YN = 'Y'
                         LIMIT 1) AS ITEM_IMAGE_PATH
                     , G.CREATE_DT
                     , (SELECT IL_GOODS_PRICE_ID
                          FROM IL_GOODS_PRICE
                         WHERE IL_GOODS_ID = G.IL_GOODS_ID
                           AND NOW() BETWEEN PRICE_START_DT AND PRICE_END_DT
                         ORDER BY IL_GOODS_PRICE_ID DESC
                         LIMIT 1) AS GOODS_PRICE_ID
                      , W.STORE_YN
					  , SP.IL_SHIPPING_TMPL_ID
                      , SP.AREA_SHIPPING_DELIVERY_YN
                      , SP.NAME
                      , IPT.PO_TP_NM
                      , IPT.IL_PO_TP_ID
                      , IPT.PO_SUN_YN
					  , IPT.PO_MON_YN
					  , IPT.PO_TUE_YN
					  , IPT.PO_WED_YN
					  , IPT.PO_THU_YN
					  , IPT.PO_FRI_YN
					  , IPT.PO_SAT_YN
					  , IPT.SCHEDULED_SUN
					  , IPT.SCHEDULED_MON
					  , IPT.SCHEDULED_TUE
					  , IPT.SCHEDULED_WED
					  , IPT.SCHEDULED_THU
					  , IPT.SCHEDULED_FRI
					  , IPT.SCHEDULED_SAT
                  FROM IL_GOODS G
                  JOIN IL_ITEM I
                    ON I.IL_ITEM_CD = G.IL_ITEM_CD
                  JOIN UR_WAREHOUSE W
                    ON W.UR_WAREHOUSE_ID = G.UR_WAREHOUSE_ID
                  JOIN UR_SUPPLIER S
                    ON S.UR_SUPPLIER_ID = I.UR_SUPPLIER_ID
				  JOIN UR_SUPPLIER_WAREHOUSE USW
				  	ON USW.UR_SUPPLIER_ID = S.UR_SUPPLIER_ID
				  	AND USW.UR_WAREHOUSE_ID = W.UR_WAREHOUSE_ID
				  JOIN IL_ITEM_WAREHOUSE IIW
					ON IIW.IL_ITEM_CD = I.IL_ITEM_CD
					AND IIW.UR_SUPPLIER_WAREHOUSE_ID = USW.UR_SUPPLIER_WAREHOUSE_ID
                  JOIN UR_COMPANY C
                    ON C.UR_COMPANY_ID = S.UR_COMPANY_ID
                  JOIN UR_BRAND B
                    ON B.UR_BRAND_ID = I.UR_BRAND_ID
                  LEFT JOIN DP_BRAND DP
                    ON DP.DP_BRAND_ID = I.DP_BRAND_ID
				  LEFT JOIN IL_GOODS_SHIPPING_TEMPLATE GDSP
				   	ON G.IL_GOODS_ID = GDSP.IL_GOODS_ID
				   	AND G.UR_WAREHOUSE_ID = GDSP.UR_WAREHOUSE_ID
				  LEFT JOIN IL_SHIPPING_TEMPLATE SP
				   	ON GDSP.ORIG_IL_SHIPPING_TMPL_ID = SP.ORIG_IL_SHIPPING_TMPL_ID
				   	AND SP.DEL_YN  = 'N'
				  LEFT JOIN IL_PO_TP IPT
				  	ON IPT.IL_PO_TP_ID = IIW.IL_PO_TP_ID
				  WHERE G.IL_GOODS_ID = #{ilGoodsId}
             ) A
             JOIN IL_GOODS_PRICE GP
            	ON GP.IL_GOODS_PRICE_ID = A.GOODS_PRICE_ID
         ORDER BY A.CREATE_DT DESC
	</select>

	<select id="getSellersInfo" resultMap="getSellersResultMap">
		/* goodsItemPoRequest.getSellersInfo */
        SELECT
        	OM_SELLERS_ID
        	, SELLERS_GROUP_CD
        	, SELLERS_CD
        	, SELLERS_NM
        	, SELLERS_URL
        	, SELLERS_ADMIN_URL
        	, INTERFACE_YN
        	, USE_YN
        	, OUTMALL_CD
        	, OUTMALL_NM
        	, CREATE_ID
        	, CREATE_DT
        	, MODIFY_ID
        	, MODIFY_DT
        FROM OM_SELLERS
        WHERE OM_SELLERS_ID = #{omSellersId}
        AND USE_YN = 'Y'
	</select>

	<select id="getPoRequestUploadList" resultMap="itemPoRequestMap">
		/* goodsItemPoRequest.getPoRequestUploadList */
		SELECT
			@ROWNUM :=@ROWNUM +1 AS ROWNUM,
			UPLOAD.*
		FROM (
			SELECT
				UL.IL_PO_EVENT_EXCEL_UPLOAD_LOG_ID,
				UL.FILE_NM,
				UL.SUCCESS_CNT,
				UL.FAIL_CNT,
				UL.CREATE_ID,
				DATE_FORMAT(UL.CREATE_DT, '%Y-%m-%d %H:%i:%s') AS CREATE_DT,
				UL.MODIFY_ID,
				DATE_FORMAT(UL.MODIFY_DT, '%Y-%m-%d %H:%i:%s') AS MODIFY_DT,
				FN_DECRYPT(UU.USER_NM) AS USER_NM,
				UU.LOGIN_ID
			FROM IL_PO_EVENT_EXCEL_UPLOAD_LOG UL
			LEFT JOIN UR_USER UU
			ON UL.CREATE_ID = UU.UR_USER_ID
			<where>
				<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(startDate) and @kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(endDate)">
					AND DATE_FORMAT(UL.CREATE_DT, '%Y%m%d') <![CDATA[ >= ]]> #{startDate}
           			AND DATE_FORMAT(UL.CREATE_DT, '%Y%m%d') <![CDATA[ <= ]]> #{endDate}
				</if>
				<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(searchUserId)">
					AND UL.CREATE_ID = #{searchUserId}
				</if>
			</where>

		) UPLOAD, (SELECT @ROWNUM := 0) TMP
		ORDER BY @ROWNUM DESC
	</select>

	<select id="getPoRequestUploadFailList" resultMap="itemPoRequestMap">
		/* goodsItemPoRequest.getPoRequestUploadFailList */
		SELECT
			IL_PO_EVENT_EXCEL_UPLOAD_DETL_LOG_ID,
			IL_GOODS_ID,
			SELLERS_CD,
			OM_SELLERS_ID,
			PO_EVENT_QTY,
			EVENT_START_DT,
			EVENT_END_DT,
			SUCCESS_YN,
			MSG
		FROM IL_PO_EVENT_EXCEL_UPLOAD_DETL_LOG
		WHERE IL_PO_EVENT_EXCEL_UPLOAD_LOG_ID = #{logId}
		AND SUCCESS_YN = 'N'
	</select>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 행사발주관리 추가
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.01.22		정형진
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<insert id="addItemPoRequest">
		/*	goodsItemPoRequest.addItemPoRequest  */
		INSERT INTO
			IL_PO_EVENT
		(
		    IL_GOODS_ID
			, OM_SELLERS_ID
			, PO_EVENT_QTY
			, RECEVING_REQ_DT
			, PO_SCHEDULE_DT
			, EVENT_START_DT
			, EVENT_END_DT
			, MEMO
			, CREATE_ID
			, CREATE_DT
		)
		VALUES
		(
			#{ilGoodsId}
			, #{inputSellersDetail}
			, #{poEventQty}
			, #{recevingReqDt}
			, #{poScheduleDt}
			, #{eventStartDt}
			, #{eventEndDt}
			, #{memo}
			, #{userVo.userId}
			, CURRENT_TIMESTAMP
		)
	</insert>

	<insert id="addItemPoRequestUpload">
		/*	goodsItemPoRequest.addItemPoRequestUpload  */
		INSERT INTO
			IL_PO_EVENT
		(
		    IL_GOODS_ID
			, OM_SELLERS_ID
			, PO_EVENT_QTY
			, RECEVING_REQ_DT
			, PO_SCHEDULE_DT
			, EVENT_START_DT
			, EVENT_END_DT
			, MEMO
			, CREATE_ID
			, CREATE_DT
		)
		VALUES
		(
			#{ilGoodsId}
			, #{omSellersId}
			, #{poEventQty}
			, #{recevingReqDt}
			, #{poScheduleDt}
			, #{eventStartDt}
			, #{eventEndDt}
			, #{memo}
			, #{createId}
			, CURRENT_TIMESTAMP
		)
	</insert>



	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 행사발주관리 로그 추가
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.02.17		정형진
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<insert id="addPoEventUploadLog">
		/*	goodsItemPoRequest.addPoEventUploadLog  */
		<selectKey resultType="string" keyProperty="logId" order="AFTER">
            SELECT IFNULL(MAX(IL_PO_EVENT_EXCEL_UPLOAD_LOG_ID), 1)  FROM IL_PO_EVENT_EXCEL_UPLOAD_LOG
        </selectKey>
        INSERT INTO IL_PO_EVENT_EXCEL_UPLOAD_LOG
        (
		   	FILE_NM
			, SUCCESS_CNT
			, FAIL_CNT
			, CREATE_ID
			, CREATE_DT
        )
        VALUES
        (
			#{fileNm}
			, #{successCnt}
			, #{failCnt}
			, #{createId}
			, NOW()
        )
	</insert>


	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 행사발주관리 상세 로그 추가
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.02.17		정형진
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<insert id="addPoEventUploadDtlLog">
		/*	goodsItemPoRequest.addPoEventUploadDtlLog  */
		INSERT INTO
			IL_PO_EVENT_EXCEL_UPLOAD_DETL_LOG
		(
			IL_PO_EVENT_EXCEL_UPLOAD_LOG_ID
			, IL_GOODS_ID
			, SELLERS_CD
			, OM_SELLERS_ID
			, PO_EVENT_QTY
			, EVENT_START_DT
			, EVENT_END_DT
			, SUCCESS_YN
			, MSG
			, CREATE_ID
			, CREATE_DT
		)
		VALUES
		(
			#{logId}
			, #{ilGoodsId}
			, #{sellersCd}
			, #{omSellersId}
			, #{poEventQty}
			, #{eventStartDt}
			, #{eventEndDt}
			, #{successYn}
			, #{msg}
			, #{createId}
			, NOW()
		)
	</insert>


	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 행사발주관리 수정
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.01.22		정형진
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<update id="putPoRequest">
		/*	goodsItemPoRequest.putPoRequest  */
		UPDATE
			IL_PO_EVENT
		SET
			IL_GOODS_ID = #{ilGoodsId} ,
			OM_SELLERS_ID = #{inputSellersDetail} ,
			PO_EVENT_QTY = #{poEventQty} ,
			RECEVING_REQ_DT = #{recevingReqDt} ,
			PO_SCHEDULE_DT = #{poScheduleDt} ,
			EVENT_START_DT = #{eventStartDt} ,
			EVENT_END_DT = #{eventEndDt} ,
			MEMO = #{memo} ,
			MODIFY_ID = #{userVo.userId} ,
			MODIFY_DT = CURRENT_TIMESTAMP
		WHERE IL_PO_EVENT_ID = #{ilPoEventId}
	</update>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 행사발주관리 엑셀 업로드 로그 수정
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.01.22		정형진
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<update id="putPoEventUploadLog">
		/*	goodsItemPoRequest.putPoEventUploadLog  */
		UPDATE
			IL_PO_EVENT_EXCEL_UPLOAD_LOG
		SET
			SUCCESS_CNT = #{successCnt},
			FAIL_CNT	= #{failCnt},
			MODIFY_ID = #{userVo.userId} ,
			MODIFY_DT = CURRENT_TIMESTAMP
		WHERE IL_PO_EVENT_EXCEL_UPLOAD_LOG_ID = #{logId}
	</update>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 행사발주관리 수정
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.01.22		정형진
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<delete id="delPoRequest">
		/*	goodsItemPoRequest.delPoRequest  */
		DELETE FROM IL_PO_EVENT WHERE IL_PO_EVENT_ID = #{ilPoEventId}
	</delete>


</mapper>

