<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.pulmuone.v1.comm.mapper.goods.discount.GoodsDiscountMapper">

    <!-- 상품할인 resultMap -->
    <resultMap id="getGoodsDiscountListResultMap" type="kr.co.pulmuone.v1.goods.discount.dto.vo.GoodsDiscountVo">
        <result column="GOODS_ID" property="goodsId" />
        <result column="GOODS_DISCOUNT_ID" property="goodsDiscountId" />
        <result column="DISCOUNT_TYPE_CODE" property="discountTypeCode" />
        <result column="APPROVAL_STATUS_CODE" property="approvalStatusCode" />
        <result column="DISCOUNT_START_DATE" property="discountStartDate" />
        <result column="DISCOUNT_START_HOUR" property="discountStartHour" />
        <result column="DISCOUNT_START_MINUTE" property="discountStartMinute" />
        <result column="DISCOUNT_END_DATE" property="discountEndDate" />
        <result column="DISCOUNT_END_HOUR" property="discountEndHour" />
        <result column="DISCOUNT_END_MINUTE" property="discountEndMinute" />
        <result column="DISCOUNT_METHOD_TYPE_CODE" property="discountMethodTypeCode" />
        <result column="DISCOUNT_RATIO" property="discountRatio" />
        <result column="DISCOUNT_SALE_PRICE" property="discountSalePrice" />
        <result column="DISCOUNT_END_DATE_TIME" property="discountEndDateTime" />
    </resultMap>

	<!-- 상품상세정보 resultMap -->
	<resultMap type="kr.co.pulmuone.v1.goods.goods.dto.vo.DetailSelectGoodsVo" id="getGoodsDetailResultMap">
		<result column="IL_GOODS_ID"  property="ilGoodsId"  />
		<result column="BRAND_NM"  property="brandName" />
		<result column="GOODS_DESC"  property="goodsDescription" />
		<result column="STORAGE_METHOD_TP"  property="storageMethodTypeName" />
		<result column="BASIC_DESC"  property="basicDescription"  />
		<result column="DETL_DESC"  property="detailDescription" />
		<result column="CLAIM_DESC"  property="claimDescription" />
		<result column="CTGRY_ID_DEPTH2"  property="categoryIdDepth2" />
		<result column="NUTRITION_DISP_YN"  property="nutritionDisplayYn" />
		<result column="NUTRITION_QTY_PER_ONCE"  property="nutritionQtyPerOnce"  />
		<result column="NUTRITION_QTY_TOTAL"  property="nutritionQtyTotal" />
		<result column="NUTRITION_ETC"  property="nutritionEtc" />
		<result column="NUTRITION_DISP_DEFAULT"  property="nutritionDisplayDefault" />
		<result column="NOTICE_BELOW_1_IMG_URL"  property="noticeBelow1ImageUrl" />
		<result column="NOTICE_BELOW_2_IMG_URL"  property="noticeBelow2ImageUrl" />
		<result column="VIDEO_AUTOPLAY_YN"  property="videoAutoplayYn" />
		<result column="VIDEO_URL"  property="videoUrl" />
		<result column="GOODS_PACKAGE_BASIC_DESC_YN"  property="goodsPackageBasicDescYn" />
		<result column="GOODS_PACKAGE_BASIC_DESC"  property="goodsPackageBasicDesc" />
		<result column="IS_NEW_GOODS"  property="isNewGoods" />
		<result column="IS_BEST_GOODS"  property="isBestGoods" />
		<result column="IS_RECOMMENDED_GOODS"  property="isRecommendedGoods" />
		<result column="GOODS_PACKAGE_IMG_TP"  property="goodsPackageImageType" />
		<result column="GOODS_TP"  property="goodsTp" />
		<result column="RECOMMENDED_PRICE"  property="recommendedPrice" />
		<result column="STANDARD_PRICE"  property="standardPrice" />

	</resultMap>

	<!-- 상품일괄업로드 내역 resultMap -->
    <resultMap type="kr.co.pulmuone.v1.goods.discount.dto.vo.GoodsDiscountUploadListVo" id="getGoodsDiscountUploadListResultMap">
        <result column="ROWNUM"                             property="rownum"  />
        <result column="IL_GOODS_DISCOUNT_UPLOAD_LOG_ID"    property="ilGoodsDiscountUploadLogId"  />
        <result column="IL_DISC_UPLOAD_TP"                  property="ilDiscUploadTp" />
        <result column="FILE_NM"                            property="fileNm" />
        <result column="SUCCESS_CNT"                        property="successCnt" />
        <result column="FAIL_CNT"                           property="failCnt"  />
        <result column="CREATE_ID"                          property="createId" />
        <result column="CREATE_DT"                          property="createDt" />
        <result column="MODIFY_ID"                          property="modifyId" />
        <result column="MODIFY_DT"                          property="modifyDt" />


        <result column="ROWNUM_STR"                 property="rownumStr"  />
        <result column="IL_ITEM_CD"                 property="itemCd"  />
        <result column="ITEM_BARCODE"               property="itemBarcode"  />
        <result column="IL_GOODS_ID"                property="goodsId"  />
        <result column="COMP_NM"                    property="compNm"  />
        <result column="GOODS_NM"                   property="goodsNm"  />
        <result column="SUCCESS_YN"                 property="successYn"  />
        <result column="MSG"                        property="msg"  />
        <result column="DISCOUNT_TP"                property="discountTp"  />
        <result column="DISCOUNT_TP_CODE"           property="discountTpCode"  />
        <result column="DISCOUNT_TP_CODE_NM"        property="discountTpCodeNm"  />
        <result column="DISCOUNT_METHOD_TP"         property="discountMethodTp"  />
        <result column="DISCOUNT_METHOD_TP_CODE"    property="discountMethodTpCode"  />
        <result column="DISCOUNT_METHOD_TP_CODE_NM" property="discountMethodTpCodeNm"  />
        <result column="DISCOUNT_START_DT"          property="discountStartDt"  />
        <result column="DISCOUNT_END_DT"            property="discountEndDt"  />
        <result column="DISCOUNT_SALE_PRICE"        property="discountSalePrice"  />
        <result column="STANDARD_PRICE"             property="standardPrice"  />
        <result column="RECOMMENDED_PRICE"          property="recommendedPrice"  />
        <result column="DISCOUNT_RATIO"             property="discountRatio"  />
        <result column="DISCOUNT_PRICE"             property="discountPrice"  />

        <result column="DISCOUNT_SALE_PRICE_STR"        property="discountSalePriceStr"  />
        <result column="STANDARD_PRICE_STR"             property="standardPriceStr"  />
        <result column="RECOMMENDED_PRICE_STR"          property="recommendedPriceStr"  />
        <result column="DISCOUNT_RATIO_STR"             property="discountRatioStr"  />
        <result column="DISCOUNT_PRICE_STR"             property="discountPriceStr"  />

    </resultMap>


    <!--───────────────────────────────────────────────────────────────────────
     * description : 상품할인 리스트 조회
     * @
     * @ 수정일         수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2020.09.08     손진구          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <select id="getGoodsDiscountList" resultMap="getGoodsDiscountListResultMap">
        /* goodsDiscount.getGoodsDiscountList */
        SELECT
               GD.IL_GOODS_ID AS GOODS_ID /* 상품ID */
             , GD.IL_GOODS_DISCOUNT_ID AS GOODS_DISCOUNT_ID /* 상품할인ID */
             , GD.DISCOUNT_TP AS DISCOUNT_TYPE_CODE /* 상품할인유형코드 */
             , 'APPR_STAT.APPROVED' AS APPROVAL_STATUS_CODE /* 승인상태코드 (승인프로세스가 정의되지 않아서 하드코딩으로 처리)  */
             , DATE_FORMAT(GD.DISCOUNT_START_DT, '%Y-%m-%d') AS DISCOUNT_START_DATE /* 할인시작일 */
             , DATE_FORMAT(GD.DISCOUNT_START_DT, '%H') AS DISCOUNT_START_HOUR /* 할인시작시간 */
             , DATE_FORMAT(GD.DISCOUNT_START_DT, '%i') AS DISCOUNT_START_MINUTE /* 할인시작분 */
             , DATE_FORMAT(GD.DISCOUNT_END_DT, '%Y-%m-%d') AS DISCOUNT_END_DATE /* 할인종료일 */
             , DATE_FORMAT(GD.DISCOUNT_END_DT, '%H') AS DISCOUNT_END_HOUR /* 할인종료시간 */
             , DATE_FORMAT(GD.DISCOUNT_END_DT, '%i') AS DISCOUNT_END_MINUTE /* 할인종료분 */
             , GD.DISCOUNT_METHOD_TP AS DISCOUNT_METHOD_TYPE_CODE /* 상품할인방법유형코드 */
             , GD.DISCOUNT_RATIO AS DISCOUNT_RATIO /* 할인율 */
             , GD.DISCOUNT_SALE_PRICE AS DISCOUNT_SALE_PRICE /* 판매가 */
          FROM IL_GOODS_DISCOUNT GD
         WHERE GD.IL_GOODS_ID = #{goodsId}
           AND GD.DISCOUNT_TP = #{discountTypeCode}
           AND GD.DISCOUNT_END_DT <![CDATA[ > ]]> NOW()
           AND GD.USE_YN = 'Y'
    </select>


    <!--───────────────────────────────────────────────────────────────────────
     * description : 상품할인 삭제
     * @
     * @ 수정일         수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2020.09.09     손진구          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <delete id="deleteGoodsDiscount">
        /* goodsDiscount.deleteGoodsDiscount */
        DELETE FROM IL_GOODS_DISCOUNT
	    WHERE IL_GOODS_DISCOUNT_ID = #{goodsDiscountId}
    </delete>

	<!--───────────────────────────────────────────────────────────────────────
	 * description : 상품할인 사용안함 처리(삭제 처리)
	 * @
	 * @ 수정일         수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.05.03     임상건          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<update id="updateGoodsDiscount">
		/* goodsDiscount.updateGoodsDiscount */
		UPDATE IL_GOODS_DISCOUNT SET
		USE_YN = 'N'
		WHERE IL_GOODS_DISCOUNT_ID = #{goodsDiscountId}
	</update>

    <!--───────────────────────────────────────────────────────────────────────
	 * description : 상품할인 사용안함 처리(삭제 처리) - 조회조건
	 * @
	 * @ 수정일         수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.10.05     이원호          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
    <update id="putGoodsDiscount">
        /* goodsDiscount.putGoodsDiscount */
        UPDATE IL_GOODS_DISCOUNT
        SET USE_YN = 'N'
        WHERE IL_GOODS_ID = #{ilGoodsId}
            AND DISCOUNT_TP = #{discountTypeCode}
            AND DISCOUNT_START_DT = #{discountStartDateTime}
            AND USE_YN = 'Y'
    </update>

	<!--───────────────────────────────────────────────────────────────────────
     * description : 상품할인승인 승인상태 변경 처리(할인 삭제 처리 시)
     * @
     * @ 수정일         수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2021.05.03     임상건          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
	<update id="updateGoodsDiscountApprStat">
		/* goodsDiscount.updateGoodsDiscountApprStat */
		UPDATE IL_GOODS_DISCOUNT_APPR SET
			APPR_STAT = #{apprStat}
		,	MODIFY_DT = NOW()
		,	MODIFY_ID = #{userId}
		WHERE IL_GOODS_DISCOUNT_APPR_ID = #{goodsDiscountApprId}
	</update>

	<!--───────────────────────────────────────────────────────────────────────
     * description : 상품할인승인히스토리 입력(할인 삭제 처리 시)
     * @
     * @ 수정일         수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2021.05.03     임상건          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
	<update id="insertGoodsDiscountApprStatusHistoryStat">
		/* goodsDiscount.insertGoodsDiscountApprStatusHistoryStat */
		INSERT INTO IL_GOODS_DISCOUNT_APPR_STATUS_HISTORY (
			IL_GOODS_DISCOUNT_APPR_ID
		,	PREV_APPR_STAT
		,	APPR_STAT
		,	STATUS_CMNT
		,	APPR_SUB_USER_ID
		,	APPR_USER_ID
		,	CREATE_DT
		,	CREATE_ID
		)
		SELECT
			IL_GOODS_DISCOUNT_APPR_ID
		,	APPR_STAT
		,	#{apprStat}
		,	NULL
		,	APPR_SUB_USER_ID
		,	APPR_USER_ID
		,	NOW()
		,	#{userId}
		FROM
			IL_GOODS_DISCOUNT_APPR
		WHERE
			IL_GOODS_DISCOUNT_APPR_ID = #{goodsDiscountApprId}
	</update>


    <!--───────────────────────────────────────────────────────────────────────
     * description : 묶음상품 개별품목 내역을 삭제
     * @
     * @ 수정일         수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2021.02.09     임상건          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <delete id="deleteIlGoodsPackageItemFixedDiscountPrice">
        /* goodsDiscount.deleteIlGoodsPackageItemFixedDiscountPrice */
        DELETE FROM IL_GOODS_PACKAGE_ITEM_FIXED_DISCOUNT_PRICE
         WHERE IL_GOODS_DISCOUNT_ID = #{goodsDiscountId}
    </delete>


   	<!--───────────────────────────────────────────────────────────────────────
	 * description 		:  상품 할인 종료일 조회 (시작일기준)
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.09.16		ykk          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<select id="getGoodsDiscountMinEndDt" resultType="String">
		/* goodsDiscount.getGoodsDiscountMinEndDt */
		SELECT
			IFNULL(DATE_SUB(MIN(DISCOUNT_START_DT), INTERVAL 1 SECOND),'') AS START_DT
		FROM IL_GOODS_DISCOUNT
		WHERE
				IL_GOODS_ID = #{ilGoodsId}
			AND DISCOUNT_START_DT  <![CDATA[>]]> #{discountStartDate}
			AND USE_YN = 'Y'
	</select>


	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 상품 할인 저장 by 배치
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.09.16		ykk          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
<!--
	<insert id="addGoodsDiscountByBatch" >
			/* goodsDiscount.addGoodsDiscountByBatch */
			INSERT INTO IL_GOODS_DISCOUNT
			(
			      IL_GOODS_ID			/* 상품 PK */
				, DISCOUNT_TP           /* 상품할인 유형 공통코드(GOODS_DISCOUNT_TP - PRIORITY:우선할인, ORGA:올가할인, IMMEDIATE:즉시할인)*/
				, DISCOUNT_START_DT     /* 할인 시작일*/
				, DISCOUNT_END_DT       /* 할인 종료일*/
				, DISCOUNT_METHOD_TP    /* 상품할인 방법 유형 공통코드(GOODS_DISCOUNT_METHOD_TP - FIXED_PRICE:고정가할인, FIXED_RATE:정률할인)*/
				, DISCOUNT_SALE_PRICE   /* 할인판매가*/
				, USE_YN				/* 사용여부(Y:사용)*/
				, CREATE_ID             /* 등록자*/
			)
			VALUES
			(
				 #{ilGoodsId}
				,#{discountType}
				,#{discountStartDate}
				,#{discountEndDate}
				,#{discountMethodType}
				,#{discountSalePrice}
				,'Y'
				,#{createId}
			)
			ON	DUPLICATE KEY
			UPDATE
				 DISCOUNT_END_DT = #{discountEndDate}
				,DISCOUNT_METHOD_TP= #{discountMethodType}
				,DISCOUNT_SALE_PRICE= #{discountSalePrice}
				,USE_YN= 'Y'
				,MODIFY_ID = #{modifyId}

	</insert>
-->

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 상품 할인  전체 조회 (시작일 기준)
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.09.16		ykk          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<select id="getGoodsDiscountStartDateUnderList" resultType="kr.co.pulmuone.v1.goods.discount.dto.vo.DiscountInfoVo">
			/* goodsDiscount.getGoodsDiscountStartDateUnderList */
			SELECT
				   IL_GOODS_DISCOUNT_ID
				 , DISCOUNT_START_DT     AS DISCOUNT_START_DATE
			FROM IL_GOODS_DISCOUNT
			WHERE
					IL_GOODS_ID = #{ilGoodsId}
				AND DISCOUNT_START_DT  <![CDATA[<]]>  #{discountStartDate}
				AND USE_YN = 'Y'
	</select>


	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 상품 할인 시작일 이전 데이터 종료일 수정
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.09.16		ykk          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<update id="putPastGoodsDiscountByBatch" >
		/* goodsDiscount.putPastGoodsDiscountByBatch */
		UPDATE IL_GOODS_DISCOUNT
		SET
			DISCOUNT_END_DT	= #{discountEndDate}
			, PRICE_CHANGE_PROC_YN = 'N'
			, PRICE_CHANGE_PROC_DT = '1900-01-01 00:00:00'
		WHERE
			IL_GOODS_DISCOUNT_ID = #{ilGoodsDiscountId}

		<selectKey keyColumn="IL_GOODS_ID" keyProperty="ilGoodsId" resultType="kr.co.pulmuone.v1.goods.discount.dto.vo.DiscountInfoVo" order="AFTER">
			SELECT
				IL_GOODS_ID
			FROM
				IL_GOODS_DISCOUNT
			WHERE
				IL_GOODS_DISCOUNT_ID = #{ilGoodsDiscountId}
		</selectKey>
	</update>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 상품 할인 시작일 이전 데이터 종료일 수정
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.09.16		ykk          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<update id="putPastGoodsDiscountApprByBatch" >
		/* goodsDiscount.putPastGoodsDiscountApprByBatch */
		UPDATE IL_GOODS_DISCOUNT_APPR
		SET
			DISCOUNT_END_DT	= #{discountEndDate}
		WHERE
			IL_GOODS_DISCOUNT_ID = #{ilGoodsDiscountId}
	</update>


	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 상품 할인 배치에 의한 배치여부, 변경여부 변경
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.09.16		ykk          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<update id="putGoodsBatchChange" >
			/* goodsDiscount.putGoodsBatchChange */
			UPDATE IL_GOODS
			SET
				 BATCH_PRICE_CHANGE_DT	= NOW()
				,PRICE_CHANGE_PROC_YN = 'N'
			WHERE
				IL_GOODS_ID = #{ilGoodsId}

	</update>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 상품 할인 저장 by 배치
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.09.29		임상건          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<insert id="addGoodsDiscountByAddGoods" >
			/* goodsDiscount.addGoodsDiscountByAddGoods */
			INSERT INTO IL_GOODS_DISCOUNT
			(
			      IL_GOODS_ID			/* 상품 PK */
				, DISCOUNT_TP           /* 상품할인 유형 공통코드(GOODS_DISCOUNT_TP - PRIORITY:우선할인, ORGA:올가할인, IMMEDIATE:즉시할인)*/
				, DISCOUNT_START_DT     /* 할인 시작일*/
				, DISCOUNT_END_DT       /* 할인 종료일*/
				, DISCOUNT_METHOD_TP    /* 상품할인 방법 유형 공통코드(GOODS_DISCOUNT_METHOD_TP - FIXED_PRICE:고정가할인, FIXED_RATE:정률할인)*/
				, DISCOUNT_SALE_PRICE   /* 할인판매가*/
				, USE_YN				/* 사용여부(Y:사용)*/
				, CREATE_ID             /* 등록자*/
			)
			VALUES
			(
				 #{ilGoodsId}
				,#{discountType}
				,DATE_FORMAT(IFNULL(#{discountStartDate}, ADDDATE(CURDATE(),1)),'%Y-%m-%d')
				,DATE_FORMAT(IFNULL(#{discountEndDate}, '2999-12-31 23:59:59.0'), '%Y-%m-%d %H:%i:%s')
				,#{discountMethodType}
				,#{discountSalePrice}
				,'Y'
				,#{createId}
			)
			ON DUPLICATE KEY UPDATE
				  DISCOUNT_END_DT = DATE_FORMAT(IFNULL(#{discountEndDate}, '2999-12-31 23:59:59.0'), '%Y-%m-%d %H:%i:%s')
				, DISCOUNT_METHOD_TP= #{discountMethodType}
				, DISCOUNT_SALE_PRICE= #{discountSalePrice}
				, USE_YN= 'Y'
	</insert>

	<!--───────────────────────────────────────────────────────────────────────
     * description      :  상품 상세 정보
     * @
     * @ 수정일            수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2020.12.11     정형진
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <select id="getGoodsInfo" resultMap="getGoodsDetailResultMap">
        /* goodsDiscount.getGoodsInfo */
        SELECT
            IG.IL_GOODS_ID
            , IF(US.SUPPLIER_CD = 'OG', (SELECT COMP_NM FROM UR_COMPANY A JOIN UR_SUPPLIER B ON A.UR_COMPANY_ID = B.UR_COMPANY_ID WHERE B.SUPPLIER_CD = 'OG') ,UB.BRAND_NM) AS BRAND_NM
            ,IG.GOODS_DESC
            ,IG.GOODS_TP
            ,FN_COMN_CODE_DIC(II.STORAGE_METHOD_TP) AS STORAGE_METHOD_TP
            ,II.BASIC_DESC
            ,II.DETL_DESC
#            ,ICDI.`DESC` AS CLAIM_DESC
            ,ICPI.CTGRY_ID_DEPTH2
            ,II.NUTRITION_DISP_YN
            ,II.NUTRITION_QTY_PER_ONCE
            ,II.NUTRITION_QTY_TOTAL
            ,II.NUTRITION_ETC
            ,II.NUTRITION_DISP_DEFAULT
            ,IG.NOTICE_BELOW_1_IMG_URL
            ,IG.NOTICE_BELOW_2_IMG_URL
            ,CASE WHEN IG.GOODS_TP = 'GOODS_TYPE.PACKAGE'
                  THEN IG.GOODS_PACKAGE_VIDEO_AUTOPLAY_YN
                  ELSE II.VIDEO_AUTOPLAY_YN
                  END AS VIDEO_AUTOPLAY_YN
            ,CASE WHEN IG.GOODS_TP = 'GOODS_TYPE.PACKAGE'
                  THEN IG.GOODS_PACKAGE_VIDEO_URL
                  ELSE II.VIDEO_URL
                  END AS VIDEO_URL
            ,IG.GOODS_PACKAGE_BASIC_DESC_YN
            ,IG.GOODS_PACKAGE_BASIC_DESC
            ,CASE WHEN IG.CREATE_DT > DATE_ADD(now(), INTERVAL -1 QUARTER) THEN true ELSE false END AS IS_NEW_GOODS
            ,false AS IS_BEST_GOODS
            ,CASE WHEN IG.MD_RECOMMEND_YN = 'Y' THEN true ELSE false END IS_RECOMMENDED_GOODS
            ,IG.GOODS_PACKAGE_IMG_TP
            , (
            SELECT
				RECOMMENDED_PRICE
			FROM IL_GOODS_PRICE
			WHERE IL_GOODS_ID = IG.IL_GOODS_ID
			AND NOW() BETWEEN PRICE_START_DT AND PRICE_END_DT
			ORDER BY IL_GOODS_PRICE_ID DESC
			LIMIT 1
            ) AS RECOMMENDED_PRICE
            , (
            SELECT
				STANDARD_PRICE
			FROM IL_GOODS_PRICE
			WHERE IL_GOODS_ID = IG.IL_GOODS_ID
			AND NOW() BETWEEN PRICE_START_DT AND PRICE_END_DT
			ORDER BY IL_GOODS_PRICE_ID DESC
			LIMIT 1
            ) AS STANDARD_PRICE

        FROM
            IL_GOODS IG
            JOIN IL_ITEM II ON II.IL_ITEM_CD = IG.IL_ITEM_CD
            JOIN UR_BRAND UB ON II.UR_BRAND_ID = UB.UR_BRAND_ID
            LEFT JOIN UR_SUPPLIER US ON US.UR_SUPPLIER_ID = UB.UR_SUPPLIER_ID
#            JOIN IL_CLAIM_DESC_INFO ICDI ON ICDI.ITEM_TP = II.ITEM_TP AND ICDI.GOODS_TP = IG.GOODS_TP
            LEFT JOIN IL_GOODS_CTGRY IGC ON (IGC.IL_GOODS_ID = IG.IL_GOODS_ID AND IGC.BASIC_YN = 'Y' AND IGC.MALL_DIV ='MALL_DIV.PULMUONE')
            LEFT JOIN IL_CTGRY_PRNTS_INFO ICPI ON IGC.IL_CTGRY_ID = ICPI.IL_CTGRY_ID
        WHERE
            IG.IL_GOODS_ID = #{goodsId}
    </select>

    <!--───────────────────────────────────────────────────────────────────────
     * description      :  상품 할인 정보 할인기간 중복여부 조회
     * @
     * @ 수정일            수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2020.12.11     정형진
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <select id="getGoodsDiscountInfo" resultMap="getGoodsDiscountListResultMap">
        /* goodsDiscount.getGoodsDiscountInfo */
        SELECT *
        FROM IL_GOODS_DISCOUNT
        WHERE 1=1
        AND IL_GOODS_ID = #{goodsId}
        AND DISCOUNT_TP = #{discountTypeCode}
        AND DISCOUNT_START_DT <![CDATA[ <= ]]> #{discountEndDate}
        AND DISCOUNT_END_DT <![CDATA[ >= ]]> #{discountStartDate}
        AND USE_YN = 'Y'

	</select>

    <!--───────────────────────────────────────────────────────────────────────
     * description      :  상품 할인 일괄 업로드 로그 조회
     * @
     * @ 수정일            수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2020.12.11     정형진
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <select id="getGoodsDiscountUploadList" resultMap="getGoodsDiscountUploadListResultMap">
        /* goodsDiscount.getGoodsDiscountUploadList */
        SELECT *
        FROM (
            SELECT
                @ROWNUM :=@ROWNUM +1 AS ROWNUM,
                IL_GOODS_DISCOUNT_UPLOAD_LOG_ID,
                IL_DISC_UPLOAD_TP,
                FILE_NM,
                SUCCESS_CNT,
                FAIL_CNT,
                DATE_FORMAT(CREATE_DT, '%Y-%m-%d') AS CREATE_DT
            FROM IL_GOODS_DISCOUNT_UPLOAD_LOG, (SELECT @ROWNUM := 0) TMP
            WHERE 1=1
            AND IL_DISC_UPLOAD_TP = #{uploadTp}
            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(startDate)">
                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(endDate)">
                    AND CREATE_DT BETWEEN #{startDate} AND (#{endDate} + INTERVAL 1 DAY - INTERVAL 1 SECOND)
                </if>
            </if>
            ORDER BY CREATE_DT ASC
        )UPLOAD
        ORDER BY UPLOAD.ROWNUM DESC
    </select>

    <!--───────────────────────────────────────────────────────────────────────
     * description      :  상품 할인 정보 업로드 실패 내역 조회
     * @
     * @ 수정일            수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2020.12.11     정형진
     * @
    ────────────────────────────────────────────────────────────────────────-->
	<select id="getGoodsDiscountUploadFailList" resultMap="getGoodsDiscountUploadListResultMap">
	/* goodsDiscount.getGoodsDiscountUploadFailList */
		SELECT
			UPLOAD_LOG.IL_GOODS_ID
			, IFNULL(UPLOAD_LOG.MSG, '') AS MSG
			, IFNULL(UPLOAD_LOG.DISCOUNT_TP, '') AS DISCOUNT_TP
			, IFNULL(UPLOAD_LOG.DISCOUNT_METHOD_TP, '') AS DISCOUNT_METHOD_TP
			, IFNULL (
				CASE
					WHEN DISCOUNT_METHOD_TP = 1 THEN UPLOAD_LOG.DISCOUNT_SALE_PRICE
					ELSE UPLOAD_LOG.DISCOUNT_RATIO
				END
			, '') AS DISCOUNT_RATIO
			, IFNULL(UPLOAD_LOG.DISCOUNT_START_DT, '') AS DISCOUNT_START_DT
			, IFNULL(UPLOAD_LOG.DISCOUNT_END_DT, '') AS DISCOUNT_END_DT
		FROM
			IL_GOODS_DISCOUNT_UPLOAD_DETL_LOG UPLOAD_LOG
		WHERE
			UPLOAD_LOG.IL_DISCOUNT_EXCEL_UPLOAD_LOG_ID = #{logId}
			AND UPLOAD_LOG.SUCCESS_YN = 'N'
	</select>

    <!--───────────────────────────────────────────────────────────────────────
     * description      :  임직원 상품 할인 일괄 업로드 실패 내역 조회
     * @
     * @ 수정일            수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2020.12.11     정형진
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <select id="getGoodsDiscountEmpUploadFailList" resultMap="getGoodsDiscountUploadListResultMap">
        /* goodsDiscount.getGoodsDiscountEmpUploadFailList */
		SELECT
			UPLOAD_LOG.IL_GOODS_ID
			, IFNULL(UPLOAD_LOG.MSG, '') AS MSG
			, IFNULL (UPLOAD_LOG.DISCOUNT_RATIO, '') AS DISCOUNT_RATIO
			, IFNULL(UPLOAD_LOG.DISCOUNT_START_DT, '') AS DISCOUNT_START_DT
			, IFNULL(UPLOAD_LOG.DISCOUNT_END_DT, '') AS DISCOUNT_END_DT
		FROM
			IL_GOODS_DISCOUNT_UPLOAD_DETL_LOG UPLOAD_LOG
		WHERE
			UPLOAD_LOG.IL_DISCOUNT_EXCEL_UPLOAD_LOG_ID = #{logId}
			AND UPLOAD_LOG.SUCCESS_YN = 'N'
    </select>

    <!--───────────────────────────────────────────────────────────────────────
     * description      : 상품 할인 일괄 업로드 로그 상세 내역조회
     * @
     * @ 수정일            수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2020.12.11     정형진
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <select id="getGoodsDiscountUploadDtlList" resultMap="getGoodsDiscountUploadListResultMap">
        /* goodsDiscount.getGoodsDiscountUploadDtlList */
        SELECT
            LOG_INFO.ROWNUM,
            LOG_INFO.ROWNUM AS ROWNUM_STR,
            IFNULL(LOG_INFO.IL_ITEM_CD, '') AS IL_ITEM_CD,
            IFNULL(LOG_INFO.ITEM_BARCODE, '') AS ITEM_BARCODE ,
            LOG_INFO.IL_GOODS_ID,
            IFNULL(LOG_INFO.GOODS_NM, '') AS GOODS_NM ,
            LOG_INFO.SUCCESS_YN,
            LOG_INFO.MSG,
            LOG_INFO.DISCOUNT_TP,
            LOG_INFO.DISCOUNT_TP_CODE,
            FN_COMN_CODE_DIC(LOG_INFO.DISCOUNT_TP_CODE) AS DISCOUNT_TP_CODE_NM,
            LOG_INFO.DISCOUNT_METHOD_TP,
            LOG_INFO.DISCOUNT_METHOD_TP_CODE,
            FN_COMN_CODE_DIC(LOG_INFO.DISCOUNT_METHOD_TP_CODE) AS DISCOUNT_METHOD_TP_CODE_NM,
            LOG_INFO.DISCOUNT_START_DT,
            LOG_INFO.DISCOUNT_END_DT,
            LOG_INFO.DISCOUNT_SALE_PRICE,
            IFNULL(GP.STANDARD_PRICE, '') AS STANDARD_PRICE,
            IFNULL(GP.RECOMMENDED_PRICE, '') AS RECOMMENDED_PRICE,
            /*
            CASE WHEN LOG_INFO.DISCOUNT_METHOD_TP = '1' THEN LOG_INFO.DISCOUNT_SALE_PRICE
                WHEN  LOG_INFO.DISCOUNT_METHOD_TP = '2' THEN ''
                ELSE '' END DISCOUNT_RATIO,

            CASE WHEN LOG_INFO.DISCOUNT_METHOD_TP = '1' THEN ''
                WHEN  LOG_INFO.DISCOUNT_METHOD_TP = '2' THEN LOG_INFO.DISCOUNT_SALE_PRICE
                ELSE '' END DISCOUNT_PRICE
			*/
			IFNULL(
             TRUNCATE(CASE WHEN LOG_INFO.DISCOUNT_METHOD_TP_CODE = 'GOODS_DISCOUNT_METHOD_TP.FIXED_RATE' THEN LOG_INFO.DISCOUNT_RATIO
                WHEN  LOG_INFO.DISCOUNT_METHOD_TP_CODE = 'GOODS_DISCOUNT_METHOD_TP.FIXED_PRICE' THEN ((CAST(GP.RECOMMENDED_PRICE as SIGNED) - CAST(LOG_INFO.DISCOUNT_SALE_PRICE as SIGNED)) / CAST(GP.RECOMMENDED_PRICE as SIGNED)) * 100
                ELSE '' END, 0), '') DISCOUNT_RATIO,

            IFNULL(TRUNCATE(CASE WHEN LOG_INFO.DISCOUNT_METHOD_TP_CODE = 'GOODS_DISCOUNT_METHOD_TP.FIXED_RATE' THEN (GP.RECOMMENDED_PRICE * ((100-LOG_INFO.DISCOUNT_RATIO)/100))
                WHEN  LOG_INFO.DISCOUNT_METHOD_TP_CODE = 'GOODS_DISCOUNT_METHOD_TP.FIXED_PRICE' THEN LOG_INFO.DISCOUNT_SALE_PRICE
                ELSE '' END, 0), '') DISCOUNT_PRICE

        FROM (
        SELECT
            @ROWNUM :=@ROWNUM +1 AS ROWNUM,
            ITEM.ITEM_BARCODE,
            ITEM.IL_ITEM_CD,
            UPLOAD_LOG.IL_GOODS_ID,
            GOODS.GOODS_NM,
            IF(UPLOAD_LOG.SUCCESS_YN='Y', '성공', '실패') AS  SUCCESS_YN,
            UPLOAD_LOG.MSG,
            UPLOAD_LOG.DISCOUNT_TP,
            CASE WHEN UPLOAD_LOG.DISCOUNT_TP = 1 THEN 'GOODS_DISCOUNT_TP.PRIORITY'
                 WHEN UPLOAD_LOG.DISCOUNT_TP = 2 THEN 'GOODS_DISCOUNT_TP.IMMEDIATE'
            ELSE UPLOAD_LOG.DISCOUNT_TP END DISCOUNT_TP_CODE,
            UPLOAD_LOG.DISCOUNT_METHOD_TP,
            CASE WHEN UPLOAD_LOG.DISCOUNT_METHOD_TP = 1 THEN 'GOODS_DISCOUNT_METHOD_TP.FIXED_RATE'
                 WHEN UPLOAD_LOG.DISCOUNT_METHOD_TP = 2 THEN 'GOODS_DISCOUNT_METHOD_TP.FIXED_PRICE'
            ELSE UPLOAD_LOG.DISCOUNT_METHOD_TP END DISCOUNT_METHOD_TP_CODE,
            UPLOAD_LOG.DISCOUNT_RATIO,
            UPLOAD_LOG.DISCOUNT_SALE_PRICE,
            DATE_FORMAT(UPLOAD_LOG.DISCOUNT_START_DT, '%Y-%m-%d %H:%i:%s') AS DISCOUNT_START_DT,
            DATE_FORMAT(UPLOAD_LOG.DISCOUNT_END_DT, '%Y-%m-%d %H:%i:%s') AS DISCOUNT_END_DT,
            (SELECT IL_GOODS_PRICE_ID
                FROM IL_GOODS_PRICE
                WHERE IL_GOODS_ID = UPLOAD_LOG.IL_GOODS_ID
                AND NOW() BETWEEN PRICE_START_DT AND PRICE_END_DT
                ORDER BY IL_GOODS_PRICE_ID DESC
                LIMIT 1) AS GOODS_PRICE_ID
        FROM IL_GOODS_DISCOUNT_UPLOAD_DETL_LOG UPLOAD_LOG
        LEFT OUTER JOIN IL_GOODS GOODS
        ON UPLOAD_LOG.IL_GOODS_ID = GOODS.IL_GOODS_ID
        LEFT OUTER JOIN IL_ITEM ITEM
        ON ITEM.IL_ITEM_CD = GOODS.IL_ITEM_CD
        , (SELECT @ROWNUM := 0) TMP
        WHERE 1=1
        AND UPLOAD_LOG.IL_DISCOUNT_EXCEL_UPLOAD_LOG_ID = #{logId}
        <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchType,'single') ">
            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(codeType,'itemCode') ">
                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(goodsCodeArray)">
                    AND ITEM.IL_ITEM_CD IN
                           <foreach item="data" index="index" collection="goodsCodeArray" open="(" separator="," close=")">
                               #{data}
                           </foreach>
                </if>
            </if>
            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(codeType,'barcodeCd') ">
                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(goodsCodeArray)">
                    AND ITEM.ITEM_BARCODE IN
                           <foreach item="data" index="index" collection="goodsCodeArray" open="(" separator="," close=")">
                               #{data}
                           </foreach>
                </if>
            </if>
            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(codeType,'goodsId') ">
                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(goodsCodeArray)">
                    AND UPLOAD_LOG.IL_GOODS_ID IN
                           <foreach item="data" index="index" collection="goodsCodeArray" open="(" separator="," close=")">
                               #{data}
                           </foreach>
                </if>
            </if>
        </if>
        <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchType,'multi') ">
            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(goodsNm)"> <!-- 상품명 -->
                AND GOODS.GOODS_NM LIKE CONCAT('%', #{goodsNm}, '%')
            </if>
            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(startDate)"> <!-- 기간검색 -->
                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(endDate)">
                    AND UPLOAD_LOG.DISCOUNT_START_DT <![CDATA[ <= ]]> (#{endDate} + INTERVAL 1 DAY - INTERVAL 1 SECOND)
                    AND UPLOAD_LOG.DISCOUNT_END_DT <![CDATA[ >= ]]> #{startDate}
                </if>
            </if>

        </if>
        )LOG_INFO
        LEFT OUTER JOIN IL_GOODS_PRICE GP
        ON GP.IL_GOODS_PRICE_ID = LOG_INFO.GOODS_PRICE_ID
    </select>

    <!--───────────────────────────────────────────────────────────────────────
     * description      : 임직원 상품할인 일괄업로드 상세 내역 조회
     * @
     * @ 수정일            수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2020.12.11     정형진
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <select id="getGoodsDiscountEmpUploadDtlList" resultMap="getGoodsDiscountUploadListResultMap">
        /* goodsDiscount.getGoodsDiscountEmpUploadDtlList */
        SELECT
            LOG_INFO.ROWNUM,
            LOG_INFO.ROWNUM AS ROWNUM_STR,
            IFNULL(LOG_INFO.IL_ITEM_CD, '') AS IL_ITEM_CD,
            IFNULL(LOG_INFO.ITEM_BARCODE, '') AS ITEM_BARCODE ,
            LOG_INFO.IL_GOODS_ID,
            LOG_INFO.COMP_NM,
            IFNULL(LOG_INFO.GOODS_NM, '') AS GOODS_NM ,
            LOG_INFO.SUCCESS_YN,
            LOG_INFO.MSG,
            LOG_INFO.DISCOUNT_TP,
            LOG_INFO.DISCOUNT_TP_CODE,
            IFNULL(FN_COMN_CODE_DIC(LOG_INFO.DISCOUNT_TP_CODE), '') AS DISCOUNT_TP_CODE_NM,
            LOG_INFO.DISCOUNT_METHOD_TP,
            LOG_INFO.DISCOUNT_METHOD_TP_CODE,
            IFNULL(FN_COMN_CODE_DIC(LOG_INFO.DISCOUNT_METHOD_TP_CODE), '') AS DISCOUNT_METHOD_TP_CODE_NM,
            LOG_INFO.DISCOUNT_START_DT,
            LOG_INFO.DISCOUNT_END_DT,
            IFNULL(GP.STANDARD_PRICE, '') AS STANDARD_PRICE,
            IFNULL(GP.RECOMMENDED_PRICE, '') AS RECOMMENDED_PRICE,
            IFNULL(LOG_INFO.DISCOUNT_RATIO, '') AS DISCOUNT_RATIO,
            IFNULL(
            TRUNCATE(
            	(GP.RECOMMENDED_PRICE * ((100-LOG_INFO.DISCOUNT_RATIO)/100))
            	, 0) , '') AS DISCOUNT_PRICE
        FROM (
        SELECT
            @ROWNUM :=@ROWNUM +1 AS ROWNUM,
            ITEM.ITEM_BARCODE,
            ITEM.IL_ITEM_CD,
            COMPANY.COMP_NM,
            UPLOAD_LOG.IL_GOODS_ID,
            GOODS.GOODS_NM,
            IF(UPLOAD_LOG.SUCCESS_YN='Y', '성공', '실패') AS  SUCCESS_YN,
            UPLOAD_LOG.MSG,
            UPLOAD_LOG.DISCOUNT_TP,
            CASE WHEN UPLOAD_LOG.DISCOUNT_TP = 1 THEN 'GOODS_DISCOUNT_TP.PRIORITY'
                 WHEN UPLOAD_LOG.DISCOUNT_TP = 2 THEN 'GOODS_DISCOUNT_TP.IMMEDIATE'
            ELSE '' END DISCOUNT_TP_CODE,
            UPLOAD_LOG.DISCOUNT_METHOD_TP,
            CASE WHEN UPLOAD_LOG.DISCOUNT_METHOD_TP = 1 THEN 'GOODS_DISCOUNT_METHOD_TP.FIXED_RATE'
                 WHEN UPLOAD_LOG.DISCOUNT_METHOD_TP = 2 THEN 'GOODS_DISCOUNT_METHOD_TP.FIXED_PRICE'
            ELSE '' END DISCOUNT_METHOD_TP_CODE,
            CAST(UPLOAD_LOG.DISCOUNT_RATIO AS SIGNED) AS DISCOUNT_RATIO,
            DATE_FORMAT(UPLOAD_LOG.DISCOUNT_START_DT, '%Y-%m-%d %H:%i:%s') AS DISCOUNT_START_DT,
            DATE_FORMAT(UPLOAD_LOG.DISCOUNT_END_DT, '%Y-%m-%d %H:%i:%s') AS DISCOUNT_END_DT,
            (SELECT IL_GOODS_PRICE_ID
                FROM IL_GOODS_PRICE
                WHERE IL_GOODS_ID = UPLOAD_LOG.IL_GOODS_ID
                AND NOW() BETWEEN PRICE_START_DT AND PRICE_END_DT
                ORDER BY IL_GOODS_PRICE_ID DESC
                LIMIT 1) AS GOODS_PRICE_ID
        FROM IL_GOODS_DISCOUNT_UPLOAD_DETL_LOG UPLOAD_LOG
        LEFT OUTER JOIN IL_GOODS GOODS
            ON UPLOAD_LOG.IL_GOODS_ID = GOODS.IL_GOODS_ID
        LEFT OUTER JOIN IL_ITEM ITEM
            ON ITEM.IL_ITEM_CD = GOODS.IL_ITEM_CD
        LEFT JOIN  UR_SUPPLIER  SUPPL
            ON  ITEM.UR_SUPPLIER_ID = SUPPL.UR_SUPPLIER_ID
        LEFT JOIN  UR_COMPANY   COMPANY
            ON  SUPPL.UR_COMPANY_ID = COMPANY.UR_COMPANY_ID
        , (SELECT @ROWNUM := 0) TMP
        WHERE 1=1
        AND UPLOAD_LOG.IL_DISCOUNT_EXCEL_UPLOAD_LOG_ID = #{logId}
        <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchType,'single') ">
            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(codeType,'itemCode') ">
                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(goodsCodeArray)">
                    AND ITEM.IL_ITEM_CD IN
                           <foreach item="data" index="index" collection="goodsCodeArray" open="(" separator="," close=")">
                               #{data}
                           </foreach>
                </if>
            </if>
            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(codeType,'barcodeCd') ">
                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(goodsCodeArray)">
                    AND ITEM.ITEM_BARCODE IN
                           <foreach item="data" index="index" collection="goodsCodeArray" open="(" separator="," close=")">
                               #{data}
                           </foreach>
                </if>
            </if>
            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(codeType,'goodsId') ">
                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(goodsCodeArray)">
                    AND UPLOAD_LOG.IL_GOODS_ID IN
                           <foreach item="data" index="index" collection="goodsCodeArray" open="(" separator="," close=")">
                               #{data}
                           </foreach>
                </if>
            </if>
        </if>
        <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchType,'multi') ">
            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(goodsNm)"> <!-- 상품명 -->
                AND GOODS.GOODS_NM LIKE CONCAT('%', #{goodsNm}, '%')
            </if>
            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(startDate)"> <!-- 기간검색 -->
                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(endDate)">
                    AND UPLOAD_LOG.DISCOUNT_START_DT <![CDATA[ <= ]]> (#{endDate} + INTERVAL 1 DAY - INTERVAL 1 SECOND)
                    AND UPLOAD_LOG.DISCOUNT_END_DT <![CDATA[ >= ]]> #{startDate}
                </if>
            </if>

        </if>
        )LOG_INFO
        LEFT OUTER JOIN IL_GOODS_PRICE GP
        ON GP.IL_GOODS_PRICE_ID = LOG_INFO.GOODS_PRICE_ID
    </select>

    <!--───────────────────────────────────────────────────────────────────────
     * description      :  상품 할인 일괄 업로드 상세 내역 조회  - 엑셀 다운로드
     * @
     * @ 수정일            수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2020.12.11     정형진
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <select id="getGoodsDiscountUploadDtlListExcel" resultMap="getGoodsDiscountUploadListResultMap">
        /* goodsDiscount.getGoodsDiscountUploadDtlListExcel */
        SELECT
            LOG_INFO.ROWNUM,
            LOG_INFO.ROWNUM AS ROWNUM_STR,
            IFNULL(LOG_INFO.IL_ITEM_CD, '') AS IL_ITEM_CD,
            IFNULL(LOG_INFO.ITEM_BARCODE, '') AS ITEM_BARCODE ,
            LOG_INFO.IL_GOODS_ID,
            IFNULL(LOG_INFO.GOODS_NM, '') AS GOODS_NM ,
            LOG_INFO.SUCCESS_YN,
            IFNULL(LOG_INFO.MSG, '') AS MSG,
            LOG_INFO.DISCOUNT_TP,
            LOG_INFO.DISCOUNT_TP_CODE,
            FN_COMN_CODE_DIC(LOG_INFO.DISCOUNT_TP_CODE) AS DISCOUNT_TP_CODE_NM,
            LOG_INFO.DISCOUNT_METHOD_TP,
            LOG_INFO.DISCOUNT_METHOD_TP_CODE,
            FN_COMN_CODE_DIC(LOG_INFO.DISCOUNT_METHOD_TP_CODE) AS DISCOUNT_METHOD_TP_CODE_NM,
            IFNULL(LOG_INFO.DISCOUNT_START_DT, '') AS DISCOUNT_START_DT,
            IFNULL(LOG_INFO.DISCOUNT_END_DT, '') AS DISCOUNT_END_DT,
            LOG_INFO.DISCOUNT_SALE_PRICE AS DISCOUNT_SALE_PRICE_STR,
            IFNULL(GP.STANDARD_PRICE, '') AS STANDARD_PRICE_STR,
            IFNULL(GP.RECOMMENDED_PRICE, '') AS RECOMMENDED_PRICE_STR,
            /*
            CASE WHEN LOG_INFO.DISCOUNT_METHOD_TP = '1' THEN LOG_INFO.DISCOUNT_SALE_PRICE
                WHEN  LOG_INFO.DISCOUNT_METHOD_TP = '2' THEN ''
                ELSE '' END DISCOUNT_RATIO_STR,

            CASE WHEN LOG_INFO.DISCOUNT_METHOD_TP = '1' THEN ''
                WHEN  LOG_INFO.DISCOUNT_METHOD_TP = '2' THEN LOG_INFO.DISCOUNT_SALE_PRICE
                ELSE '' END DISCOUNT_PRICE_STR
			*/

 			IFNULL(
              CONCAT(TRUNCATE(CASE WHEN LOG_INFO.DISCOUNT_METHOD_TP_CODE = 'GOODS_DISCOUNT_METHOD_TP.FIXED_RATE' THEN LOG_INFO.DISCOUNT_SALE_PRICE
                WHEN  LOG_INFO.DISCOUNT_METHOD_TP_CODE = 'GOODS_DISCOUNT_METHOD_TP.FIXED_PRICE' THEN ((GP.RECOMMENDED_PRICE - LOG_INFO.DISCOUNT_SALE_PRICE) / GP.RECOMMENDED_PRICE) * 100
                ELSE '' END, 0), ' %'), '') DISCOUNT_RATIO_STR,


            IFNULL(
            TRUNCATE(CASE WHEN LOG_INFO.DISCOUNT_METHOD_TP_CODE = 'GOODS_DISCOUNT_METHOD_TP.FIXED_RATE' THEN (GP.RECOMMENDED_PRICE * ((100-LOG_INFO.DISCOUNT_SALE_PRICE)/100))
                WHEN  LOG_INFO.DISCOUNT_METHOD_TP_CODE = 'GOODS_DISCOUNT_METHOD_TP.FIXED_PRICE' THEN LOG_INFO.DISCOUNT_SALE_PRICE
                ELSE '' END, 0), '') DISCOUNT_PRICE_STR

        FROM (
        SELECT
            @ROWNUM :=@ROWNUM +1 AS ROWNUM,
            ITEM.ITEM_BARCODE,
            ITEM.IL_ITEM_CD,
            UPLOAD_LOG.IL_GOODS_ID,
            GOODS.GOODS_NM,
            IF(UPLOAD_LOG.SUCCESS_YN='Y', '성공', '실패') AS  SUCCESS_YN,
            UPLOAD_LOG.MSG,
            UPLOAD_LOG.DISCOUNT_TP,
            CASE WHEN UPLOAD_LOG.DISCOUNT_TP = 1 THEN 'GOODS_DISCOUNT_TP.PRIORITY'
                 WHEN UPLOAD_LOG.DISCOUNT_TP = 2 THEN 'GOODS_DISCOUNT_TP.IMMEDIATE'
            ELSE UPLOAD_LOG.DISCOUNT_TP END DISCOUNT_TP_CODE,
            UPLOAD_LOG.DISCOUNT_METHOD_TP,
            CASE WHEN UPLOAD_LOG.DISCOUNT_METHOD_TP = 1 THEN 'GOODS_DISCOUNT_METHOD_TP.FIXED_RATE'
                 WHEN UPLOAD_LOG.DISCOUNT_METHOD_TP = 2 THEN 'GOODS_DISCOUNT_METHOD_TP.FIXED_PRICE'
            ELSE UPLOAD_LOG.DISCOUNT_METHOD_TP END DISCOUNT_METHOD_TP_CODE,
            CAST(UPLOAD_LOG.DISCOUNT_SALE_PRICE AS SIGNED) AS DISCOUNT_SALE_PRICE,
            DATE_FORMAT(UPLOAD_LOG.DISCOUNT_START_DT, '%Y-%m-%d %H:%i:%s') AS DISCOUNT_START_DT,
            DATE_FORMAT(UPLOAD_LOG.DISCOUNT_END_DT, '%Y-%m-%d %H:%i:%s') AS DISCOUNT_END_DT,
            (SELECT IL_GOODS_PRICE_ID
                FROM IL_GOODS_PRICE
                WHERE IL_GOODS_ID = UPLOAD_LOG.IL_GOODS_ID
                AND NOW() BETWEEN PRICE_START_DT AND PRICE_END_DT
                ORDER BY IL_GOODS_PRICE_ID DESC
                LIMIT 1) AS GOODS_PRICE_ID
        FROM IL_GOODS_DISCOUNT_UPLOAD_DETL_LOG UPLOAD_LOG
        LEFT OUTER JOIN IL_GOODS GOODS
        ON UPLOAD_LOG.IL_GOODS_ID = GOODS.IL_GOODS_ID
        LEFT OUTER JOIN IL_ITEM ITEM
        ON ITEM.IL_ITEM_CD = GOODS.IL_ITEM_CD
        , (SELECT @ROWNUM := 0) TMP
        WHERE 1=1
        AND UPLOAD_LOG.IL_DISCOUNT_EXCEL_UPLOAD_LOG_ID = #{logId}
        <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchType,'single') ">
            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(codeType,'itemCode') ">
                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(goodsCodeArray)">
                    AND ITEM.IL_ITEM_CD IN
                           <foreach item="data" index="index" collection="goodsCodeArray" open="(" separator="," close=")">
                               #{data}
                           </foreach>
                </if>
            </if>
            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(codeType,'barcodeCd') ">
                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(goodsCodeArray)">
                    AND ITEM.ITEM_BARCODE IN
                           <foreach item="data" index="index" collection="goodsCodeArray" open="(" separator="," close=")">
                               #{data}
                           </foreach>
                </if>
            </if>
            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(codeType,'goodsId') ">
                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(goodsCodeArray)">
                    AND UPLOAD_LOG.IL_GOODS_ID IN
                           <foreach item="data" index="index" collection="goodsCodeArray" open="(" separator="," close=")">
                               #{data}
                           </foreach>
                </if>
            </if>
        </if>
        <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchType,'multi') ">
            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(goodsNm)"> <!-- 상품명 -->
                AND GOODS.GOODS_NM LIKE CONCAT('%', #{goodsNm}, '%')
            </if>
            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(startDate)"> <!-- 기간검색 -->
                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(endDate)">
                    AND UPLOAD_LOG.DISCOUNT_START_DT <![CDATA[ <= ]]> (#{endDate} + INTERVAL 1 DAY - INTERVAL 1 SECOND)
                    AND UPLOAD_LOG.DISCOUNT_END_DT <![CDATA[ >= ]]> #{startDate}
                </if>
            </if>

        </if>
        )LOG_INFO
        LEFT OUTER JOIN IL_GOODS_PRICE GP
        ON GP.IL_GOODS_PRICE_ID = LOG_INFO.GOODS_PRICE_ID
    </select>

    <!--───────────────────────────────────────────────────────────────────────
     * description      : 임직원 상품할인 일괄업로드 상세 내역 조회 - 엑셀 다운로드
     * @
     * @ 수정일            수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2020.12.11     정형진
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <select id="getGoodsDiscountEmpUploadDtlListExcel" resultMap="getGoodsDiscountUploadListResultMap">
        /* goodsDiscount.getGoodsDiscountEmpUploadDtlList */
        SELECT
            LOG_INFO.ROWNUM,
            LOG_INFO.ROWNUM AS ROWNUM_STR,
            IFNULL(LOG_INFO.IL_ITEM_CD, '') AS IL_ITEM_CD,
            IFNULL(LOG_INFO.ITEM_BARCODE, '') AS ITEM_BARCODE ,
            LOG_INFO.IL_GOODS_ID,
            LOG_INFO.COMP_NM,
            IFNULL(LOG_INFO.GOODS_NM, '') AS GOODS_NM ,
            LOG_INFO.SUCCESS_YN,
            LOG_INFO.MSG,
            LOG_INFO.DISCOUNT_TP,
            LOG_INFO.DISCOUNT_TP_CODE,
            IFNULL(FN_COMN_CODE_DIC(LOG_INFO.DISCOUNT_TP_CODE), '') AS DISCOUNT_TP_CODE_NM,
            LOG_INFO.DISCOUNT_METHOD_TP,
            LOG_INFO.DISCOUNT_METHOD_TP_CODE,
            IFNULL(FN_COMN_CODE_DIC(LOG_INFO.DISCOUNT_METHOD_TP_CODE), '') AS DISCOUNT_METHOD_TP_CODE_NM,
            LOG_INFO.DISCOUNT_START_DT,
            LOG_INFO.DISCOUNT_END_DT,
            IFNULL(GP.STANDARD_PRICE, '') AS STANDARD_PRICE_STR,
            IFNULL(GP.RECOMMENDED_PRICE, '') AS RECOMMENDED_PRICE_STR,
            IFNULL(CONCAT(LOG_INFO.DISCOUNT_RATIO, ' %') , '') AS DISCOUNT_RATIO_STR,
            IFNULL(
            TRUNCATE(
            	(GP.RECOMMENDED_PRICE * ((100-LOG_INFO.DISCOUNT_RATIO)/100))
            	, 0) , '') AS DISCOUNT_PRICE_STR
        FROM (
        SELECT
            @ROWNUM :=@ROWNUM +1 AS ROWNUM,
            ITEM.ITEM_BARCODE,
            ITEM.IL_ITEM_CD,
            COMPANY.COMP_NM,
            UPLOAD_LOG.IL_GOODS_ID,
            GOODS.GOODS_NM,
            IF(UPLOAD_LOG.SUCCESS_YN='Y', '성공', '실패') AS  SUCCESS_YN,
            UPLOAD_LOG.MSG,
            UPLOAD_LOG.DISCOUNT_TP,
            CASE WHEN UPLOAD_LOG.DISCOUNT_TP = 1 THEN 'GOODS_DISCOUNT_TP.PRIORITY'
                 WHEN UPLOAD_LOG.DISCOUNT_TP = 2 THEN 'GOODS_DISCOUNT_TP.IMMEDIATE'
            ELSE '' END DISCOUNT_TP_CODE,
            UPLOAD_LOG.DISCOUNT_METHOD_TP,
            CASE WHEN UPLOAD_LOG.DISCOUNT_METHOD_TP = 1 THEN 'GOODS_DISCOUNT_METHOD_TP.FIXED_RATE'
                 WHEN UPLOAD_LOG.DISCOUNT_METHOD_TP = 2 THEN 'GOODS_DISCOUNT_METHOD_TP.FIXED_PRICE'
            ELSE '' END DISCOUNT_METHOD_TP_CODE,
            CAST(UPLOAD_LOG.DISCOUNT_RATIO AS SIGNED) AS DISCOUNT_RATIO,
            DATE_FORMAT(UPLOAD_LOG.DISCOUNT_START_DT, '%Y-%m-%d %H:%i:%s') AS DISCOUNT_START_DT,
            DATE_FORMAT(UPLOAD_LOG.DISCOUNT_END_DT, '%Y-%m-%d %H:%i:%s') AS DISCOUNT_END_DT,
            (SELECT IL_GOODS_PRICE_ID
                FROM IL_GOODS_PRICE
                WHERE IL_GOODS_ID = UPLOAD_LOG.IL_GOODS_ID
                AND NOW() BETWEEN PRICE_START_DT AND PRICE_END_DT
                ORDER BY IL_GOODS_PRICE_ID DESC
                LIMIT 1) AS GOODS_PRICE_ID
        FROM IL_GOODS_DISCOUNT_UPLOAD_DETL_LOG UPLOAD_LOG
        LEFT OUTER JOIN IL_GOODS GOODS
            ON UPLOAD_LOG.IL_GOODS_ID = GOODS.IL_GOODS_ID
        LEFT OUTER JOIN IL_ITEM ITEM
            ON ITEM.IL_ITEM_CD = GOODS.IL_ITEM_CD
        LEFT JOIN  UR_SUPPLIER  SUPPL
            ON  ITEM.UR_SUPPLIER_ID = SUPPL.UR_SUPPLIER_ID
        LEFT JOIN  UR_COMPANY   COMPANY
            ON  SUPPL.UR_COMPANY_ID = COMPANY.UR_COMPANY_ID
        , (SELECT @ROWNUM := 0) TMP
        WHERE 1=1
        AND UPLOAD_LOG.IL_DISCOUNT_EXCEL_UPLOAD_LOG_ID = #{logId}
        <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchType,'single') ">
            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(codeType,'itemCode') ">
                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(goodsCodeArray)">
                    AND ITEM.IL_ITEM_CD IN
                           <foreach item="data" index="index" collection="goodsCodeArray" open="(" separator="," close=")">
                               #{data}
                           </foreach>
                </if>
            </if>
            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(codeType,'barcodeCd') ">
                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(goodsCodeArray)">
                    AND ITEM.ITEM_BARCODE IN
                           <foreach item="data" index="index" collection="goodsCodeArray" open="(" separator="," close=")">
                               #{data}
                           </foreach>
                </if>
            </if>
            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(codeType,'goodsId') ">
                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(goodsCodeArray)">
                    AND UPLOAD_LOG.IL_GOODS_ID IN
                           <foreach item="data" index="index" collection="goodsCodeArray" open="(" separator="," close=")">
                               #{data}
                           </foreach>
                </if>
            </if>
        </if>
        <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchType,'multi') ">
            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(goodsNm)"> <!-- 상품명 -->
                AND GOODS.GOODS_NM LIKE CONCAT('%', #{goodsNm}, '%')
            </if>
            <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(startDate)"> <!-- 기간검색 -->
                <if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(endDate)">
                    AND UPLOAD_LOG.DISCOUNT_START_DT <![CDATA[ <= ]]> (#{endDate} + INTERVAL 1 DAY - INTERVAL 1 SECOND)
                    AND UPLOAD_LOG.DISCOUNT_END_DT <![CDATA[ >= ]]> #{startDate}
                </if>
            </if>

        </if>
        )LOG_INFO
        LEFT OUTER JOIN IL_GOODS_PRICE GP
        ON GP.IL_GOODS_PRICE_ID = LOG_INFO.GOODS_PRICE_ID
    </select>

    <!--───────────────────────────────────────────────────────────────────────
     * description      : 상품 할인 엑셀 업로드 로그 등록
     * @
     * @ 수정일            수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2020.12.07     정형진          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <insert id="addGoodsDiscountExcelLog" >

         <selectKey resultType="string" keyProperty="logId" order="AFTER">
            SELECT IFNULL(MAX(IL_GOODS_DISCOUNT_UPLOAD_LOG_ID), 1)  FROM IL_GOODS_DISCOUNT_UPLOAD_LOG
        </selectKey>

        /* goodsDiscount.addGoodsDiscountExcelLog */
        INSERT INTO IL_GOODS_DISCOUNT_UPLOAD_LOG
        (
            IL_DISC_UPLOAD_TP,
            FILE_NM,
            SUCCESS_CNT,
            FAIL_CNT,
            CREATE_ID,
            CREATE_DT,
            MODIFY_ID,
            MODIFY_DT
        )
        VALUES
        (
          #{uploadTp},
          #{fileNm},
          #{successCnt},
          #{failCnt},
          #{createId},
          NOW(),
          #{createId},
          NOW()

        )

    </insert>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 상품 할인 저장 - 엑셀 업로드
	 * @
	 * @ 수정일			수정자          수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2020.12.07		정형진          최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<insert id="addGoodsDiscountExcelUpload" >
			/* goodsDiscount.addGoodsDiscountExcelUpload */
			INSERT INTO IL_GOODS_DISCOUNT
			(
			      IL_GOODS_ID			/* 상품 PK */
				, DISCOUNT_TP           /* 상품할인 유형 공통코드(GOODS_DISCOUNT_TP - PRIORITY:우선할인, ORGA:올가할인, IMMEDIATE:즉시할인)*/
				, DISCOUNT_START_DT     /* 할인 시작일*/
				, DISCOUNT_END_DT       /* 할인 종료일*/
				, DISCOUNT_METHOD_TP    /* 상품할인 방법 유형 공통코드(GOODS_DISCOUNT_METHOD_TP - FIXED_PRICE:고정가할인, FIXED_RATE:정률할인)*/
				, DISCOUNT_SALE_PRICE   /* 할인판매가*/
				, DISCOUNT_RATIO   		/* 할인율*/
				, USE_YN				/* 사용여부(Y:사용)*/
				, CREATE_ID             /* 등록자*/
			)
			VALUES
			(
				 #{goodsId}
				,#{discountTypeCode}
				,DATE_FORMAT(IFNULL(#{discountStartDate}, ADDDATE(CURDATE(),1)),'%Y-%m-%d %H:%i:%s')
				,DATE_FORMAT(IFNULL(#{discountEndDate}, '2999-12-31 23:59:59.0'), '%Y-%m-%d %H:%i:%s')
				,#{discountMethodTypeCode}
				,#{discountSalePrice}
				,#{discountRatio}
				,'Y'
				,#{createId}
			)
	</insert>

   <!--───────────────────────────────────────────────────────────────────────
     * description      : 상품 할인 엑셀 업로드 상세 로그 등록
     * @
     * @ 수정일            수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2020.12.07     정형진          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <insert id="addGoodsDiscountExcelDtlLog" >
        /* goodsDiscount.addGoodsDiscountExcelDtlLog */
        INSERT INTO IL_GOODS_DISCOUNT_UPLOAD_DETL_LOG
        (
            IL_DISCOUNT_EXCEL_UPLOAD_LOG_ID
            , IL_GOODS_ID
            , DISCOUNT_TP           /* 상품할인 유형 공통코드(GOODS_DISCOUNT_TP - PRIORITY:우선할인, ORGA:올가할인, IMMEDIATE:즉시할인)*/
            , DISCOUNT_START_DT     /* 할인 시작일*/
            , DISCOUNT_END_DT       /* 할인 종료일*/
            , DISCOUNT_METHOD_TP    /* 상품할인 방법 유형 공통코드(GOODS_DISCOUNT_METHOD_TP - FIXED_PRICE:고정가할인, FIXED_RATE:정률할인)*/
            , DISCOUNT_RATIO        /* 할인율*/
            , DISCOUNT_SALE_PRICE   /* 할인판매가*/
            , SUCCESS_YN
            , MSG
            , CREATE_ID
            , CREATE_DT
            , MODIFY_ID
            , MODIFY_DT
        )
        VALUES
        (
            #{logId}
            , #{goodsId}
            , #{discountTypeCode}
            , #{discountStartDate}
            , #{discountEndDate}
            , #{discountMethodTypeCode}
            , #{discountRatio}
            , #{discountSalePrice}
            , #{successYn}
            , #{msg}
            , #{createId}
            , NOW()
            , #{createId}
            , NOW()

        )
    </insert>

    <!--───────────────────────────────────────────────────────────────────────
     * description      : 상품 할인 엑셀 업로드 로그 수정
     * @
     * @ 수정일            수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2020.12.07     정형진          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <update id="putGoodsDiscountExcelLog" >
        /* goodsDiscount.putGoodsDiscountExcelLog */
        UPDATE
            IL_GOODS_DISCOUNT_UPLOAD_LOG
        SET
            SUCCESS_CNT = #{successCnt},
            FAIL_CNT = #{failCnt},
            MODIFY_ID = #{createId},
            MODIFY_DT = NOW()
        WHERE 1=1
        AND IL_GOODS_DISCOUNT_UPLOAD_LOG_ID = #{logId}
    </update>

	<!--───────────────────────────────────────────────────────────────────────
     * description : 묶음상품 기본할인 삭제 전 이전날짜 UPDATE 대상 찾기
     * @
     * @ 수정일         수정자          수정내용
     * @ ──────────────────────────────────────────────────────────────────────
     * @ 2021.02.08     임상건          최초생성
     * @
    ────────────────────────────────────────────────────────────────────────-->
    <select id="getGoodsPackageBaseDiscountUpdateList" resultMap="getGoodsDiscountListResultMap">
		/* goodsDiscount.getGoodsPackageBaseDiscountUpdateList */
		SELECT
			IGD.DISCOUNT_END_DT AS DISCOUNT_END_DATE_TIME						/* 할인종료 날짜시분초*/
		,	DATE_FORMAT(IGD.DISCOUNT_END_DT, '%Y-%m-%d') AS DISCOUNT_END_DATE	/* 할인종료일 */
		,	DATE_FORMAT(IGD.DISCOUNT_END_DT, '%H') AS DISCOUNT_END_HOUR			/* 할인종료시간 */
		,	DATE_FORMAT(IGD.DISCOUNT_END_DT, '%i') AS DISCOUNT_END_MINUTE		/* 할인종료분 */
		,	PREV_IGD.IL_GOODS_DISCOUNT_ID AS GOODS_DISCOUNT_ID
		FROM
			IL_GOODS_DISCOUNT IGD
		LEFT JOIN IL_GOODS_DISCOUNT PREV_IGD ON PREV_IGD.IL_GOODS_ID = IGD.IL_GOODS_ID
			AND IGD.DISCOUNT_END_DT &gt; PREV_IGD.DISCOUNT_END_DT
			AND	PREV_IGD.DISCOUNT_TP = IGD.DISCOUNT_TP
			AND PREV_IGD.USE_YN = 'Y'
		WHERE
			IGD.USE_YN = 'Y'
		AND	IGD.IL_GOODS_DISCOUNT_ID = #{goodsDiscountId}
		AND	IGD.DISCOUNT_TP = #{discountTypeCode}
		ORDER BY PREV_IGD.DISCOUNT_END_DT DESC
		LIMIT 1
    </select>

    <!--───────────────────────────────────────────────────────────────────────
	 * description 		: 묶음상품 > 묶음 상품 가격정보 저장(프로시져 호출)
	 * @
	 * @ 수정일			수정자		  수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.02.09		임상건		  최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
    <update id="spGoodsPriceUpdateWhenPackageGoodsChanges" statementType="CALLABLE" parameterType="kr.co.pulmuone.v1.goods.goods.dto.GoodsRegistRequestDto">
		/* goodsDiscount.spGoodsPriceUpdateWhenPackageGoodsChanges */
		CALL SP_GOODS_PRICE_UPDATE_WHEN_PACKAGE_GOODS_CHANGES(
			#{ilGoodsId}
		,	#{inDebugFlag}
		)
	</update>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 상품 할인정보 저장/Update에 따른 상품 가격정보 Update(프로시져 호출)
	 * @
	 * @ 수정일			수정자		  수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.02.26		임상건		  최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<update id="spGoodsPriceUpdateWhenGoodsDiscountChanges" statementType="CALLABLE">
		/* goodsDiscount.spGoodsPriceUpdateWhenGoodsDiscountChanges */
		CALL SP_GOODS_PRICE_UPDATE_WHEN_GOODS_DISCOUNT_CHANGES(
			#{ilGoodsId}
		,	#{inDebugFlag}
		)
	</update>

	<!--───────────────────────────────────────────────────────────────────────
	 * description 		: 상품 할인 승인 내역 확인, 승인 내역 존재시 요청 자격 확인
	 * @
	 * @ 수정일			수정자		  수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.05.03		임상건		  최초생성
	────────────────────────────────────────────────────────────────────────-->
	<resultMap type="kr.co.pulmuone.v1.goods.goods.dto.vo.GoodsDiscountApprVo" id="goodsDiscountApprInfoMap">
		<result column="IL_GOODS_DISCOUNT_APPR_ID"	property="ilGoodsDiscountApprId"/>
		<result column="IL_GOODS_DISCOUNT_ID"		property="ilGoodsDiscountId"/>
		<result column="IL_GOODS_ID"				property="ilGoodsId"/>
		<result column="APPR_STAT"					property="apprStat"/>
		<result column="DISCOUNT_START_DT"			property="discountStartDt"/>
	</resultMap>
	<select id="goodsDiscountApprInfo" resultMap="goodsDiscountApprInfoMap">
		/* goodsRegist.goodsDiscountApprInfo */
		SELECT
			IGDA.IL_GOODS_DISCOUNT_APPR_ID
		,	IGDA.IL_GOODS_DISCOUNT_ID
		,	IGDA.IL_GOODS_ID
		,	IGDA.APPR_STAT
		,	IGDA.DISCOUNT_START_DT
		FROM
		IL_GOODS_DISCOUNT_APPR IGDA
		INNER JOIN IL_GOODS IG ON IG.IL_GOODS_ID = IGDA.IL_GOODS_ID
		WHERE
		<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(goodsDiscountApprId)">
			IGDA.IL_GOODS_DISCOUNT_APPR_ID = #{goodsDiscountApprId}
		</if>
	</select>
</mapper>