<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.pulmuone.v1.comm.mapper.goods.goods.GoodsChangeLogListMapper">

	<!-- 상품목록 resultMap -->
	<resultMap id="getGoodsChangeLogListResultMap" type="kr.co.pulmuone.v1.goods.goods.dto.vo.GoodsChangeLogListVo">
		<result column="CREATE_DT"			property="createDate"/>
		<result column="IL_GOODS_ID"		property="ilGoodsId"/>
		<result column="IL_ITEM_CD"			property="ilItemCode"/>
		<result column="ITEM_BARCODE"		property="itemBarcode"/>
		<result column="GOODS_TP"			property="goodsType"/>
		<result column="GOODS_TYPE_NAME"	property="goodsTypeName"/>
		<result column="GOODS_NM"			property="goodsName"/>
		<result column="CHARGE_NAME"		property="chargeName"/>
		<result column="CHARGE_ID"			property="chargeId"/>
	</resultMap>

	<!--───────────────────────────────────────────────────────────────────────
	 * description	  : 상품목록 조회
	 * @
	 * @ 수정일		 수정자		  수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ 2021.04.21	 임상건		  최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<select id="getGoodsChangeLogList" resultMap="getGoodsChangeLogListResultMap">
		/* goodsChangeLogList.getGoodsChangeLogList */
		SELECT
			IGCL.CREATE_DT
		,	IGCL.IL_GOODS_ID
		,	II.IL_ITEM_CD
		,	IFNULL(II.ITEM_BARCODE, '') AS ITEM_BARCODE
		,	IG.GOODS_TP
		,	GOODS_TYPE_CODE.NAME AS GOODS_TYPE_NAME
		,	IG.GOODS_NM
		,	FN_DECRYPT(UU.USER_NM) AS CHARGE_NAME
		,	UU.LOGIN_ID AS CHARGE_ID
		FROM (
			SELECT
				IGCL.IL_GOODS_ID
			,	IGCL.CREATE_DT
			,	IGCL.CREATE_ID
			FROM
				IL_GOODS_CHNAGE_LOG IGCL
			GROUP BY
				IGCL.IL_GOODS_ID, IGCL.CREATE_DT
			ORDER BY
				IGCL.IL_GOODS_ID DESC, IGCL.CREATE_DT DESC
		) IGCL
		INNER JOIN IL_GOODS IG ON IG.IL_GOODS_ID = IGCL.IL_GOODS_ID
		INNER JOIN IL_ITEM II ON II.IL_ITEM_CD = IG.IL_ITEM_CD
		LEFT JOIN (
			SELECT
				A.ST_COMN_CODE_ID AS CODE
				, B.DIC_NM AS NAME
			FROM
				ST_COMN_CODE A
			INNER JOIN GB_DIC B ON A.GB_DIC_MST_ID = B.GB_DIC_MST_ID AND B.GB_LANG_ID = '1'
			WHERE
				A.ST_COMN_CODE_MST_CD = 'GOODS_TYPE'
			AND A.USE_YN = UPPER('Y')
		) GOODS_TYPE_CODE ON GOODS_TYPE_CODE.CODE = IG.GOODS_TP
		LEFT JOIN UR_USER UU ON UU.UR_USER_ID = IGCL.CREATE_ID
		<where>
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(selectConditionType)">
				<choose>
					<when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(selectConditionType, "singleSection")'> <!-- 최근 수정일 -->
						<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(findKeyword)"> <!-- 복수검색 -->
							<choose>
								<when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchCondition, "ALL")'> <!-- 전체 -->
									AND
									(
										IG.IL_GOODS_ID IN
										<foreach collection="findKeywordList" item="goodsId" index="index" separator="," open="(" close=")">
											#{goodsId}
										</foreach>
									 OR
										II.IL_ITEM_CD IN
										<foreach collection="findKeywordList" item="itemCode" index="index" separator="," open="(" close=")">
											#{itemCode}
										</foreach>
									 OR
										II.ERP_ITEM_BARCODE IN
										<foreach collection="findKeywordList" item="erpItemBarcode" index="index" separator="," open="(" close=")">
											#{erpItemBarcode}
										</foreach>
									 OR
										II.ITEM_BARCODE IN
										<foreach collection="findKeywordList" item="itemBarcode" index="index" separator="," open="(" close=")">
											#{itemBarcode}
										</foreach>
									)
								</when>
								<when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchCondition, "GOODS_CODE")'> <!-- 상품코드 -->
									<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(findKeywordStrFlag, 'Y')">
										IG.IL_GOODS_ID IN
									</if>
									<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(findKeywordStrFlag, 'N')">
										CAST(IG.IL_GOODS_ID AS UNSIGNED)  IN
									</if>
									<foreach collection="findKeywordList" item="goodsId" index="index" separator="," open="(" close=")">
										#{goodsId}
									</foreach>
								</when>
								<when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchCondition, "ITEM_CODE")'> <!-- 마스터 품목코드 -->

									<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(findKeywordStrFlag, 'Y')">
										II.IL_ITEM_CD IN
									</if>
									<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(findKeywordStrFlag, 'N')">
										CAST(II.IL_ITEM_CD AS UNSIGNED)  IN
									</if>

									<foreach collection="findKeywordList" item="itemCode" index="index" separator="," open="(" close=")">
										#{itemCode}
									</foreach>
								</when>
								<when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchCondition, "ITEM_BARCODE")'> <!-- 품목 바코드 -->
									AND
									(
										<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(findKeywordStrFlag, 'Y')">
											II.ERP_ITEM_BARCODE IN
										</if>
										<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(findKeywordStrFlag, 'N')">
											CAST(II.ERP_ITEM_BARCODE AS UNSIGNED)  IN
										</if>

										<foreach collection="findKeywordList" item="erpItemBarcode" index="index" separator="," open="(" close=")">
											#{erpItemBarcode}
										</foreach>
									 OR
									 	<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(findKeywordStrFlag, 'Y')">
											II.ITEM_BARCODE IN
										</if>
										<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(findKeywordStrFlag, 'N')">
											CAST(II.ITEM_BARCODE AS UNSIGNED)  IN
										</if>
										<foreach collection="findKeywordList" item="itemBarcode" index="index" separator="," open="(" close=")">
											#{itemBarcode}
										</foreach>
									)
								</when>
							</choose>
						</if>
					</when>
					<otherwise>
						<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(goodsName)"> <!-- 상품명 -->
							AND IG.GOODS_NM LIKE CONCAT('%', #{goodsName}, '%')
						</if>
						<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEquals(chargeType, 'ALL') and @kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(charge)">
							<choose>
								<when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(chargeType, 'createName')"> <!-- 등록자명 -->
									AND FN_DECRYPT(UU.USER_NM) = #{charge}
								</when>
								<when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(chargeType, 'createId')"> <!-- 등록자 LOGIN ID -->
									AND UU.LOGIN_ID = #{charge}
								</when>
							</choose>
						</if>
						<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(dateSearchStart)"> <!-- 업데이트일 검색 -->
							<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(dateSearchEnd)">
								AND IGCL.CREATE_DT BETWEEN #{dateSearchStart} AND (#{dateSearchEnd} + INTERVAL 1 DAY - INTERVAL 1 SECOND)
							</if>
						</if>
					</otherwise>
				</choose>
			</if>
		</where>
		ORDER BY IGCL.IL_GOODS_ID DESC, IGCL.CREATE_DT DESC
	</select>

	 <!--───────────────────────────────────────────────────────────────────────
	 * description	  : 상품목록 조회 - 엑셀다운로드
	 * @
	 * @ 수정일		 수정자		  수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ * @ 2021.04.21	 임상건		  최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<select id="getGoodsChangeLogListExcel" resultMap="getGoodsChangeLogListResultMap">
		/* goodsChangeLogList.getGoodsChangeLogListExcel */
		SELECT
			IGCL.CREATE_DT
		,	IGCL.IL_GOODS_ID
		,	II.IL_ITEM_CD
		,	IFNULL(II.ITEM_BARCODE, '') AS ITEM_BARCODE
		,	GOODS_TYPE_CODE.NAME AS GOODS_TYPE_NAME
		,	IG.GOODS_NM
		,	FN_DECRYPT(UU.USER_NM) AS CHARGE_NAME
		,	UU.LOGIN_ID AS CHARGE_ID
		FROM (
			SELECT
				IGCL.IL_GOODS_ID
			,	IGCL.CREATE_DT
			,	IGCL.CREATE_ID
			FROM
				IL_GOODS_CHNAGE_LOG IGCL
			GROUP BY
				IGCL.IL_GOODS_ID, IGCL.CREATE_DT
			ORDER BY
				IGCL.IL_GOODS_ID DESC, IGCL.CREATE_DT DESC
		) IGCL
		INNER JOIN IL_GOODS IG ON IG.IL_GOODS_ID = IGCL.IL_GOODS_ID
		INNER JOIN IL_ITEM II ON II.IL_ITEM_CD = IG.IL_ITEM_CD
		LEFT JOIN (
			SELECT
				A.ST_COMN_CODE_ID AS CODE
				, B.DIC_NM AS NAME
			FROM
				ST_COMN_CODE A
			INNER JOIN GB_DIC B ON A.GB_DIC_MST_ID = B.GB_DIC_MST_ID AND B.GB_LANG_ID = '1'
			WHERE
				A.ST_COMN_CODE_MST_CD = 'GOODS_TYPE'
			AND A.USE_YN = UPPER('Y')
		) GOODS_TYPE_CODE ON GOODS_TYPE_CODE.CODE = IG.GOODS_TP
		LEFT JOIN UR_USER UU ON UU.UR_USER_ID = IGCL.CREATE_ID
		<where>
			<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(selectConditionType)">
				<choose>
					<when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(selectConditionType, "singleSection")'> <!-- 최근 수정일 -->
						<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(findKeyword)"> <!-- 복수검색 -->
							<choose>
								<when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchCondition, "ALL")'> <!-- 전체 -->
									AND
									(
										IG.IL_GOODS_ID IN
										<foreach collection="findKeywordList" item="goodsId" index="index" separator="," open="(" close=")">
											#{goodsId}
										</foreach>
									 OR
										II.IL_ITEM_CD IN
										<foreach collection="findKeywordList" item="itemCode" index="index" separator="," open="(" close=")">
											#{itemCode}
										</foreach>
									 OR
										II.ERP_ITEM_BARCODE IN
										<foreach collection="findKeywordList" item="erpItemBarcode" index="index" separator="," open="(" close=")">
											#{erpItemBarcode}
										</foreach>
									 OR
										II.ITEM_BARCODE IN
										<foreach collection="findKeywordList" item="itemBarcode" index="index" separator="," open="(" close=")">
											#{itemBarcode}
										</foreach>
									)
								</when>
								<when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchCondition, "GOODS_CODE")'> <!-- 상품코드 -->
									<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(findKeywordStrFlag, 'Y')">
										IG.IL_GOODS_ID IN
									</if>
									<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(findKeywordStrFlag, 'N')">
										CAST(IG.IL_GOODS_ID AS UNSIGNED)  IN
									</if>
									<foreach collection="findKeywordList" item="goodsId" index="index" separator="," open="(" close=")">
										#{goodsId}
									</foreach>
								</when>
								<when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchCondition, "ITEM_CODE")'> <!-- 마스터 품목코드 -->

									<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(findKeywordStrFlag, 'Y')">
										II.IL_ITEM_CD IN
									</if>
									<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(findKeywordStrFlag, 'N')">
										CAST(II.IL_ITEM_CD AS UNSIGNED)  IN
									</if>

									<foreach collection="findKeywordList" item="itemCode" index="index" separator="," open="(" close=")">
										#{itemCode}
									</foreach>
								</when>
								<when test='@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(searchCondition, "ITEM_BARCODE")'> <!-- 품목 바코드 -->
									AND
									(
										<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(findKeywordStrFlag, 'Y')">
											II.ERP_ITEM_BARCODE IN
										</if>
										<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(findKeywordStrFlag, 'N')">
											CAST(II.ERP_ITEM_BARCODE AS UNSIGNED)  IN
										</if>

										<foreach collection="findKeywordList" item="erpItemBarcode" index="index" separator="," open="(" close=")">
											#{erpItemBarcode}
										</foreach>
									 OR
									 	<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(findKeywordStrFlag, 'Y')">
											II.ITEM_BARCODE IN
										</if>
										<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(findKeywordStrFlag, 'N')">
											CAST(II.ITEM_BARCODE AS UNSIGNED)  IN
										</if>
										<foreach collection="findKeywordList" item="itemBarcode" index="index" separator="," open="(" close=")">
											#{itemBarcode}
										</foreach>
									)
								</when>
							</choose>
						</if>
					</when>
					<otherwise>
						<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(goodsName)"> <!-- 상품명 -->
							AND IG.GOODS_NM LIKE CONCAT('%', #{goodsName}, '%')
						</if>
						<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEquals(chargeType, 'ALL') and @kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(charge)">
							<choose>
								<when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(chargeType, 'createName')"> <!-- 등록자명 -->
									AND FN_DECRYPT(UU.USER_NM) = #{charge}
								</when>
								<when test="@kr.co.pulmuone.v1.comm.util.StringUtil@isEquals(chargeType, 'createId')"> <!-- 등록자 LOGIN ID -->
									AND UU.LOGIN_ID = #{charge}
								</when>
							</choose>
						</if>
						<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(dateSearchStart)"> <!-- 업데이트일 검색 -->
							<if test="@kr.co.pulmuone.v1.comm.util.StringUtil@isNotEmpty(dateSearchEnd)">
								AND IGCL.CREATE_DT BETWEEN #{dateSearchStart} AND (#{dateSearchEnd} + INTERVAL 1 DAY - INTERVAL 1 SECOND)
							</if>
						</if>
					</otherwise>
				</choose>
			</if>
		</where>
		ORDER BY IGCL.IL_GOODS_ID DESC, IGCL.CREATE_DT DESC
	</select>

	 <!--───────────────────────────────────────────────────────────────────────
	 * description	  : 업데이트 상세 내역
	 * @
	 * @ 수정일		 수정자		  수정내용
	 * @ ──────────────────────────────────────────────────────────────────────
	 * @ * @ 2021.04.21	 임상건		  최초생성
	 * @
	────────────────────────────────────────────────────────────────────────-->
	<resultMap id="getGoodsChangeLogPopupMap" type="kr.co.pulmuone.v1.goods.goods.dto.vo.GoodsChangeLogListVo">
		<result column="COLUMN_NM"		property="columnName"/>
		<result column="COLUMN_LABEL"	property="columnLabel"/>
		<result column="BEFORE_DATA"	property="beforeData"/>
		<result column="AFTER_DATA"		property="afterData"/>
	</resultMap>

	<select id="getGoodsChangeLogPopup" resultMap="getGoodsChangeLogPopupMap">
		/* goodsChangeLogList.getGoodsChangeLogPopup */
		SELECT
			IGCL.COLUMN_NM
		,	IGCL.COLUMN_LABEL
		,	IFNULL(BEFORE_CODE.NAME, IGCL.BEFORE_DATA) AS BEFORE_DATA
		,	IFNULL(AFTER_CODE.NAME, IGCL.AFTER_DATA) AS AFTER_DATA
		FROM
			IL_GOODS_CHNAGE_LOG IGCL
		LEFT JOIN (
			SELECT
				A.ST_COMN_CODE_ID AS CODE
				, B.DIC_NM AS NAME
				, A.ST_COMN_CODE_MST_CD
			FROM
				ST_COMN_CODE A
			INNER JOIN GB_DIC B ON A.GB_DIC_MST_ID = B.GB_DIC_MST_ID AND B.GB_LANG_ID = '1'
			WHERE
				A.USE_YN = UPPER('Y')
		) BEFORE_CODE ON BEFORE_CODE.ST_COMN_CODE_MST_CD = SUBSTRING_INDEX(IGCL.BEFORE_DATA, ".", 1) AND BEFORE_CODE.CODE = IGCL.BEFORE_DATA
		LEFT JOIN (
			SELECT
				A.ST_COMN_CODE_ID AS CODE
				, B.DIC_NM AS NAME
				, A.ST_COMN_CODE_MST_CD
			FROM
				ST_COMN_CODE A
			INNER JOIN GB_DIC B ON A.GB_DIC_MST_ID = B.GB_DIC_MST_ID AND B.GB_LANG_ID = '1'
			WHERE
				A.USE_YN = UPPER('Y')
		) AFTER_CODE ON AFTER_CODE.ST_COMN_CODE_MST_CD = SUBSTRING_INDEX(IGCL.AFTER_DATA, ".", 1) AND AFTER_CODE.CODE = IGCL.AFTER_DATA
		WHERE
			IL_GOODS_ID = #{ilGoodsId}
		AND	CREATE_DT = #{createDate}
	</select>
</mapper>